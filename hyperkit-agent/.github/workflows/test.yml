name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run linters
      run: |
        pip install black isort flake8 mypy
        black --check hyperkit-agent/
        isort --check-only hyperkit-agent/
        flake8 hyperkit-agent/ --max-line-length=120
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=hyperkit-agent --cov-report=xml --cov-report=term
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Build Solidity contracts
      run: |
        cd hyperkit-agent
        forge build
    
    - name: Run Solidity tests
      run: |
        cd hyperkit-agent
        forge test -vvv
    
    - name: Cleanroom deployment test
      run: |
        cd hyperkit-agent
        # Test that contracts can be deployed from artifacts
        python -c "
        from services.deployment.foundry_deployer import FoundryDeployer
        deployer = FoundryDeployer()
        # Verify network configs exist
        for network in ['hyperion', 'lazai', 'metis']:
            config = deployer.get_network_config(network)
            assert config is not None, f'Network {network} not configured'
            assert 'chain_id' in config
            assert 'rpc_url' in config
        print('✅ Cleanroom deployment validation passed')
        "

  new-developer-onboarding:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly
    
    - name: Run 30-minute onboarding test
      run: |
        cd hyperkit-agent
        chmod +x tests/test_new_developer_onboarding.sh
        # Run test but allow failure to not block CI (it's a validation test)
        ./tests/test_new_developer_onboarding.sh || echo "⚠️ Onboarding test found issues - see output above"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        pip install bandit safety
        bandit -r hyperkit-agent/ -f json -o bandit-report.json || true
        safety check --json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Build package
      run: |
        python -m pip install --upgrade pip build
        python -m build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

