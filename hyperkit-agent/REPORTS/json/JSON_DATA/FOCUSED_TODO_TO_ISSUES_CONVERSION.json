{
  "scan_date": "2025-10-28T19:46:35.092177",
  "git_info": {
    "commit_hash": "f390d2c3",
    "branch": "main"
  },
  "total_todos": 369,
  "categories": {
    "cli_commands": [],
    "documentation": [
      {
        "file": ".\\docs\\API_REFERENCE.md",
        "line": 345,
        "text": "xXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx\",",
        "type": "XXX",
        "context": "     342: {\n     343:   \"status\": \"success\",\n     344:   \"storage\": {\n>>>  345:     \"cid\": \"QmXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx\",\n     346:     \"url\": \"https://gateway.pinata.cloud/ipfs/QmXx...\",\n     347:     \"pinata_url\": \"https://app.pinata.cloud/pinmanager?search=QmXx...\",\n     348:     \"size\": 2048",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\CLI_COMMANDS_REFERENCE.md",
        "line": 24,
        "text": ", -d` - Enable debug mode",
        "type": "BUG",
        "context": "      21: \n      22: ### Global Options\n      23: - `--verbose, -v` - Enable verbose output\n>>>   24: - `--debug, -d` - Enable debug mode\n      25: \n      26: ---\n      27: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 31,
        "text": "](#-post-incident-review)",
        "type": "REVIEW",
        "context": "      28: - [Incident Response Workflow](#-incident-response-workflow)\n      29: - [Emergency Patch Deployment](#-emergency-patch-deployment)\n      30: - [Communication Protocols](#-communication-protocols)\n>>>   31: - [Post-Incident Review](#-post-incident-review)\n      32: - [Fire Drill Schedule](#-fire-drill-schedule)\n      33: \n      34: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 43,
        "text": "s, UX issues | < 1 week | UI glitches, documentation errors |",
        "type": "BUG",
        "context": "      40: | **P0 - Critical** | Active exploit, funds at risk, data breach | Immediate (< 1 hour) | Private key leaked, active reentrancy exploit, RCE vulnerability |\n      41: | **P1 - High** | Security vulnerability, no active exploit | < 24 hours | Unpatched CVE in dependencies, insecure contract function |\n      42: | **P2 - Medium** | Functionality broken, user impact | < 48 hours | Deployment failures, broken workflows |\n>>>   43: | **P3 - Low** | Minor bugs, UX issues | < 1 week | UI glitches, documentation errors |\n      44: \n      45: ---\n      46: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 62,
        "text": "Bounty Platform** | support@immunefi.com | Coordinate with security researchers |",
        "type": "BUG",
        "context": "      59: \n      60: | Service | Contact | Purpose |\n      61: |---------|---------|---------|\n>>>   62: | **Bug Bounty Platform** | support@immunefi.com | Coordinate with security researchers |\n      63: | **Hosting Provider** | [Provider Support] | Infrastructure issues |\n      64: | **Blockchain Explorers** | [Explorer Support] | Verification issues |\n      65: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 136,
        "text": "commit history: git log --all --oneline --graph",
        "type": "REVIEW",
        "context": "     133: \n     134: ```bash\n     135: # 1. Root cause analysis\n>>>  136: - Review commit history: git log --all --oneline --graph\n     137: - Check affected code: git blame <file>\n     138: - Identify introduction point\n     139: - Document exploit timeline",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 181,
        "text": "by 2+ team members",
        "type": "REVIEW",
        "context": "     178: # 1. Internal validation\n     179: - Run all tests: pytest tests/ -v\n     180: - Security scan: bandit -r . -ll\n>>>  181: - Peer review by 2+ team members\n     182: \n     183: # 2. Deploy patch\n     184: # Quick patch process (bypasses normal CI for P0):",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 201,
        "text": "s complete",
        "type": "REVIEW",
        "context": "     198: **Fast-Track Deployment Checklist**:\n     199: - [ ] All tests passing\n     200: - [ ] Security scans clean\n>>>  201: - [ ] 2+ peer reviews complete\n     202: - [ ] Patch committed and tagged\n     203: - [ ] Testnet deployment successful (if applicable)\n     204: - [ ] Production deployment successful",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 244,
        "text": "bounty researcher credited (if applicable)",
        "type": "BUG",
        "context": "     241: - [ ] Team notified (< 15 min)\n     242: - [ ] Stakeholders updated (< 1 hour)\n     243: - [ ] Public notice issued (if warranted)\n>>>  244: - [ ] Bug bounty researcher credited (if applicable)\n     245: - [ ] Post-mortem scheduled\n     246: \n     247: ### Phase 6: Monitoring (24-72 hours)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 255,
        "text": "logs: tail -f logs/hyperagent.log",
        "type": "REVIEW",
        "context": "     252: hyperagent monitor system\n     253: \n     254: # Check for exploit attempts\n>>>  255: # Review logs: tail -f logs/hyperagent.log\n     256: \n     257: # Monitor blockchain activity\n     258: # Check deployed contracts for suspicious transactions",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 306,
        "text": "before continuing\"",
        "type": "REVIEW",
        "context": "     303: \n     304: # 3. Security scan\n     305: echo \"\ud83d\udd12 Running security scan...\"\n>>>  306: bandit -r . -ll || echo \"\u26a0\ufe0f Security warnings detected - review before continuing\"\n     307: \n     308: # 4. Build contracts\n     309: echo \"\ud83d\udd28 Building contracts...\"",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 392,
        "text": "Bounty Communication",
        "type": "BUG",
        "context": "     389: Thank you for your patience. \ud83d\ude4f\n     390: ```\n     391: \n>>>  392: ### Bug Bounty Communication\n     393: \n     394: **Template for Researcher Response**:\n     395: ```",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 495,
        "text": "and planning | Leadership |",
        "type": "REVIEW",
        "context": "     492: | September | Blockchain fork handling | Tech Lead |\n     493: | October | Audit tool failure handling | Security Lead |\n     494: | November | Full system compromise | All Hands |\n>>>  495: | December | Year-end review and planning | Leadership |\n     496: \n     497: ### Fire Drill Procedure\n     498: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 510,
        "text": "bounty",
        "type": "BUG",
        "context": "     507: \n     508: ## \ud83d\udcda Related Documentation\n     509: \n>>>  510: - [SECURITY.md](../../SECURITY.md) - Security policy and bug bounty\n     511: - [SECURITY_AUDIT_LOG.md](./SECURITY_AUDIT_LOG.md) - Vulnerability tracking\n     512: - [CONTRIBUTING.md](../../CONTRIBUTING.md) - Security requirements for contributors\n     513: - [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) - Current project status",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 528,
        "text": "**: 2025-11-26",
        "type": "REVIEW",
        "context": "     525: **Maintained by**: HyperKit Security & Operations Team  \n     526: **Last Updated**: October 27, 2025  \n     527: **Version**: 1.4.6  \n>>>  528: **Next Review**: 2025-11-26  \n     529: **Last Drill**: TBD  \n     530: **Location**: `/hyperkit-agent/docs/EMERGENCY_RESPONSE.md`\n     531: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXTERNAL_MONITORING.md",
        "line": 272,
        "text": "**: 2025-11-26",
        "type": "REVIEW",
        "context": "     269: ---\n     270: \n     271: **Status**: \u23f3 **ROADMAP** - Implementation planned for Q1 2025  \n>>>  272: **Next Review**: 2025-11-26\n     273: \n     274: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 28,
        "text": "from Code Owners",
        "type": "REVIEW",
        "context": "      25: - \u2611\ufe0f Require a pull request before merging\n      26:   - \u2611\ufe0f Require approvals: **2**\n      27:   - \u2611\ufe0f Dismiss stale pull request approvals when new commits are pushed\n>>>   28:   - \u2611\ufe0f Require review from Code Owners\n      29: - \u2611\ufe0f Require status checks to pass before merging\n      30:   - \u2611\ufe0f Require branches to be up to date before merging\n      31:   - Required status checks:",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 48,
        "text": "Report (`bug_report.md`)",
        "type": "BUG",
        "context": "      45: \n      46: Create `.github/ISSUE_TEMPLATE/` with:\n      47: \n>>>   48: ### 1. Bug Report (`bug_report.md`)\n      49: Already created \u2705\n      50: \n      51: ### 2. Feature Request (`feature_request.md`)",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 70,
        "text": "bounty information, see SECURITY.md",
        "type": "BUG",
        "context": "      67:         Please report security issues to: security@hyperkit.dev\n      68:         Or use GitHub Security Advisories (private)\n      69:         \n>>>   70:         For bug bounty information, see SECURITY.md\n      71: ```\n      72: \n      73: ---",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 129,
        "text": "` (red)",
        "type": "BUG",
        "context": "     126: - `P3: Low` (green)\n     127: \n     128: **Type**:\n>>>  129: - `bug` (red)\n     130: - `feature` (blue)\n     131: - `documentation` (light blue)\n     132: - `security` (dark red)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 136,
        "text": "` (yellow)",
        "type": "REVIEW",
        "context": "     133: - `enhancement` (purple)\n     134: \n     135: **Status**:\n>>>  136: - `needs-review` (yellow)\n     137: - `in-progress` (blue)\n     138: - `blocked` (red)\n     139: - `wontfix` (grey)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 174,
        "text": "s all changes",
        "type": "REVIEW",
        "context": "     171: \n     172: Create `.github/CODEOWNERS`:\n     173: ```\n>>>  174: # Core team reviews all changes\n     175: * @core-team\n     176: \n     177: # Security-critical files require security team",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 220,
        "text": "bounty activation",
        "type": "BUG",
        "context": "     217: 1. **v4.2.0 - Q1 2025**\n     218:    - External security audit\n     219:    - Public launch\n>>>  220:    - Bug bounty activation\n     221: \n     222: 2. **v4.3.0 - Q2 2025**\n     223:    - Mainnet production deployment",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 255,
        "text": "ers for PRs",
        "type": "REVIEW",
        "context": "     252: \n     253: ### Security\n     254: - [ ] Enable branch protection on `main`\n>>>  255: - [ ] Require 2+ reviewers for PRs\n     256: - [ ] Enable Dependabot\n     257: - [ ] Enable secret scanning\n     258: - [ ] Add repository secrets",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 292,
        "text": "s='{\"required_approving_review_count\":2,\"dismiss_stale_reviews\":true}' \\",
        "type": "REVIEW",
        "context": "     289:   --method PUT \\\n     290:   --field required_status_checks='{\"strict\":true,\"contexts\":[\"test (3.10)\",\"test (3.11)\",\"test (3.12)\",\"lint\",\"security-scan\"]}' \\\n     291:   --field enforce_admins=true \\\n>>>  292:   --field required_pull_request_reviews='{\"required_approving_review_count\":2,\"dismiss_stale_reviews\":true}' \\\n     293:   --field restrictions=null\n     294: \n     295: # Enable Dependabot",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 22,
        "text": "ging but messier for deployment.",
        "type": "BUG",
        "context": "      19: **What You're Missing**: Any one of these fails = entire system fails.\n      20: \n      21: ### **Assumption 2**: \"Docker setup is easier\"\n>>>   22: **Challenge**: **MAYBE**. Docker isolates issues but adds networking complexity. Local setup is simpler for debugging but messier for deployment.\n      23: \n      24: ### **Assumption 3**: \"This will work immediately\"\n      25: **Challenge**: **HAHA NO**. Expect 2-4 hours of troubleshooting authentication, ports, and API keys.",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 40,
        "text": "the port (default: 27124)",
        "type": "NOTE",
        "context": "      37: 3. Install plugin by \"coddingtonbear\"\n      38: 4. Enable the plugin\n      39: 5. Open plugin settings \u2192 Copy API Key (save this!)\n>>>   40: 6. Note the port (default: 27124)\n      41: ```\n      42: \n      43: **Expected Output**: You should see API key like `abc123xyz456...`",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 248,
        "text": "ging",
        "type": "BUG",
        "context": "     245: Adding RAG to a broken system = broken system with RAG.\n     246: \n     247: **The Setup I Gave You**:\n>>>  248: - **Local**: 30 minutes if everything works, 2 hours if debugging\n     249: - **Docker**: 45 minutes if everything works, 4 hours if networking issues\n     250: \n     251: **My Recommendation**: Start with LOCAL setup. Debug it. THEN containerize.",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 251,
        "text": "it. THEN containerize.",
        "type": "BUG",
        "context": "     248: - **Local**: 30 minutes if everything works, 2 hours if debugging\n     249: - **Docker**: 45 minutes if everything works, 4 hours if networking issues\n     250: \n>>>  251: **My Recommendation**: Start with LOCAL setup. Debug it. THEN containerize.\n     252: \n     253: **Stop collecting features like Pokemon**. Make ONE thing work perfectly before adding the next.\n     254: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 260,
        "text": "**: 2-4 hours",
        "type": "BUG",
        "context": "     257: ---\n     258: \n     259: **Time to Setup**: 1-2 hours  \n>>>  260: **Time to Debug**: 2-4 hours  \n     261: **Probability It Works First Try**: 20%\n     262: \n     263: **Your Choice**: Quick and broken, or slow and working?",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\PRODUCTION_MODE.md",
        "line": 223,
        "text": "Commands",
        "type": "BUG",
        "context": "     220: foundryup\n     221: ```\n     222: \n>>>  223: ### Debug Commands\n     224: \n     225: ```bash\n     226: # Check system health",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SCREENSHOT_PLAN.md",
        "line": 146,
        "text": "HTML report",
        "type": "REVIEW",
        "context": "     143: 0:00 - Prepare multiple contracts\n     144: 0:30 - Run batch audit command\n     145: 1:00 - Watch progress (one fails, others continue)\n>>>  146: 2:00 - Review HTML report\n     147: 3:00 - Export to PDF\n     148: 3:30 - Export to Excel\n     149: 4:00 - Interpret risk scores",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SCREENSHOT_PLAN.md",
        "line": 165,
        "text": "error logs",
        "type": "REVIEW",
        "context": "     162: 0:00 - GitHub Actions overview\n     163: 0:45 - Push code with error\n     164: 1:15 - See CI/CD fail\n>>>  165: 1:45 - Review error logs\n     166: 2:30 - Fix locally\n     167: 3:00 - Verify tests pass\n     168: 3:30 - Push again",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\SCREENSHOT_PLAN.md",
        "line": 251,
        "text": "and revisions",
        "type": "REVIEW",
        "context": "     248: ### Phase 3: Editing (Week 3)\n     249: - Day 1-2: Edit all videos\n     250: - Day 3: Add annotations to screenshots\n>>>  251: - Day 4: Review and revisions\n     252: - Day 5: Publish and integrate into docs\n     253: \n     254: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 11,
        "text": "s, and fixes with complete transparency.",
        "type": "BUG",
        "context": "       8: \n       9: # Security Audit Log\n      10: \n>>>   11: **Purpose**: Track all security vulnerabilities, bugs, and fixes with complete transparency.\n      12: \n      13: **Last Updated**: 2025-10-26  \n      14: **Status**: Active Monitoring",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 116,
        "text": "stubs with no actual functionality. |",
        "type": "TODO",
        "context": "     113: | **Affected Versions** | v4.1.7 and earlier |\n     114: | **Fixed Version** | v4.1.11 |\n     115: | **Reporter** | User Feedback |\n>>>  116: | **Description** | Several CLI commands (verify, monitor, config) printed \"Success\" messages despite being TODO stubs with no actual functionality. |\n     117: | **Impact** | Users received misleading feedback, leading to confusion about system capabilities and false confidence in deployments. |\n     118: | **Mitigation** | Implemented all TODO stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |\n     119: | **Related** | Multiple commits in production readiness push |",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 118,
        "text": "stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |",
        "type": "TODO",
        "context": "     115: | **Reporter** | User Feedback |\n     116: | **Description** | Several CLI commands (verify, monitor, config) printed \"Success\" messages despite being TODO stubs with no actual functionality. |\n     117: | **Impact** | Users received misleading feedback, leading to confusion about system capabilities and false confidence in deployments. |\n>>>  118: | **Mitigation** | Implemented all TODO stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |\n     119: | **Related** | Multiple commits in production readiness push |\n     120: \n     121: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 175,
        "text": "from non-author",
        "type": "REVIEW",
        "context": "     172: \n     173: ### Code Review\n     174: \n>>>  175: - [x] All PRs require review from non-author\n     176: - [x] Security-critical changes require 2+ reviewers\n     177: - [ ] Security expert review for smart contracts\n     178: - [x] Automated linting and security scans",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 177,
        "text": "for smart contracts",
        "type": "REVIEW",
        "context": "     174: \n     175: - [x] All PRs require review from non-author\n     176: - [x] Security-critical changes require 2+ reviewers\n>>>  177: - [ ] Security expert review for smart contracts\n     178: - [x] Automated linting and security scans\n     179: \n     180: ### Dependency Management",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 197,
        "text": "bounty program active ($50-$5,000)",
        "type": "BUG",
        "context": "     194: ### Incident Response\n     195: \n     196: - [x] Security policy documented (SECURITY.md)\n>>>  197: - [x] Bug bounty program active ($50-$5,000)\n     198: - [x] 24-48hr response time commitment\n     199: - [ ] Emergency patch process documented\n     200: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 267,
        "text": "| User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |",
        "type": "REVIEW",
        "context": "     264: | Date | Type | Auditor | Findings | Report |\n     265: |------|------|---------|----------|--------|\n     266: | 2025-01-25 | Internal | HyperKit Team | 4 issues (all fixed) | This log |\n>>>  267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n     268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n     270: | TBD | External | TBD | Pending | Q1 2025 |",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 268,
        "text": "| User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |",
        "type": "REVIEW",
        "context": "     265: |------|------|---------|----------|--------|\n     266: | 2025-01-25 | Internal | HyperKit Team | 4 issues (all fixed) | This log |\n     267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n>>>  268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n     270: | TBD | External | TBD | Pending | Q1 2025 |\n     271: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 270,
        "text": "| External | TBD | Pending | Q1 2025 |",
        "type": "TBD",
        "context": "     267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n     268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n>>>  270: | TBD | External | TBD | Pending | Q1 2025 |\n     271: \n     272: ---\n     273: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 295,
        "text": "**: 2025-11-26",
        "type": "REVIEW",
        "context": "     292: **Maintained by**: HyperKit Security Team  \n     293: **Last Updated**: October 27, 2025  \n     294: **Version**: 1.4.6  \n>>>  295: **Next Review**: 2025-11-26  \n     296: **Audit Cadence**: Monthly  \n     297: **Location**: `/hyperkit-agent/docs/SECURITY_AUDIT_LOG.md`\n     298: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_SETUP.md",
        "line": 69,
        "text": "access logs** for any unauthorized usage",
        "type": "REVIEW",
        "context": "      66: 1. **Replace `.env` file** with secure template\n      67: 2. **Rotate all exposed API keys** immediately\n      68: 3. **Use test wallets only** for development\n>>>   69: 4. **Review access logs** for any unauthorized usage\n      70: \n      71: ## \ud83d\udccb Security Checklist\n      72: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_SETUP.md",
        "line": 76,
        "text": "API usage logs",
        "type": "REVIEW",
        "context": "      73: - [ ] Replace `.env` with secure template\n      74: - [ ] Rotate all exposed API keys\n      75: - [ ] Use test wallets only\n>>>   76: - [ ] Review API usage logs\n      77: - [ ] Enable 2FA on all accounts\n      78: - [ ] Use environment-specific configurations\n      79: - [ ] Regular security audits",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\SECURITY_SETUP.md",
        "line": 86,
        "text": "access logs** for unauthorized usage",
        "type": "REVIEW",
        "context": "      83: 1. **Immediately revoke** the compromised keys\n      84: 2. **Generate new keys** from the respective platforms\n      85: 3. **Update `.env`** with new keys\n>>>   86: 4. **Review access logs** for unauthorized usage\n      87: 5. **Consider rotating** all related credentials\n      88: \n      89: ## \ud83d\udcde Support",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 87,
        "text": "Add screenshot showing typical pip error)",
        "type": "TODO",
        "context": "      84: pip install -r requirements.txt --no-cache-dir\n      85: ```\n      86: \n>>>   87: **Screenshot Location**: `docs/images/installation_error.png` (TODO: Add screenshot showing typical pip error)\n      88: \n      89: ---\n      90: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 159,
        "text": "Add screenshot)",
        "type": "TODO",
        "context": "     156: CLI: hyperagent deploy contract MyToken.sol --args '[\"0x742d...\", 1000000, \"My Token\"]'\n     157: ```\n     158: \n>>>  159: **Screenshot Location**: `docs/images/constructor_error.png` (TODO: Add screenshot)\n     160: \n     161: ---\n     162: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 183,
        "text": "Create 3-minute video)",
        "type": "TODO",
        "context": "     180: docker pull ghcr.io/foundry-rs/foundry:latest\n     181: ```\n     182: \n>>>  183: **Video Tutorial**: \"Installing Foundry for HyperKit\" (TODO: Create 3-minute video)\n     184: \n     185: ---\n     186: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 206,
        "text": "Add screenshot)",
        "type": "TODO",
        "context": "     203: #   Failed: 2\n     204: ```\n     205: \n>>>  206: **Screenshot Location**: `docs/images/batch_audit_success.png` (TODO: Add screenshot)\n     207: \n     208: ---\n     209: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 268,
        "text": "Add screenshots for each type)",
        "type": "TODO",
        "context": "     265: ```\n     266: **Fix**: Run tests locally: `pytest tests/ -v`\n     267: \n>>>  268: **Screenshot Location**: `docs/images/cicd_failure.png` (TODO: Add screenshots for each type)\n     269: \n     270: ---\n     271: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 404,
        "text": "**: Create and link video tutorials for:",
        "type": "TODO",
        "context": "     401: \n     402: ## Video Tutorial Index\n     403: \n>>>  404: **TODO**: Create and link video tutorials for:\n     405: \n     406: 1. **Installation & Setup** (5 min)\n     407:    - Installing Python 3.10+",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 11,
        "text": "er**: Brutal CTO/Auditor",
        "type": "REVIEW",
        "context": "       8: \n       9: # Critical Fixes Applied - Emergency Response\n      10: \n>>>   11: **Reviewer**: Brutal CTO/Auditor  \n      12: **Status**: \ud83d\udfe2 **CRITICAL BUGS FIXED**  \n      13: \n      14: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 12,
        "text": "S FIXED**",
        "type": "BUG",
        "context": "       9: # Critical Fixes Applied - Emergency Response\n      10: \n      11: **Reviewer**: Brutal CTO/Auditor  \n>>>   12: **Status**: \ud83d\udfe2 **CRITICAL BUGS FIXED**  \n      13: \n      14: ---\n      15: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 98,
        "text": "s unexpectedly",
        "type": "BUG",
        "context": "      95: \n      96: ### **Issue Identified:**\n      97: - No central place for known limitations\n>>>   98: - Users discovering bugs unexpectedly\n      99: - No workarounds documented\n     100: \n     101: **Risk**: \ud83d\udfe1 **USER FRUSTRATION - Wasted time on known issues**",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 106,
        "text": "s (with fixes)",
        "type": "BUG",
        "context": "     103: ### **Fix Applied:**\n     104: Created comprehensive `docs/KNOWN_ISSUES.md` documenting:\n     105: - \u2705 5 current limitations\n>>>  106: - \u2705 3 known bugs (with fixes)\n     107: - \u2705 3 feature gaps\n     108: - \u2705 3 technical debt items\n     109: - \u2705 3 security considerations",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 152,
        "text": "**: Fake deployment success = production failures",
        "type": "BUG",
        "context": "     149: ## \ud83d\udcca **Impact Assessment**\n     150: \n     151: ### **Before Fixes:**\n>>>  152: - \ud83d\udd34 **Critical Bug**: Fake deployment success = production failures\n     153: - \ud83d\udd34 **Misleading Claims**: Mock Alith presented as real\n     154: - \ud83d\udfe1 **Hidden Issues**: Users discovering limitations by accident\n     155: - \ud83d\udfe1 **Overclaimed Features**: README not matching reality",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\DEMO_SCRIPT.md",
        "line": 87,
        "text": "of generated contract",
        "type": "REVIEW",
        "context": "      84: \n      85: **Show** (if time permits):\n      86: ```bash\n>>>   87: # Quick preview of generated contract\n      88: head -20 artifacts/workflows/tokens/Token.sol\n      89: ```\n      90: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\DISASTER_RECOVERY.md",
        "line": 23,
        "text": "active alerts and error logs",
        "type": "REVIEW",
        "context": "      20: \n      21: 1. **Assess the Situation**\n      22:    - Check system health dashboard: http://localhost:8080\n>>>   23:    - Review active alerts and error logs\n      24:    - Identify the scope and impact of the incident\n      25: \n      26: 2. **Activate Emergency Procedures**",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\DISASTER_RECOVERY.md",
        "line": 564,
        "text": "monitoring",
        "type": "REVIEW",
        "context": "     561: - [ ] Update procedures\n     562: - [ ] Implement preventive measures\n     563: - [ ] Conduct training\n>>>  564: - [ ] Review monitoring\n     565: - [ ] Test recovery procedures\n     566: \n     567: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\DISASTER_RECOVERY.md",
        "line": 571,
        "text": "** 2024-04-01",
        "type": "REVIEW",
        "context": "     568: \n     569: **Document Version:** 1.0  \n     570: **Last Updated:** 2024-01-01  \n>>>  571: **Next Review:** 2024-04-01  \n     572: **Owner:** HyperKit Agent Team\n     573: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 62,
        "text": "**: Real implementation now active and tested",
        "type": "NOTE",
        "context": "      59:   1. Install: `pip install alith>=0.12.0`\n      60:   2. Get API keys from https://lazai.network\n      61:   3. Configure in `.env` file\n>>>   62: - **Note**: Real implementation now active and tested\n      63: \n      64: ### **2. Audit System Accuracy**\n      65: - **Status**: \ud83d\udfe1 **BEST EFFORT**",
        "priority": "medium",
        "labels": [
          "todo",
          "priority:medium",
          "documentation",
          "maintenance",
          "testing"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 82,
        "text": "**: This is a fundamental limitation of bytecode analysis, not a bug",
        "type": "NOTE",
        "context": "      79:   - Verify contract source on explorer first\n      80:   - Use Sourcify for verification\n      81:   - Request source code from contract owner\n>>>   82: - **Note**: This is a fundamental limitation of bytecode analysis, not a bug\n      83: \n      84: ### **4. Tool Availability Checks**\n      85: - **Status**: \ud83d\udfe1 **PERFORMANCE ISSUE**",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 196,
        "text": "transaction details manually",
        "type": "REVIEW",
        "context": "     193: - **Issue**: Simulation cannot detect all malicious behaviors\n     194: - **Impact**: Some attacks may not be detected\n     195: - **Best Practice**:\n>>>  196:   - Always review transaction details manually\n     197:   - Use multi-sig for high-value transactions\n     198:   - Monitor transaction history regularly\n     199: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 204,
        "text": "or limitation not listed here?",
        "type": "BUG",
        "context": "     201: \n     202: ## \ud83d\udcde **Reporting New Issues**\n     203: \n>>>  204: Found a bug or limitation not listed here?\n     205: \n     206: 1. **Check** if it's already reported: https://github.com/JustineDevs/Hyperkit-Agent/issues\n     207: 2. **Create** new issue with:",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 213,
        "text": "`, `enhancement`, `documentation`",
        "type": "BUG",
        "context": "     210:    - Expected vs actual behavior\n     211:    - Environment details (OS, Python version, etc.)\n     212:    - Error logs if applicable\n>>>  213: 3. **Label** appropriately: `bug`, `enhancement`, `documentation`\n     214: \n     215: ---\n     216: ",
        "priority": "medium",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\KNOWN_LIMITATIONS.md",
        "line": 222,
        "text": "fixes completed",
        "type": "BUG",
        "context": "     219: 2. \u274c **Test Complete Workflow**\n     220:    - Generate \u2192 Audit \u2192 Deploy working\n     221:    - End-to-end success proven\n>>>  222:    - Bug fixes completed\n     223:    - **Timeline**: Critical (48 hours)\n     224: \n     225: 3. \ud83d\udfe1 **Install Missing SDKs**",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 79,
        "text": "**: Skip deployment test to avoid using gas/resources",
        "type": "NOTE",
        "context": "      76:   **Expected**: Audit completes with severity rating\n      77:   **Time**: ~15 seconds\n      78: \n>>>   79: **Note**: Skip deployment test to avoid using gas/resources\n      80: \n      81: ---\n      82: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "testing"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 96,
        "text": "s/script (optional reference)",
        "type": "NOTE",
        "context": "      93: - [ ] **Open Required Applications**\n      94:   - [ ] Terminal window (maximized)\n      95:   - [ ] Browser (with explorer bookmarked)\n>>>   96:   - [ ] Notes/script (optional reference)\n      97: \n      98: - [ ] **Increase Terminal Font Size**\n      99:   - **Windows Terminal**: `Ctrl` + `+` (multiple times)",
        "priority": "low",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:low"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 135,
        "text": "demo script key points",
        "type": "REVIEW",
        "context": "     132:   - [ ] Keep tab ready for contract verification\n     133: \n     134: - [ ] **Mental Preparation**\n>>>  135:   - [ ] Review demo script key points\n     136:   - [ ] Memorize backup contract address\n     137:   - [ ] Deep breath - you're ready! \ud83d\ude0a\n     138: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 185,
        "text": "FAILURE_RECOVERY_PLAN.md",
        "type": "REVIEW",
        "context": "     182:   cat test_logs/deployment_test_2.log | tail -20\n     183:   ```\n     184: \n>>>  185: - [ ] Review FAILURE_RECOVERY_PLAN.md\n     186: \n     187: - [ ] Switch to backup demo script\n     188: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 202,
        "text": "offline demo script in FAILURE_RECOVERY_PLAN.md",
        "type": "REVIEW",
        "context": "     199:   - [ ] Deployment logs\n     200:   - [ ] Screenshots\n     201: \n>>>  202: - [ ] Review offline demo script in FAILURE_RECOVERY_PLAN.md\n     203: \n     204: **Decision**: Can proceed with offline demonstration!\n     205: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 242,
        "text": "relevant section and practice",
        "type": "REVIEW",
        "context": "     239: \n     240: **All Yes?** \u2192 \ud83d\udcaa **YOU'RE READY!**\n     241: \n>>>  242: **Any No?** \u2192 Review relevant section and practice\n     243: \n     244: ---\n     245: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 314,
        "text": "These Points**",
        "type": "REVIEW",
        "context": "     311: \n     312: ## \ud83c\udfc1 **FINAL GO/NO-GO DECISION**\n     313: \n>>>  314: ### **Review These Points**\n     315: \n     316: **System Status**:\n     317: - [ ] Terminal working",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 346,
        "text": "notes",
        "type": "REVIEW",
        "context": "     343: \n     344: ### **October 27, 2025**\n     345: \n>>>  346: **8:00 AM** - Wake up, review notes  \n     347: **9:00 AM** - Morning coffee, relaxation  \n     348: **10:00 AM** - First practice run  \n     349: **11:00 AM** - Second practice run (if needed)  ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\README.md",
        "line": 54,
        "text": "**PRE_DEMO_CHECKLIST.md**",
        "type": "REVIEW",
        "context": "      51: ## Quick Start\n      52: \n      53: For deployment:\n>>>   54: 1. Review **PRE_DEMO_CHECKLIST.md**\n      55: 2. Follow **DEMO_SCRIPT.md**\n      56: 3. Keep **DISASTER_RECOVERY.md** handy\n      57: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\EXECUTION\\workflow-command.md",
        "line": 69,
        "text": "= ctx.obj.get('debug', False)",
        "type": "BUG",
        "context": "      66:     from core.config.loader import get_config\n      67:     \n      68:     verbose = ctx.obj.get('verbose', False)\n>>>   69:     debug = ctx.obj.get('debug', False)\n      70:     \n      71:     # Display configuration\n      72:     config_panel = Panel.fit(",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 48,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      45: \n      46: **Output:**\n      47: ```\n>>>   48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 49,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      46: **Output:**\n      47: ```\n      48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n>>>   49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```\n      52: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 50,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      47: ```\n      48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n>>>   50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```\n      52: \n      53: **Save the CID** - you'll need it to fetch the vector store later!",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 58,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      55: ### 4. Fetch from IPFS (New Developer/CI/CD)\n      56: \n      57: ```bash\n>>>   58: hyperagent setup_rag_vectors --fetch-cid QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      59: ```\n      60: \n      61: This downloads the vector store from IPFS and extracts it locally.",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 99,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      96: pip install -r requirements.txt\n      97: \n      98: # 3. Fetch pre-built vectors from IPFS (< 1 minute)\n>>>   99: hyperagent setup_rag_vectors --fetch-cid QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n     100: \n     101: # 4. Ready to go!\n     102: ```",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 157,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",",
        "type": "XXX",
        "context": "     154: \n     155: ```json\n     156: {\n>>>  157:   \"latest_cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     158:   \"versions\": [\n     159:     {\n     160:       \"cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 160,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",",
        "type": "XXX",
        "context": "     157:   \"latest_cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     158:   \"versions\": [\n     159:     {\n>>>  160:       \"cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     161:       \"timestamp\": 1706697600,\n     162:       \"uploaded\": true\n     163:     },",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 457,
        "text": "[ChromaDB logs](data/vector_store/)",
        "type": "REVIEW",
        "context": "     454: If you encounter issues:\n     455: \n     456: 1. Check [Troubleshooting](#-troubleshooting) section\n>>>  457: 2. Review [ChromaDB logs](data/vector_store/)\n     458: 3. Check [IPFS CID registry](data/vector_store/cid_registry.json)\n     459: 4. Open an issue on GitHub\n     460: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_INTEGRATION_PROGRESS.md",
        "line": 105,
        "text": "| Oct 31 | \ud83d\udcc5 PLANNED | Complete foundation |",
        "type": "REVIEW",
        "context": "     102: |-----------|-------------|--------|-------|\n     103: | Project Structure | Oct 28 | \ud83d\udcc5 PLANNED | Create services/alith/ |\n     104: | Write Tests | Oct 29 | \ud83d\udcc5 PLANNED | 5 unit tests |\n>>>  105: | Phase 1 Review | Oct 31 | \ud83d\udcc5 PLANNED | Complete foundation |\n     106: \n     107: ---\n     108: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_INTEGRATION_PROGRESS.md",
        "line": 341,
        "text": "any issues encountered",
        "type": "NOTE",
        "context": "     338: \n     339: 3. \ud83d\udd04 **Document Installation**\n     340:    - Update this report with results\n>>>  341:    - Note any issues encountered\n     342:    - Record execution time\n     343: \n     344: ### Short-term (This Week - Oct 25-31)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 527,
        "text": "| \ud83c\udfaf |",
        "type": "TBD",
        "context": "     524: **Performance Targets**:\n     525: | Metric | Target | Current | Status |\n     526: |--------|--------|---------|--------|\n>>>  527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 528,
        "text": "| \ud83c\udfaf |",
        "type": "TBD",
        "context": "     525: | Metric | Target | Current | Status |\n     526: |--------|--------|---------|--------|\n     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n>>>  528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 529,
        "text": "| \ud83c\udfaf |",
        "type": "TBD",
        "context": "     526: |--------|--------|---------|--------|\n     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n>>>  529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: \n     532: **Deliverables**:",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 530,
        "text": "| \ud83c\udfaf |",
        "type": "TBD",
        "context": "     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n>>>  530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: \n     532: **Deliverables**:\n     533: - [x] Performance targets achieved",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 601,
        "text": "(post-launch metric)",
        "type": "TBD",
        "context": "     598:    - Audit confidence: 30% \u2192 85%+ (55 point improvement)\n     599:    - Inference latency: < 3 seconds\n     600:    - Success rate: 95%+ on verified contracts\n>>>  601:    - User satisfaction: TBD (post-launch metric)\n     602: \n     603: **Deliverables**:\n     604: - [x] Production deployment complete",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 777,
        "text": "this integration roadmap",
        "type": "REVIEW",
        "context": "     774: ## Next Steps\n     775: \n     776: ### This Week\n>>>  777: 1. \u2705 Review this integration roadmap\n     778: 2. \ud83d\udd04 Install Alith SDK: `pip install alith`\n     779: 3. \ud83d\udd04 Test basic agent functionality\n     780: 4. \ud83d\udd04 Schedule Week 1 kickoff meeting",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 790,
        "text": "with LazAI team",
        "type": "REVIEW",
        "context": "     787: \n     788: ### Milestone Checkpoint (Week 4)\n     789: - Working demo of AI-powered audit\n>>>  790: - Code review with LazAI team\n     791: - Performance benchmarks validated\n     792: - Documentation draft for review\n     793: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 807,
        "text": "*: Week 4 Milestone Checkpoint",
        "type": "REVIEW",
        "context": "     804: *Roadmap Created*: October 25, 2024  \n     805: *Timeline*: 10 weeks (Phases 1-5)  \n     806: *Status*: Ready to Begin Phase 1  \n>>>  807: *Next Review*: Week 4 Milestone Checkpoint  \n     808: \n     809: ---\n     810: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\LAZAI_INTEGRATION_GUIDE.md",
        "line": 120,
        "text": "Commands:",
        "type": "BUG",
        "context": "     117: 3. **Insufficient funds**: Deposit more tokens for inference\n     118: 4. **IPFS not configured**: Set up Pinata JWT token\n     119: \n>>>  120: ### Debug Commands:\n     121: ```python\n     122: # Check integration status\n     123: status = ai_agent.get_lazai_status()",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\LAZAI_INTEGRATION_GUIDE.md",
        "line": 156,
        "text": "s and feature requests",
        "type": "BUG",
        "context": "     153: \n     154: - **LazAI Discord**: Join for community support\n     155: - **Builder Guild**: Technical assistance\n>>>  156: - **GitHub Issues**: Report bugs and feature requests\n     157: - **Documentation**: https://docs.lazai.network/\n     158: \n     159: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 45,
        "text": "\u2502    \u2502 \u2713 100K+ addresses    \u2502          \u2502",
        "type": "REVIEW",
        "context": "      42: \u2502  \u2502 Transaction          \u2502    \u2502 Address Reputation   \u2502          \u2502\n      43: \u2502  \u2502 Simulation Engine    \u2502    \u2502 Database             \u2502          \u2502\n      44: \u2502  \u2502 (Pocket Universe)    \u2502    \u2502 (GoPlus Security)    \u2502          \u2502\n>>>   45: \u2502  \u2502 \u2713 Pre-sign preview   \u2502    \u2502 \u2713 100K+ addresses    \u2502          \u2502\n      46: \u2502  \u2502 \u2713 Balance changes    \u2502    \u2502 \u2713 Graph analysis     \u2502          \u2502\n      47: \u2502  \u2502 \u2713 Exploit detection  \u2502    \u2502 \u2713 Risk scoring       \u2502          \u2502\n      48: \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2502",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 83,
        "text": "(Pocket Universe foundation)",
        "type": "REVIEW",
        "context": "      80: \n      81: ### 1. Transaction Simulation Engine\n      82: \n>>>   83: **Purpose**: Pre-signature transaction preview (Pocket Universe foundation)\n      84: \n      85: **Features**:\n      86: - Forks blockchain state using Anvil (Foundry)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 90,
        "text": "(\"You will send X, receive Y\")",
        "type": "REVIEW",
        "context": "      87: - Executes transaction in isolated environment\n      88: - Captures balance changes (ETH, ERC20, ERC721)\n      89: - Detects suspicious patterns (reentrancy, price manipulation)\n>>>   90: - Generates human-readable preview (\"You will send X, receive Y\")\n      91: \n      92: **Performance**:\n      93: - Execution time: 1-3 seconds",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 481,
        "text": "s and request features]",
        "type": "BUG",
        "context": "     478: - **Documentation**: `/docs/WALLET_SECURITY_EXTENSIONS.md`\n     479: - **Examples**: `/examples/security_examples.py`\n     480: - **API Reference**: `/docs/API_REFERENCE.md`\n>>>  481: - **GitHub Issues**: [Report bugs and request features]\n     482: \n     483: ---\n     484: ",
        "priority": "medium",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      },
      {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 486,
        "text": "**: Phase 2 completion (Week 24)",
        "type": "REVIEW",
        "context": "     483: ---\n     484: \n     485: **Last Updated**: October 25, 2024  \n>>>  486: **Next Review**: Phase 2 completion (Week 24)\n     487: \n     488: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 24,
        "text": "ed by someone familiar with the user-facing impact",
        "type": "REVIEW",
        "context": "      21: \n      22: ### 2. **Mandatory Documentation Review**\n      23: - All PRs must include a documentation reviewer\n>>>   24: - Documentation changes must be reviewed by someone familiar with the user-facing impact\n      25: - Technical writers or senior developers must approve documentation changes\n      26: \n      27: ### 3. **Automated Enforcement**",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 78,
        "text": "/FIXME comments",
        "type": "TODO",
        "context": "      75: The automated drift detection checks for:\n      76: - References to deprecated CLI commands\n      77: - Future-tense language in documentation\n>>>   78: - Stale TODO/FIXME comments\n      79: - Outdated script references\n      80: - Missing implementation status\n      81: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 78,
        "text": "comments",
        "type": "FIXME",
        "context": "      75: The automated drift detection checks for:\n      76: - References to deprecated CLI commands\n      77: - Future-tense language in documentation\n>>>   78: - Stale TODO/FIXME comments\n      79: - Outdated script references\n      80: - Missing implementation status\n      81: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 111,
        "text": "Process",
        "type": "REVIEW",
        "context": "     108: - \u274c **Not Implemented**: Feature is documented but not functional\n     109: - \ud83d\udd27 **Stub Process**: Process is documented but not CLI-integrated\n     110: \n>>>  111: ## Review Process\n     112: \n     113: ### **Documentation Review Checklist**\n     114: Reviewers must verify:",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 113,
        "text": "Checklist**",
        "type": "REVIEW",
        "context": "     110: \n     111: ## Review Process\n     112: \n>>>  113: ### **Documentation Review Checklist**\n     114: Reviewers must verify:\n     115: - [ ] Documentation matches actual implementation\n     116: - [ ] Examples are tested and working",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 114,
        "text": "ers must verify:",
        "type": "REVIEW",
        "context": "     111: ## Review Process\n     112: \n     113: ### **Documentation Review Checklist**\n>>>  114: Reviewers must verify:\n     115: - [ ] Documentation matches actual implementation\n     116: - [ ] Examples are tested and working\n     117: - [ ] All CLI commands are documented",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 122,
        "text": "er Requirements**",
        "type": "REVIEW",
        "context": "     119: - [ ] Links are valid and up-to-date\n     120: - [ ] Implementation status is accurate\n     121: \n>>>  122: ### **Reviewer Requirements**\n     123: - Must be familiar with the feature being documented\n     124: - Must test all examples and commands\n     125: - Must verify implementation status",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 158,
        "text": "affects production systems",
        "type": "BUG",
        "context": "     155: ### **Emergency Fixes**\n     156: Emergency fixes may bypass documentation requirements if:\n     157: - Security vulnerability requires immediate fix\n>>>  158: - Critical bug affects production systems\n     159: - Documentation update is scheduled within 24 hours\n     160: \n     161: ### **Experimental Features**",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 171,
        "text": "drift prevention policy",
        "type": "REVIEW",
        "context": "     168: \n     169: ### **New Team Members**\n     170: - Must complete documentation standards training\n>>>  171: - Must review drift prevention policy\n     172: - Must understand audit badge system\n     173: - Must practice documentation review process\n     174: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 173,
        "text": "process",
        "type": "REVIEW",
        "context": "     170: - Must complete documentation standards training\n     171: - Must review drift prevention policy\n     172: - Must understand audit badge system\n>>>  173: - Must practice documentation review process\n     174: \n     175: ### **Ongoing Training**\n     176: - Monthly documentation best practices sessions",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 224,
        "text": "**: 2025-11-28",
        "type": "REVIEW",
        "context": "     221: \n     222: **Policy Version**: 1.0  \n     223: **Last Updated**: 2025-10-28  \n>>>  224: **Next Review**: 2025-11-28  \n     225: **Approved By**: Engineering Leadership  \n     226: \n     227: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 34,
        "text": "Fixes** \u2705 **COMPLETED**",
        "type": "BUG",
        "context": "      31:   - Testing documentation created\n      32:   - Integration testing framework ready\n      33: \n>>>   34: ### **2. Quality Assurance & Bug Fixes** \u2705 **COMPLETED**\n      35: - **Status**: Complete\n      36: - **Deliverables**:\n      37:   - Comprehensive QA checklist created",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 38,
        "text": "tracking system established",
        "type": "BUG",
        "context": "      35: - **Status**: Complete\n      36: - **Deliverables**:\n      37:   - Comprehensive QA checklist created\n>>>   38:   - Bug tracking system established\n      39:   - Quality standards documented\n      40:   - Testing protocols implemented\n      41: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 95,
        "text": "& Delivery** \u2705 **COMPLETED**",
        "type": "REVIEW",
        "context": "      92:   - User onboarding materials created\n      93:   - Launch materials prepared\n      94: \n>>>   95: ### **9. Final Documentation Review & Delivery** \u2705 **COMPLETED**\n      96: - **Status**: Complete\n      97: - **Deliverables**:\n      98:   - All documentation reviewed and finalized",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 98,
        "text": "ed and finalized",
        "type": "REVIEW",
        "context": "      95: ### **9. Final Documentation Review & Delivery** \u2705 **COMPLETED**\n      96: - **Status**: Complete\n      97: - **Deliverables**:\n>>>   98:   - All documentation reviewed and finalized\n      99:   - Delivery readiness assessment completed\n     100:   - Final quality assurance passed\n     101:   - Documentation delivery confirmed",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 199,
        "text": "and updates",
        "type": "REVIEW",
        "context": "     196: \n     197: ### **Justine (CPOO) - Product Integration Points**\n     198: - \u2705 **Testing Framework**: Ready for execution\n>>>  199: - \u2705 **Documentation**: Ready for review and updates\n     200: - \u2705 **Team Coordination**: Ready for implementation\n     201: - \u2705 **Quality Assurance**: Ready for execution\n     202: - \u2705 **Launch Preparation**: Ready for coordination",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 222,
        "text": "fix procedures ready",
        "type": "BUG",
        "context": "     219: \n     220: ### **Weekend, October 28-29, 2025**\n     221: - \u2705 **Final Integration**: End-to-end testing protocols ready\n>>>  222: - \u2705 **Quality Assurance**: Final QA and bug fix procedures ready\n     223: - \u2705 **Launch Preparation**: Launch coordination and materials ready\n     224: \n     225: ### **Monday, October 30, 2025**",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 268,
        "text": "fixes",
        "type": "BUG",
        "context": "     265: - **Oct 23**: Foundation integration and setup\n     266: - **Oct 24-25**: Core feature integration\n     267: - **Oct 26-27**: Final integration and testing\n>>>  268: - **Oct 28-29**: Quality assurance and bug fixes\n     269: - **Oct 30**: Final delivery and launch\n     270: \n     271: ---",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\CPOO_INTEGRATION_GUIDE.md",
        "line": 294,
        "text": "fixes",
        "type": "BUG",
        "context": "     291: ### **Final Week Timeline**\n     292: - **Oct 23-25**: Complete remaining development\n     293: - **Oct 26-27**: Integration and testing\n>>>  294: - **Oct 28-29**: Final QA and bug fixes\n     295: - **Oct 30**: Delivery\n     296: \n     297: ---",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 218,
        "text": "logging",
        "type": "BUG",
        "context": "     215: # Run in development mode\n     216: python -m hyperkit_agent.cli.main --dev\n     217: \n>>>  218: # Run with debug logging\n     219: PYTHONPATH=. python -m hyperkit_agent.cli.main --debug\n     220: ```\n     221: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 256,
        "text": "Guidelines**",
        "type": "REVIEW",
        "context": "     253: 6. Update documentation\n     254: 7. Submit pull request\n     255: \n>>>  256: ### **Code Review Guidelines**\n     257: - Review code for correctness\n     258: - Check for security issues\n     259: - Ensure proper error handling",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 257,
        "text": "code for correctness",
        "type": "REVIEW",
        "context": "     254: 7. Submit pull request\n     255: \n     256: ### **Code Review Guidelines**\n>>>  257: - Review code for correctness\n     258: - Check for security issues\n     259: - Ensure proper error handling\n     260: - Verify test coverage",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 263,
        "text": "ging",
        "type": "BUG",
        "context": "     260: - Verify test coverage\n     261: - Check documentation updates\n     262: \n>>>  263: ## \ud83d\udc1b Debugging\n     264: \n     265: ### **Common Issues**\n     266: - **Import Errors**: Check PYTHONPATH and virtual environment",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 271,
        "text": "Tools**",
        "type": "BUG",
        "context": "     268: - **Network Issues**: Check RPC endpoints and connectivity\n     269: - **API Issues**: Verify API keys and rate limits\n     270: \n>>>  271: ### **Debug Tools**\n     272: ```bash\n     273: # Enable debug logging\n     274: export LOG_LEVEL=DEBUG",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 273,
        "text": "logging",
        "type": "BUG",
        "context": "     270: \n     271: ### **Debug Tools**\n     272: ```bash\n>>>  273: # Enable debug logging\n     274: export LOG_LEVEL=DEBUG\n     275: \n     276: # Run with verbose output",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\ENVIRONMENT_SETUP.md",
        "line": 89,
        "text": "**: If Foundry is not installed, the agent will run in simulation mode (no actual deployment).",
        "type": "NOTE",
        "context": "      86: # Should output: /home/user/.foundry/bin/forge (Linux/Mac) or C:\\Program Files\\Foundry\\bin\\forge.exe (Windows)\n      87: ```\n      88: \n>>>   89: **Note**: If Foundry is not installed, the agent will run in simulation mode (no actual deployment).\n      90: \n      91: ## \ud83d\udd11 **REQUIRED API KEYS**\n      92: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\ENVIRONMENT_SETUP.md",
        "line": 223,
        "text": "**: No Local REST API plugin needed - MCP Docker handles all Obsidian access.",
        "type": "NOTE",
        "context": "     220: - **OBSIDIAN_MCP_API_KEY** - Your Obsidian API key (for MCP Docker)\n     221: - **OBSIDIAN_HOST=host.docker.internal** - Docker host configuration\n     222: \n>>>  223: **Note**: No Local REST API plugin needed - MCP Docker handles all Obsidian access.\n     224: \n     225: ### **4. Start MCP Docker Container**\n     226: ```bash",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\ENVIRONMENT_SETUP.md",
        "line": 305,
        "text": "=false",
        "type": "BUG",
        "context": "     302: # ============================================================================\n     303: LOG_LEVEL=INFO\n     304: ENVIRONMENT=development\n>>>  305: DEBUG=false\n     306: TEST_MODE=true\n     307: ```\n     308: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\ENVIRONMENT_SETUP.md",
        "line": 456,
        "text": "the [Documentation](https://github.com/JustineDevs/Hyperkit-Agent#readme)",
        "type": "REVIEW",
        "context": "     453: ### **Getting Help**\n     454: \n     455: - Check the [Issues](https://github.com/JustineDevs/Hyperkit-Agent/issues) page\n>>>  456: - Review the [Documentation](https://github.com/JustineDevs/Hyperkit-Agent#readme)\n     457: - Contact support: [team@hyperionkit.xyz](mailto:team@hyperionkit.xyz)\n     458: \n     459: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\INTEGRATION_REPORT.md",
        "line": 394,
        "text": "Audit Results**: Always check security issues",
        "type": "REVIEW",
        "context": "     391: ### For Production Use\n     392: 1. **Install Foundry**: Required for real deployment\n     393: 2. **Use --allow-insecure**: For automated deployments\n>>>  394: 3. **Review Audit Results**: Always check security issues\n     395: 4. **Test on Testnets**: Before mainnet deployment\n     396: 5. **Monitor Gas Costs**: For deployment optimization\n     397: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\INTEGRATION_REPORT.md",
        "line": 400,
        "text": "Generated Contracts**: Before deployment",
        "type": "REVIEW",
        "context": "     397: \n     398: ### For Development\n     399: 1. **Use Interactive Mode**: For learning and testing\n>>>  400: 2. **Review Generated Contracts**: Before deployment\n     401: 3. **Test Different Prompts**: To understand capabilities\n     402: 4. **Use Simulation Mode**: When Foundry unavailable\n     403: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 74,
        "text": "fixes and quality assurance**",
        "type": "BUG",
        "context": "      71: - [ ] **Test cross-browser compatibility**\n      72: \n      73: #### **Justine (CPOO) - Coordination Tasks**\n>>>   74: - [ ] **Bug fixes and quality assurance**\n      75: - [ ] **API references and guides**\n      76: - [ ] **Integration testing coordination**\n      77: - [ ] **Progress tracking and reporting**",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 147,
        "text": "fixes**",
        "type": "BUG",
        "context": "     144: \n     145: #### **All Team Members**\n     146: - [ ] **Final integration testing**\n>>>  147: - [ ] **Quality assurance and bug fixes**\n     148: - [ ] **Performance optimization**\n     149: - [ ] **Security review**\n     150: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 172,
        "text": "overnight progress",
        "type": "REVIEW",
        "context": "     169: \n     170: ### **Integration Checkpoints**\n     171: - **Morning Checkpoint**: 10:00 AM\n>>>  172:   - Review overnight progress\n     173:   - Address any blockers\n     174:   - Confirm daily priorities\n     175: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 181,
        "text": "**: 6:00 PM",
        "type": "REVIEW",
        "context": "     178:   - Integration status\n     179:   - Evening priorities\n     180: \n>>>  181: - **End-of-Day Review**: 6:00 PM\n     182:   - Daily accomplishments\n     183:   - Tomorrow's priorities\n     184:   - Blocker identification",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 339,
        "text": "previous day's progress",
        "type": "REVIEW",
        "context": "     336: ## \ud83d\udccb **DAILY CHECKLIST**\n     337: \n     338: ### **Morning Checklist (9:00 AM)**\n>>>  339: - [ ] Review previous day's progress\n     340: - [ ] Confirm today's priorities\n     341: - [ ] Check for any blockers\n     342: - [ ] Update team on status",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 346,
        "text": "morning progress",
        "type": "REVIEW",
        "context": "     343: - [ ] Begin development work\n     344: \n     345: ### **Afternoon Checklist (3:00 PM)**\n>>>  346: - [ ] Review morning progress\n     347: - [ ] Check integration status\n     348: - [ ] Address any issues\n     349: - [ ] Plan evening work",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 375,
        "text": "fixes",
        "type": "BUG",
        "context": "     372: ### **Final Week Timeline**\n     373: - **Oct 23-25**: Complete remaining development\n     374: - **Oct 26-27**: Integration and testing\n>>>  375: - **Oct 28-29**: Final QA and bug fixes\n     376: - **Oct 30**: Delivery\n     377: \n     378: ---",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TECHNICAL_DOCUMENTATION.md",
        "line": 608,
        "text": "Mode",
        "type": "BUG",
        "context": "     605: pip install slither-analyzer\n     606: ```\n     607: \n>>>  608: ### Debug Mode\n     609: \n     610: Enable debug logging for troubleshooting:\n     611: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\TECHNICAL_DOCUMENTATION.md",
        "line": 610,
        "text": "logging for troubleshooting:",
        "type": "BUG",
        "context": "     607: \n     608: ### Debug Mode\n     609: \n>>>  610: Enable debug logging for troubleshooting:\n     611: \n     612: ```bash\n     613: export LOG_LEVEL=DEBUG",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\WORKFLOW_BEHAVIOR_REPORT.md",
        "line": 237,
        "text": "audit results** before proceeding with high-severity issues",
        "type": "REVIEW",
        "context": "     234: \n     235: ### For Production Use\n     236: 1. **Always use `--allow-insecure` flag** for automated deployments\n>>>  237: 2. **Review audit results** before proceeding with high-severity issues\n     238: 3. **Test on testnets** before mainnet deployment\n     239: 4. **Monitor gas costs** for deployment optimization\n     240: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\docs\\TEAM\\WORKFLOW_BEHAVIOR_REPORT.md",
        "line": 243,
        "text": "generated contracts** before deployment",
        "type": "REVIEW",
        "context": "     240: \n     241: ### For Development\n     242: 1. **Use interactive mode** for learning and testing\n>>>  243: 2. **Review generated contracts** before deployment\n     244: 3. **Test different prompts** to understand capabilities\n     245: 4. **Use simulation mode** when Foundry is not available\n     246: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 210,
        "text": "_text.lower() or 'doc' in todo_text.lower():",
        "type": "TODO",
        "context": "     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')\n>>>  210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')\n     212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 154,
        "text": "_text.lower() or 'doc' in todo_text.lower():",
        "type": "TODO",
        "context": "     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')\n>>>  154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')\n     156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    ],
    "testing": [],
    "security": [],
    "performance": [],
    "features": [
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 208,
        "text": "_text.lower() or 'enhancement' in todo_text.lower():",
        "type": "TODO",
        "context": "     205:         labels.append('security')\n     206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n>>>  208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')\n     210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')",
        "priority": "medium",
        "labels": [
          "enhancement",
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 152,
        "text": "_text.lower() or 'enhancement' in todo_text.lower():",
        "type": "TODO",
        "context": "     149:         labels.append('security')\n     150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n>>>  152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')\n     154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')",
        "priority": "medium",
        "labels": [
          "enhancement",
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    ],
    "bug_fixes": [
      {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 59,
        "text": "_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))",
        "type": "TODO",
        "context": "      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 88,
        "text": "/TBD/FIXME markers in our actual code\"\"\"",
        "type": "TODO",
        "context": "      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 88,
        "text": "/FIXME markers in our actual code\"\"\"",
        "type": "TBD",
        "context": "      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 159,
        "text": "', 'fix', 'error', 'crash',",
        "type": "BUG",
        "context": "     156:     \n     157:     # High priority keywords\n     158:     high_priority_keywords = [\n>>>  159:         'critical', 'urgent', 'security', 'bug', 'fix', 'error', 'crash',\n     160:         'production', 'deploy', 'release', 'hotfix', 'emergency'\n     161:     ]\n     162:     ",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 206,
        "text": "_text.lower() or 'fix' in todo_text.lower():",
        "type": "TODO",
        "context": "     203:     # Type-based labels\n     204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n>>>  206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 206,
        "text": "' in todo_text.lower() or 'fix' in todo_text.lower():",
        "type": "BUG",
        "context": "     203:     # Type-based labels\n     204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n>>>  206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 252,
        "text": "_fixes': [],",
        "type": "BUG",
        "context": "     249:         'security': [],\n     250:         'performance': [],\n     251:         'features': [],\n>>>  252:         'bug_fixes': [],\n     253:         'refactoring': [],\n     254:         'other': []\n     255:     }",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 273,
        "text": "_fixes'].append(todo)",
        "type": "BUG",
        "context": "     270:         elif 'enhancement' in labels:\n     271:             categories['features'].append(todo)\n     272:         elif 'bug' in labels:\n>>>  273:             categories['bug_fixes'].append(todo)\n     274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)\n     276:         else:",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 372,
        "text": "/TBD/FIXME items...\")",
        "type": "TODO",
        "context": "     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 372,
        "text": "/FIXME items...\")",
        "type": "TBD",
        "context": "     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\integration_sdk_audit.py",
        "line": 44,
        "text": "\" in content or \"FIXME\" in content or \"mock\" in content.lower():",
        "type": "TODO",
        "context": "      41:                 # Check if it's a real implementation or stub\n      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n>>>   44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n      45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 35,
        "text": "/TBD/FIXME/XXX markers\"\"\"",
        "type": "TODO",
        "context": "      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 35,
        "text": "/FIXME/XXX markers\"\"\"",
        "type": "TBD",
        "context": "      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 103,
        "text": "', 'fix', 'error', 'crash',",
        "type": "BUG",
        "context": "     100:     \n     101:     # High priority keywords\n     102:     high_priority_keywords = [\n>>>  103:         'critical', 'urgent', 'security', 'bug', 'fix', 'error', 'crash',\n     104:         'production', 'deploy', 'release', 'hotfix', 'emergency'\n     105:     ]\n     106:     ",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 150,
        "text": "_text.lower() or 'fix' in todo_text.lower():",
        "type": "TODO",
        "context": "     147:     # Type-based labels\n     148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n>>>  150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 150,
        "text": "' in todo_text.lower() or 'fix' in todo_text.lower():",
        "type": "BUG",
        "context": "     147:     # Type-based labels\n     148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n>>>  150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 196,
        "text": "_fixes': [],",
        "type": "BUG",
        "context": "     193:         'security': [],\n     194:         'performance': [],\n     195:         'features': [],\n>>>  196:         'bug_fixes': [],\n     197:         'refactoring': [],\n     198:         'other': []\n     199:     }",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 217,
        "text": "_fixes'].append(todo)",
        "type": "BUG",
        "context": "     214:         elif 'enhancement' in labels:\n     215:             categories['features'].append(todo)\n     216:         elif 'bug' in labels:\n>>>  217:             categories['bug_fixes'].append(todo)\n     218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)\n     220:         else:",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 316,
        "text": "/TBD/FIXME items...\")",
        "type": "TODO",
        "context": "     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 316,
        "text": "/FIXME items...\")",
        "type": "TBD",
        "context": "     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    ],
    "refactoring": [],
    "other": [
      {
        "file": ".\\scripts\\audit_badge_system.py",
        "line": 80,
        "text": ".md',",
        "type": "TODO",
        "context": "      77:     skip_patterns = [\n      78:         'README.md',\n      79:         'CHANGELOG.md',\n>>>   80:         'TODO.md',\n      81:         'SECURITY.md',\n      82:         'CONTRIBUTING.md',\n      83:         'LICENSE',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\audit_badge_system.py",
        "line": 274,
        "text": "all files with audit badges",
        "type": "REVIEW",
        "context": "     271:     report += f\"\"\"\n     272: ## Next Steps\n     273: \n>>>  274: 1. Review all files with audit badges\n     275: 2. Verify implementation status is accurate\n     276: 3. Update badges when features are implemented\n     277: 4. Integrate badge updates into CI/CD pipeline",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 53,
        "text": "s\"\"\"",
        "type": "TODO",
        "context": "      50:     return commands\n      51: \n      52: def check_command_implementation(cmd_file: Path) -> Dict[str, Any]:\n>>>   53:     \"\"\"Check if command is implemented or has TODOs\"\"\"\n      54:     \n      55:     try:\n      56:         content = cmd_file.read_text(encoding='utf-8')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 58,
        "text": "s and check implementation",
        "type": "TODO",
        "context": "      55:     try:\n      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n>>>   58:         # Count TODOs and check implementation\n      59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 59,
        "text": "|XXX', content, re.IGNORECASE))",
        "type": "FIXME",
        "context": "      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 59,
        "text": "', content, re.IGNORECASE))",
        "type": "XXX",
        "context": "      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 62,
        "text": "_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "type": "TODO",
        "context": "      59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n>>>   62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()\n      63:         \n      64:         return {\n      65:             \"implemented\": not is_stub,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 66,
        "text": "_count\": todo_count,",
        "type": "TODO",
        "context": "      63:         \n      64:         return {\n      65:             \"implemented\": not is_stub,\n>>>   66:             \"todo_count\": todo_count,\n      67:             \"is_stub\": is_stub,\n      68:             \"lines\": len(content.split('\\n'))\n      69:         }",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 135,
        "text": "_count\": 0}",
        "type": "TODO",
        "context": "     132:     for group_name, group_info in commands[\"groups\"].items():\n     133:         cmd_file = cli_dir / f\"{group_name}.py\"\n     134:         \n>>>  135:         impl_status = check_command_implementation(cmd_file) if cmd_file.exists() else {\"implemented\": False, \"todo_count\": 0}\n     136:         test_coverage = check_test_coverage(group_name)\n     137:         \n     138:         inventory[\"commands\"][group_name] = {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\debug_deployment_error.py",
        "line": 143,
        "text": "Passing entire config dict instead of RPC URL!\")",
        "type": "BUG",
        "context": "     140:                     \n     141:                     # Check what's being passed\n     142:                     if \"self.config['networks']\" in line:\n>>>  143:                         print_error(\"\u274c FOUND BUG: Passing entire config dict instead of RPC URL!\")\n     144:                         print_warning(\"Should pass: rpc_url (string)\")\n     145:                         print_warning(\"Currently passing: self.config['networks'][network] (dict)\")\n     146:                     elif \"rpc_url\" in line:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\debug_deployment_error.py",
        "line": 191,
        "text": "Deployer expects 'config' dict, not 'rpc_url' string!\")",
        "type": "BUG",
        "context": "     188:         if len(param_names) > 1:\n     189:             second_param = param_names[1]\n     190:             if second_param == 'config':\n>>>  191:                 print_error(\"\u274c FOUND BUG: Deployer expects 'config' dict, not 'rpc_url' string!\")\n     192:             elif second_param == 'network':\n     193:                 print_success(\"\u2713 Deployer correctly expects 'network' string\")\n     194:             else:",
        "priority": "high",
        "labels": [
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      {
        "file": ".\\scripts\\debug_deployment_error.py",
        "line": 381,
        "text": "analysis complete!{Colors.END}\\n\")",
        "type": "BUG",
        "context": "     378:     # Generate final report\n     379:     generate_report()\n     380:     \n>>>  381:     print(f\"\\n{Colors.BOLD}{Colors.GREEN}\u2705 Debug analysis complete!{Colors.END}\\n\")\n     382: \n     383: if __name__ == \"__main__\":\n     384:     main()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\doc_drift_audit.py",
        "line": 134,
        "text": "and update content\"",
        "type": "REVIEW",
        "context": "     131:                         \"pattern\": \"stale_file\",\n     132:                         \"age_days\": file_age.days,\n     133:                         \"severity\": \"low\",\n>>>  134:                         \"recommendation\": \"Review and update content\"\n     135:                     })\n     136:                 \n     137:                 content = md_file.read_text(encoding='utf-8', errors='ignore')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\doc_drift_audit.py",
        "line": 228,
        "text": "old files for updates\")",
        "type": "REVIEW",
        "context": "     225:         if medium_severity > 0:\n     226:             self.audit_results[\"recommendations\"].append(\"Medium priority: Update future-tense language and stale content\")\n     227:         if low_severity > 0:\n>>>  228:             self.audit_results[\"recommendations\"].append(\"Low priority: Review old files for updates\")\n     229:         \n     230:         if total_issues == 0:\n     231:             self.audit_results[\"recommendations\"].append(\"No drift detected - documentation is up to date!\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 3,
        "text": "to Issues Conversion Script",
        "type": "TODO",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n>>>    3: Focused TODO to Issues Conversion Script\n       4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 4,
        "text": "/TBD sections and converts them into GitHub issues",
        "type": "TODO",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Focused TODO to Issues Conversion Script\n>>>    4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"\n       7: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 4,
        "text": "sections and converts them into GitHub issues",
        "type": "TBD",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Focused TODO to Issues Conversion Script\n>>>    4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"\n       7: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 35,
        "text": "s\"\"\"",
        "type": "TODO",
        "context": "      32:         }\n      33: \n      34: def should_scan_file(file_path: str) -> bool:\n>>>   35:     \"\"\"Determine if a file should be scanned for TODOs\"\"\"\n      36:     \n      37:     # Skip certain directories\n      38:     skip_dirs = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 87,
        "text": "s() -> List[Dict[str, Any]]:",
        "type": "TODO",
        "context": "      84:     \n      85:     return False\n      86: \n>>>   87: def scan_for_todos() -> List[Dict[str, Any]]:\n      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 88,
        "text": "markers in our actual code\"\"\"",
        "type": "FIXME",
        "context": "      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 90,
        "text": "_patterns = [",
        "type": "TODO",
        "context": "      87: def scan_for_todos() -> List[Dict[str, Any]]:\n      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n>>>   90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 91,
        "text": "?\\s*(.+)',",
        "type": "TODO",
        "context": "      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n>>>   91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 92,
        "text": "?\\s*(.+)',",
        "type": "TBD",
        "context": "      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n>>>   92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 93,
        "text": "?\\s*(.+)',",
        "type": "FIXME",
        "context": "      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n>>>   93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 94,
        "text": "?\\s*(.+)',",
        "type": "XXX",
        "context": "      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n>>>   94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 95,
        "text": "?\\s*(.+)',",
        "type": "HACK",
        "context": "      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n>>>   95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 96,
        "text": "?\\s*(.+)',",
        "type": "BUG",
        "context": "      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n>>>   96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 97,
        "text": "?\\s*(.+)',",
        "type": "NOTE",
        "context": "      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n>>>   97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 98,
        "text": "?\\s*(.+)'",
        "type": "REVIEW",
        "context": "      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n>>>   98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     \n     101:     todos = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 101,
        "text": "s = []",
        "type": "TODO",
        "context": "      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     \n>>>  101:     todos = []\n     102:     \n     103:     # Scan all files\n     104:     for root, dirs, files in os.walk('.'):",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 120,
        "text": "patterns",
        "type": "TODO",
        "context": "     117:                     content = f.read()\n     118:                     lines = content.split('\\n')\n     119:                     \n>>>  120:                 # Check for TODO patterns\n     121:                 for line_num, line in enumerate(lines, 1):\n     122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 122,
        "text": "_patterns:",
        "type": "TODO",
        "context": "     119:                     \n     120:                 # Check for TODO patterns\n     121:                 for line_num, line in enumerate(lines, 1):\n>>>  122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n     125:                             todo_text = matches[0].strip()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 125,
        "text": "_text = matches[0].strip()",
        "type": "TODO",
        "context": "     122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n>>>  125:                             todo_text = matches[0].strip()\n     126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n     127:                                 todos.append({\n     128:                                     'file': file_path,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 126,
        "text": "_text and len(todo_text) > 3:  # Only meaningful TODOs",
        "type": "TODO",
        "context": "     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n     125:                             todo_text = matches[0].strip()\n>>>  126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n     127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 127,
        "text": "s.append({",
        "type": "TODO",
        "context": "     124:                         if matches:\n     125:                             todo_text = matches[0].strip()\n     126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n>>>  127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,\n     130:                                     'text': todo_text,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 130,
        "text": "_text,",
        "type": "TODO",
        "context": "     127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,\n>>>  130:                                     'text': todo_text,\n     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n     133:                                     'priority': _determine_priority(todo_text, file_path),",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 133,
        "text": "_text, file_path),",
        "type": "TODO",
        "context": "     130:                                     'text': todo_text,\n     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n>>>  133:                                     'priority': _determine_priority(todo_text, file_path),\n     134:                                     'labels': _determine_labels(todo_text, file_path)\n     135:                                 })\n     136:                                 ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 134,
        "text": "_text, file_path)",
        "type": "TODO",
        "context": "     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n     133:                                     'priority': _determine_priority(todo_text, file_path),\n>>>  134:                                     'labels': _determine_labels(todo_text, file_path)\n     135:                                 })\n     136:                                 \n     137:             except Exception as e:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 143,
        "text": "line\"\"\"",
        "type": "TODO",
        "context": "     140:     return todos\n     141: \n     142: def _get_context(lines: List[str], line_num: int, context_size: int = 3) -> str:\n>>>  143:     \"\"\"Get context around a TODO line\"\"\"\n     144:     start = max(0, line_num - context_size - 1)\n     145:     end = min(len(lines), line_num + context_size)\n     146:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 154,
        "text": "_text: str, file_path: str) -> str:",
        "type": "TODO",
        "context": "     151:     \n     152:     return '\\n'.join(context_lines)\n     153: \n>>>  154: def _determine_priority(todo_text: str, file_path: str) -> str:\n     155:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     156:     \n     157:     # High priority keywords",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 155,
        "text": "content and file location\"\"\"",
        "type": "TODO",
        "context": "     152:     return '\\n'.join(context_lines)\n     153: \n     154: def _determine_priority(todo_text: str, file_path: str) -> str:\n>>>  155:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     156:     \n     157:     # High priority keywords\n     158:     high_priority_keywords = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 175,
        "text": "_lower = todo_text.lower()",
        "type": "TODO",
        "context": "     172:         'cosmetic', 'minor', 'low priority'\n     173:     ]\n     174:     \n>>>  175:     todo_lower = todo_text.lower()\n     176:     \n     177:     # Check for priority keywords\n     178:     for keyword in high_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 179,
        "text": "_lower:",
        "type": "TODO",
        "context": "     176:     \n     177:     # Check for priority keywords\n     178:     for keyword in high_priority_keywords:\n>>>  179:         if keyword in todo_lower:\n     180:             return 'high'\n     181:     \n     182:     for keyword in medium_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 183,
        "text": "_lower:",
        "type": "TODO",
        "context": "     180:             return 'high'\n     181:     \n     182:     for keyword in medium_priority_keywords:\n>>>  183:         if keyword in todo_lower:\n     184:             return 'medium'\n     185:     \n     186:     for keyword in low_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 187,
        "text": "_lower:",
        "type": "TODO",
        "context": "     184:             return 'medium'\n     185:     \n     186:     for keyword in low_priority_keywords:\n>>>  187:         if keyword in todo_lower:\n     188:             return 'low'\n     189:     \n     190:     # Default priority based on file location",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 198,
        "text": "_text: str, file_path: str) -> List[str]:",
        "type": "TODO",
        "context": "     195:     else:\n     196:         return 'medium'\n     197: \n>>>  198: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n     199:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     200:     \n     201:     labels = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 199,
        "text": "content and file location\"\"\"",
        "type": "TODO",
        "context": "     196:         return 'medium'\n     197: \n     198: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n>>>  199:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     200:     \n     201:     labels = []\n     202:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 204,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     201:     labels = []\n     202:     \n     203:     # Type-based labels\n>>>  204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n     206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 212,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     209:         labels.append('enhancement')\n     210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')\n>>>  212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')\n     214:     if 'performance' in todo_text.lower():\n     215:         labels.append('performance')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 214,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     211:         labels.append('documentation')\n     212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')\n>>>  214:     if 'performance' in todo_text.lower():\n     215:         labels.append('performance')\n     216:     \n     217:     # File-based labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 234,
        "text": "_text, file_path)",
        "type": "TODO",
        "context": "     231:         labels.append('documentation')\n     232:     \n     233:     # Priority labels\n>>>  234:     priority = _determine_priority(todo_text, file_path)\n     235:     labels.append(f'priority:{priority}')\n     236:     \n     237:     # Default labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 238,
        "text": "', 'maintenance'])",
        "type": "TODO",
        "context": "     235:     labels.append(f'priority:{priority}')\n     236:     \n     237:     # Default labels\n>>>  238:     labels.extend(['todo', 'maintenance'])\n     239:     \n     240:     return list(set(labels))  # Remove duplicates\n     241: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 242,
        "text": "s_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:",
        "type": "TODO",
        "context": "     239:     \n     240:     return list(set(labels))  # Remove duplicates\n     241: \n>>>  242: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n     243:     \"\"\"Group TODOs by category for better organization\"\"\"\n     244:     \n     245:     categories = {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 243,
        "text": "s by category for better organization\"\"\"",
        "type": "TODO",
        "context": "     240:     return list(set(labels))  # Remove duplicates\n     241: \n     242: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n>>>  243:     \"\"\"Group TODOs by category for better organization\"\"\"\n     244:     \n     245:     categories = {\n     246:         'cli_commands': [],",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 257,
        "text": "in todos:",
        "type": "TODO",
        "context": "     254:         'other': []\n     255:     }\n     256:     \n>>>  257:     for todo in todos:\n     258:         labels = todo['labels']\n     259:         \n     260:         if 'cli' in labels:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 258,
        "text": "['labels']",
        "type": "TODO",
        "context": "     255:     }\n     256:     \n     257:     for todo in todos:\n>>>  258:         labels = todo['labels']\n     259:         \n     260:         if 'cli' in labels:\n     261:             categories['cli_commands'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 272,
        "text": "' in labels:",
        "type": "BUG",
        "context": "     269:             categories['performance'].append(todo)\n     270:         elif 'enhancement' in labels:\n     271:             categories['features'].append(todo)\n>>>  272:         elif 'bug' in labels:\n     273:             categories['bug_fixes'].append(todo)\n     274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 274,
        "text": "['text'].lower():",
        "type": "TODO",
        "context": "     271:             categories['features'].append(todo)\n     272:         elif 'bug' in labels:\n     273:             categories['bug_fixes'].append(todo)\n>>>  274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)\n     276:         else:\n     277:             categories['other'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 281,
        "text": "Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:",
        "type": "TODO",
        "context": "     278:     \n     279:     return categories\n     280: \n>>>  281: def create_github_issue_template(todo: Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:\n     282:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     283:     \n     284:     # Determine issue title",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 285,
        "text": "['type']}] {todo['text'][:80]}\"",
        "type": "TODO",
        "context": "     282:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     283:     \n     284:     # Determine issue title\n>>>  285:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n     286:     if len(todo['text']) > 80:\n     287:         title += \"...\"\n     288:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 286,
        "text": "['text']) > 80:",
        "type": "TODO",
        "context": "     283:     \n     284:     # Determine issue title\n     285:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n>>>  286:     if len(todo['text']) > 80:\n     287:         title += \"...\"\n     288:     \n     289:     # Create issue body",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 290,
        "text": "['type']} Item",
        "type": "TODO",
        "context": "     287:         title += \"...\"\n     288:     \n     289:     # Create issue body\n>>>  290:     body = f\"\"\"## {todo['type']} Item\n     291: \n     292: **Description**: {todo['text']}\n     293: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 292,
        "text": "['text']}",
        "type": "TODO",
        "context": "     289:     # Create issue body\n     290:     body = f\"\"\"## {todo['type']} Item\n     291: \n>>>  292: **Description**: {todo['text']}\n     293: \n     294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 294,
        "text": "['file']}`",
        "type": "TODO",
        "context": "     291: \n     292: **Description**: {todo['text']}\n     293: \n>>>  294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  \n     296: **Priority**: {todo['priority']}  \n     297: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 295,
        "text": "['line']}",
        "type": "TODO",
        "context": "     292: **Description**: {todo['text']}\n     293: \n     294: **File**: `{todo['file']}`  \n>>>  295: **Line**: {todo['line']}  \n     296: **Priority**: {todo['priority']}  \n     297: \n     298: ### Context",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 296,
        "text": "['priority']}",
        "type": "TODO",
        "context": "     293: \n     294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  \n>>>  296: **Priority**: {todo['priority']}  \n     297: \n     298: ### Context\n     299: ```text",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 300,
        "text": "['context']}",
        "type": "TODO",
        "context": "     297: \n     298: ### Context\n     299: ```text\n>>>  300: {todo['context']}\n     301: ```\n     302: \n     303: ### Acceptance Criteria",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 304,
        "text": "item has been addressed",
        "type": "TODO",
        "context": "     301: ```\n     302: \n     303: ### Acceptance Criteria\n>>>  304: - [ ] TODO item has been addressed\n     305: - [ ] Code has been tested\n     306: - [ ] Documentation updated (if applicable)\n     307: - [ ] No regressions introduced",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 315,
        "text": "comment in the codebase.*",
        "type": "TODO",
        "context": "     312: - **Branch**: `{git_info['branch']}`\n     313: \n     314: ---\n>>>  315: *This issue was automatically created from a TODO comment in the codebase.*\n     316: \"\"\"\n     317:     \n     318:     return {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 321,
        "text": "['labels']",
        "type": "TODO",
        "context": "     318:     return {\n     319:         'title': title,\n     320:         'body': body,\n>>>  321:         'labels': todo['labels']\n     322:     }\n     323: \n     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 325,
        "text": "s found\"\"\"",
        "type": "TODO",
        "context": "     322:     }\n     323: \n     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n>>>  325:     \"\"\"Generate summary of all TODOs found\"\"\"\n     326:     \n     327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 327,
        "text": "s = sum(len(todos) for todos in categories.values())",
        "type": "TODO",
        "context": "     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n     325:     \"\"\"Generate summary of all TODOs found\"\"\"\n     326:     \n>>>  327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     \n     329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 329,
        "text": "to GitHub Issues Conversion Report",
        "type": "TODO",
        "context": "     326:     \n     327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     \n>>>  329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: \n     331: **Generated**: {datetime.now().isoformat()}  \n     332: **Total TODOs Found**: {total_todos}",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 332,
        "text": "s Found**: {total_todos}",
        "type": "TODO",
        "context": "     329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: \n     331: **Generated**: {datetime.now().isoformat()}  \n>>>  332: **Total TODOs Found**: {total_todos}\n     333: \n     334: ## Summary by Category\n     335: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 338,
        "text": "s in categories.items():",
        "type": "TODO",
        "context": "     335: \n     336: \"\"\"\n     337:     \n>>>  338:     for category, todos in categories.items():\n     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 340,
        "text": "s)} items)\\n\"",
        "type": "TODO",
        "context": "     337:     \n     338:     for category, todos in categories.items():\n     339:         if todos:\n>>>  340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 341,
        "text": "in todos[:5]:  # Show first 5",
        "type": "TODO",
        "context": "     338:     for category, todos in categories.items():\n     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n>>>  341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 342,
        "text": "['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"",
        "type": "TODO",
        "context": "     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n>>>  342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 343,
        "text": "s) > 5:",
        "type": "TODO",
        "context": "     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n>>>  343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"\n     346:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 344,
        "text": "s) - 5} more\\n\"",
        "type": "TODO",
        "context": "     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n>>>  344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"\n     346:     \n     347:     summary += \"\"\"## Next Steps",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 349,
        "text": "all generated issues",
        "type": "REVIEW",
        "context": "     346:     \n     347:     summary += \"\"\"## Next Steps\n     348: \n>>>  349: 1. Review all generated issues\n     350: 2. Prioritize based on business impact\n     351: 3. Assign to appropriate team members\n     352: 4. Create milestones for related issues",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 357,
        "text": "has been converted to a GitHub issue with:",
        "type": "TODO",
        "context": "     354: \n     355: ## Issue Templates Generated\n     356: \n>>>  357: Each TODO has been converted to a GitHub issue with:\n     358: - Descriptive title\n     359: - Full context and file location\n     360: - Priority and labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 365,
        "text": "to GitHub Issues conversion script.*",
        "type": "TODO",
        "context": "     362: - Additional metadata\n     363: \n     364: ---\n>>>  365: *This report is automatically generated by the focused TODO to GitHub Issues conversion script.*\n     366: \"\"\"\n     367:     \n     368:     return summary",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 372,
        "text": "items...\")",
        "type": "FIXME",
        "context": "     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 378,
        "text": "s = scan_for_todos()",
        "type": "TODO",
        "context": "     375:     git_info = get_git_info()\n     376:     \n     377:     # Scan for TODOs\n>>>  378:     todos = scan_for_todos()\n     379:     \n     380:     if not todos:\n     381:         print(\"No TODO items found in our codebase!\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 381,
        "text": "items found in our codebase!\")",
        "type": "TODO",
        "context": "     378:     todos = scan_for_todos()\n     379:     \n     380:     if not todos:\n>>>  381:         print(\"No TODO items found in our codebase!\")\n     382:         return 0\n     383:     \n     384:     print(f\"Found {len(todos)} TODO items in our codebase\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 384,
        "text": "s)} TODO items in our codebase\")",
        "type": "TODO",
        "context": "     381:         print(\"No TODO items found in our codebase!\")\n     382:         return 0\n     383:     \n>>>  384:     print(f\"Found {len(todos)} TODO items in our codebase\")\n     385:     \n     386:     # Group by category\n     387:     categories = group_todos_by_category(todos)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 387,
        "text": "s_by_category(todos)",
        "type": "TODO",
        "context": "     384:     print(f\"Found {len(todos)} TODO items in our codebase\")\n     385:     \n     386:     # Group by category\n>>>  387:     categories = group_todos_by_category(todos)\n     388:     \n     389:     # Generate issue templates\n     390:     issue_templates = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 391,
        "text": "in todos:",
        "type": "TODO",
        "context": "     388:     \n     389:     # Generate issue templates\n     390:     issue_templates = []\n>>>  391:     for todo in todos:\n     392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n     394:             'todo': todo,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 392,
        "text": ", git_info)",
        "type": "TODO",
        "context": "     389:     # Generate issue templates\n     390:     issue_templates = []\n     391:     for todo in todos:\n>>>  392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n     394:             'todo': todo,\n     395:             'issue_template': issue_template",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 394,
        "text": "': todo,",
        "type": "TODO",
        "context": "     391:     for todo in todos:\n     392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n>>>  394:             'todo': todo,\n     395:             'issue_template': issue_template\n     396:         })\n     397:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 402,
        "text": "s': len(todos),",
        "type": "TODO",
        "context": "     399:     results = {\n     400:         'scan_date': datetime.now().isoformat(),\n     401:         'git_info': git_info,\n>>>  402:         'total_todos': len(todos),\n     403:         'categories': categories,\n     404:         'issue_templates': issue_templates\n     405:     }",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 408,
        "text": "_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:",
        "type": "TODO",
        "context": "     405:     }\n     406:     \n     407:     # Write JSON report\n>>>  408:     with open('REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:\n     409:         json.dump(results, f, indent=2)\n     410:     \n     411:     # Generate summary report",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 413,
        "text": "_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:",
        "type": "TODO",
        "context": "     410:     \n     411:     # Generate summary report\n     412:     summary = generate_issue_summary(categories)\n>>>  413:     with open('REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:\n     414:         f.write(summary)\n     415:     \n     416:     # Print summary",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 417,
        "text": "to GitHub Issues Conversion Complete!\")",
        "type": "TODO",
        "context": "     414:         f.write(summary)\n     415:     \n     416:     # Print summary\n>>>  417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 418,
        "text": "s found: {len(todos)}\")",
        "type": "TODO",
        "context": "     415:     \n     416:     # Print summary\n     417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n>>>  418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 420,
        "text": "s_in_category in categories.items():",
        "type": "TODO",
        "context": "     417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n>>>  420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:\n     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 421,
        "text": "s_in_category:",
        "type": "TODO",
        "context": "     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():\n>>>  421:         if todos_in_category:\n     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 422,
        "text": "s_in_category)}\")",
        "type": "TODO",
        "context": "     419:     \n     420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:\n>>>  422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")\n     425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 425,
        "text": "_TO_ISSUES_CONVERSION.json\")",
        "type": "TODO",
        "context": "     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")\n>>>  425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")\n     426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 426,
        "text": "_TO_ISSUES_SUMMARY.md\")",
        "type": "TODO",
        "context": "     423:     \n     424:     print(f\"\\nReports generated:\")\n     425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")\n>>>  426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")\n     429:     print(f\"1. Review the generated issue templates\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 429,
        "text": "the generated issue templates\")",
        "type": "REVIEW",
        "context": "     426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")\n>>>  429:     print(f\"1. Review the generated issue templates\")\n     430:     print(f\"2. Create GitHub issues using the templates\")\n     431:     print(f\"3. Assign appropriate labels and priorities\")\n     432:     print(f\"4. Track progress in your project management tool\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\integration_sdk_audit.py",
        "line": 44,
        "text": "\" in content or \"mock\" in content.lower():",
        "type": "FIXME",
        "context": "      41:                 # Check if it's a real implementation or stub\n      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n>>>   44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n      45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\integration_sdk_audit.py",
        "line": 45,
        "text": "s/mocks\")",
        "type": "TODO",
        "context": "      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n      44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n>>>   45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")\n      48:             else:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 50,
        "text": "_markers': [",
        "type": "TODO",
        "context": "      47:             r'will create',\n      48:             r'will generate'\n      49:         ],\n>>>   50:         'todo_markers': [\n      51:             r'TODO:',\n      52:             r'FIXME:',\n      53:             r'XXX:',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 65,
        "text": "_files': [],",
        "type": "TODO",
        "context": "      62:         'legacy_files': [],\n      63:         'unimplemented_features': [],\n      64:         'future_tense_docs': [],\n>>>   65:         'todo_files': [],\n      66:         'summary': {}\n      67:     }\n      68:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 107,
        "text": "_files': len(results.get('todo_markers', []))",
        "type": "TODO",
        "context": "     104:         'legacy_references': len(results.get('python_scripts', [])) + len(results.get('shell_scripts', [])),\n     105:         'unimplemented_features': len(results.get('unimplemented_commands', [])),\n     106:         'future_tense_docs': len(results.get('future_tense', [])),\n>>>  107:         'todo_files': len(results.get('todo_markers', []))\n     108:     }\n     109:     \n     110:     return results",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 256,
        "text": "ARCHIVE/ directory for archived files\"",
        "type": "REVIEW",
        "context": "     253:     \n     254:     script_content += '''\n     255: echo \"Legacy file cleanup completed!\"\n>>>  256: echo \"Review ARCHIVE/ directory for archived files\"\n     257: echo \"Review files with NOT IMPLEMENTED banners\"\n     258: '''\n     259:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 257,
        "text": "files with NOT IMPLEMENTED banners\"",
        "type": "REVIEW",
        "context": "     254:     script_content += '''\n     255: echo \"Legacy file cleanup completed!\"\n     256: echo \"Review ARCHIVE/ directory for archived files\"\n>>>  257: echo \"Review files with NOT IMPLEMENTED banners\"\n     258: '''\n     259:     \n     260:     return script_content",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 306,
        "text": "files: {scan_results['summary']['todo_files']}\")",
        "type": "TODO",
        "context": "     303:     print(f\"Legacy references found: {scan_results['summary']['legacy_references']}\")\n     304:     print(f\"Unimplemented features: {scan_results['summary']['unimplemented_features']}\")\n     305:     print(f\"Future tense docs: {scan_results['summary']['future_tense_docs']}\")\n>>>  306:     print(f\"TODO files: {scan_results['summary']['todo_files']}\")\n     307:     print(f\"\\nArchive candidates: {len(recommendations['archive_candidates'])}\")\n     308:     print(f\"NOT IMPLEMENTED candidates: {len(recommendations['not_implemented_candidates'])}\")\n     309:     print(f\"Update candidates: {len(recommendations['update_candidates'])}\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\prepare_rag_templates.py",
        "line": 144,
        "text": "\": \"Each template has unique CID, descriptive name for AI agent consumption\",",
        "type": "NOTE",
        "context": "     141:             \"version\": \"1.0.0\",\n     142:             \"last_updated\": \"2025-10-28\",\n     143:             \"purpose\": \"CID registry mapping for AI agent RAG template lookups\",\n>>>  144:             \"note\": \"Each template has unique CID, descriptive name for AI agent consumption\",\n     145:             \"templates_prepared\": len(prepared_templates),\n     146:             \"ready_for_upload\": True\n     147:         },",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\prepare_rag_templates.py",
        "line": 165,
        "text": "prepared templates in artifacts/rag_templates/\")",
        "type": "REVIEW",
        "context": "     162:     update_cid_registry(registry_path, registry_data)\n     163:     \n     164:     print(\"\\nNext Steps:\")\n>>>  165:     print(\"1. Review prepared templates in artifacts/rag_templates/\")\n     166:     print(\"2. Upload each template to IPFS Pinata\")\n     167:     print(\"3. Update cid-registry.json with actual CIDs\")\n     168:     print(\"4. Test RAG system with new templates\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 4,
        "text": "/TBD sections and converts them into GitHub issues",
        "type": "TODO",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Stub to Ticket Conversion Script\n>>>    4: Scans codebase for TODO/TBD sections and converts them into GitHub issues\n       5: with proper labels and priorities for tracking\n       6: \"\"\"\n       7: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 4,
        "text": "sections and converts them into GitHub issues",
        "type": "TBD",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Stub to Ticket Conversion Script\n>>>    4: Scans codebase for TODO/TBD sections and converts them into GitHub issues\n       5: with proper labels and priorities for tracking\n       6: \"\"\"\n       7: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 34,
        "text": "s() -> List[Dict[str, Any]]:",
        "type": "TODO",
        "context": "      31:             'branch': 'unknown'\n      32:         }\n      33: \n>>>   34: def scan_for_todos() -> List[Dict[str, Any]]:\n      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 35,
        "text": "/XXX markers\"\"\"",
        "type": "FIXME",
        "context": "      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 35,
        "text": "markers\"\"\"",
        "type": "XXX",
        "context": "      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 37,
        "text": "_patterns = [",
        "type": "TODO",
        "context": "      34: def scan_for_todos() -> List[Dict[str, Any]]:\n      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n>>>   37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 38,
        "text": "?\\s*(.+)',",
        "type": "TODO",
        "context": "      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n>>>   38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 39,
        "text": "?\\s*(.+)',",
        "type": "TBD",
        "context": "      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n>>>   39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 40,
        "text": "?\\s*(.+)',",
        "type": "FIXME",
        "context": "      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n>>>   40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 41,
        "text": "?\\s*(.+)',",
        "type": "XXX",
        "context": "      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n>>>   41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 42,
        "text": "?\\s*(.+)',",
        "type": "HACK",
        "context": "      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n>>>   42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 43,
        "text": "?\\s*(.+)',",
        "type": "BUG",
        "context": "      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n>>>   43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 44,
        "text": "?\\s*(.+)',",
        "type": "NOTE",
        "context": "      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n>>>   44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 45,
        "text": "?\\s*(.+)'",
        "type": "REVIEW",
        "context": "      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n>>>   45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     \n      48:     todos = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 48,
        "text": "s = []",
        "type": "TODO",
        "context": "      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     \n>>>   48:     todos = []\n      49:     \n      50:     # Scan all files\n      51:     for root, dirs, files in os.walk('.'):",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 64,
        "text": "patterns",
        "type": "TODO",
        "context": "      61:                         content = f.read()\n      62:                         lines = content.split('\\n')\n      63:                         \n>>>   64:                     # Check for TODO patterns\n      65:                     for line_num, line in enumerate(lines, 1):\n      66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 66,
        "text": "_patterns:",
        "type": "TODO",
        "context": "      63:                         \n      64:                     # Check for TODO patterns\n      65:                     for line_num, line in enumerate(lines, 1):\n>>>   66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 69,
        "text": "_text = matches[0].strip()",
        "type": "TODO",
        "context": "      66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n>>>   69:                                 todo_text = matches[0].strip()\n      70:                                 if todo_text:  # Only non-empty TODOs\n      71:                                     todos.append({\n      72:                                         'file': file_path,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 70,
        "text": "_text:  # Only non-empty TODOs",
        "type": "TODO",
        "context": "      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()\n>>>   70:                                 if todo_text:  # Only non-empty TODOs\n      71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 71,
        "text": "s.append({",
        "type": "TODO",
        "context": "      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()\n      70:                                 if todo_text:  # Only non-empty TODOs\n>>>   71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,\n      74:                                         'text': todo_text,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 74,
        "text": "_text,",
        "type": "TODO",
        "context": "      71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,\n>>>   74:                                         'text': todo_text,\n      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n      77:                                         'priority': _determine_priority(todo_text, file_path),",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 77,
        "text": "_text, file_path),",
        "type": "TODO",
        "context": "      74:                                         'text': todo_text,\n      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n>>>   77:                                         'priority': _determine_priority(todo_text, file_path),\n      78:                                         'labels': _determine_labels(todo_text, file_path)\n      79:                                     })\n      80:                                     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 78,
        "text": "_text, file_path)",
        "type": "TODO",
        "context": "      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n      77:                                         'priority': _determine_priority(todo_text, file_path),\n>>>   78:                                         'labels': _determine_labels(todo_text, file_path)\n      79:                                     })\n      80:                                     \n      81:                 except Exception as e:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 87,
        "text": "line\"\"\"",
        "type": "TODO",
        "context": "      84:     return todos\n      85: \n      86: def _get_context(lines: List[str], line_num: int, context_size: int = 3) -> str:\n>>>   87:     \"\"\"Get context around a TODO line\"\"\"\n      88:     start = max(0, line_num - context_size - 1)\n      89:     end = min(len(lines), line_num + context_size)\n      90:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 98,
        "text": "_text: str, file_path: str) -> str:",
        "type": "TODO",
        "context": "      95:     \n      96:     return '\\n'.join(context_lines)\n      97: \n>>>   98: def _determine_priority(todo_text: str, file_path: str) -> str:\n      99:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     100:     \n     101:     # High priority keywords",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 99,
        "text": "content and file location\"\"\"",
        "type": "TODO",
        "context": "      96:     return '\\n'.join(context_lines)\n      97: \n      98: def _determine_priority(todo_text: str, file_path: str) -> str:\n>>>   99:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     100:     \n     101:     # High priority keywords\n     102:     high_priority_keywords = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 119,
        "text": "_lower = todo_text.lower()",
        "type": "TODO",
        "context": "     116:         'cosmetic', 'minor', 'low priority'\n     117:     ]\n     118:     \n>>>  119:     todo_lower = todo_text.lower()\n     120:     \n     121:     # Check for priority keywords\n     122:     for keyword in high_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 123,
        "text": "_lower:",
        "type": "TODO",
        "context": "     120:     \n     121:     # Check for priority keywords\n     122:     for keyword in high_priority_keywords:\n>>>  123:         if keyword in todo_lower:\n     124:             return 'high'\n     125:     \n     126:     for keyword in medium_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 127,
        "text": "_lower:",
        "type": "TODO",
        "context": "     124:             return 'high'\n     125:     \n     126:     for keyword in medium_priority_keywords:\n>>>  127:         if keyword in todo_lower:\n     128:             return 'medium'\n     129:     \n     130:     for keyword in low_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 131,
        "text": "_lower:",
        "type": "TODO",
        "context": "     128:             return 'medium'\n     129:     \n     130:     for keyword in low_priority_keywords:\n>>>  131:         if keyword in todo_lower:\n     132:             return 'low'\n     133:     \n     134:     # Default priority based on file location",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 142,
        "text": "_text: str, file_path: str) -> List[str]:",
        "type": "TODO",
        "context": "     139:     else:\n     140:         return 'medium'\n     141: \n>>>  142: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n     143:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     144:     \n     145:     labels = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 143,
        "text": "content and file location\"\"\"",
        "type": "TODO",
        "context": "     140:         return 'medium'\n     141: \n     142: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n>>>  143:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     144:     \n     145:     labels = []\n     146:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 148,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     145:     labels = []\n     146:     \n     147:     # Type-based labels\n>>>  148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n     150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 156,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     153:         labels.append('enhancement')\n     154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')\n>>>  156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')\n     158:     if 'performance' in todo_text.lower():\n     159:         labels.append('performance')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 158,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     155:         labels.append('documentation')\n     156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')\n>>>  158:     if 'performance' in todo_text.lower():\n     159:         labels.append('performance')\n     160:     \n     161:     # File-based labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 178,
        "text": "_text, file_path)",
        "type": "TODO",
        "context": "     175:         labels.append('documentation')\n     176:     \n     177:     # Priority labels\n>>>  178:     priority = _determine_priority(todo_text, file_path)\n     179:     labels.append(f'priority:{priority}')\n     180:     \n     181:     # Default labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 182,
        "text": "', 'maintenance'])",
        "type": "TODO",
        "context": "     179:     labels.append(f'priority:{priority}')\n     180:     \n     181:     # Default labels\n>>>  182:     labels.extend(['todo', 'maintenance'])\n     183:     \n     184:     return list(set(labels))  # Remove duplicates\n     185: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 186,
        "text": "s_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:",
        "type": "TODO",
        "context": "     183:     \n     184:     return list(set(labels))  # Remove duplicates\n     185: \n>>>  186: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n     187:     \"\"\"Group TODOs by category for better organization\"\"\"\n     188:     \n     189:     categories = {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 187,
        "text": "s by category for better organization\"\"\"",
        "type": "TODO",
        "context": "     184:     return list(set(labels))  # Remove duplicates\n     185: \n     186: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n>>>  187:     \"\"\"Group TODOs by category for better organization\"\"\"\n     188:     \n     189:     categories = {\n     190:         'cli_commands': [],",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 201,
        "text": "in todos:",
        "type": "TODO",
        "context": "     198:         'other': []\n     199:     }\n     200:     \n>>>  201:     for todo in todos:\n     202:         labels = todo['labels']\n     203:         \n     204:         if 'cli' in labels:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 202,
        "text": "['labels']",
        "type": "TODO",
        "context": "     199:     }\n     200:     \n     201:     for todo in todos:\n>>>  202:         labels = todo['labels']\n     203:         \n     204:         if 'cli' in labels:\n     205:             categories['cli_commands'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 216,
        "text": "' in labels:",
        "type": "BUG",
        "context": "     213:             categories['performance'].append(todo)\n     214:         elif 'enhancement' in labels:\n     215:             categories['features'].append(todo)\n>>>  216:         elif 'bug' in labels:\n     217:             categories['bug_fixes'].append(todo)\n     218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 218,
        "text": "['text'].lower():",
        "type": "TODO",
        "context": "     215:             categories['features'].append(todo)\n     216:         elif 'bug' in labels:\n     217:             categories['bug_fixes'].append(todo)\n>>>  218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)\n     220:         else:\n     221:             categories['other'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 225,
        "text": "Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:",
        "type": "TODO",
        "context": "     222:     \n     223:     return categories\n     224: \n>>>  225: def create_github_issue_template(todo: Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:\n     226:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     227:     \n     228:     # Determine issue title",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 229,
        "text": "['type']}] {todo['text'][:80]}\"",
        "type": "TODO",
        "context": "     226:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     227:     \n     228:     # Determine issue title\n>>>  229:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n     230:     if len(todo['text']) > 80:\n     231:         title += \"...\"\n     232:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 230,
        "text": "['text']) > 80:",
        "type": "TODO",
        "context": "     227:     \n     228:     # Determine issue title\n     229:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n>>>  230:     if len(todo['text']) > 80:\n     231:         title += \"...\"\n     232:     \n     233:     # Create issue body",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 234,
        "text": "['type']} Item",
        "type": "TODO",
        "context": "     231:         title += \"...\"\n     232:     \n     233:     # Create issue body\n>>>  234:     body = f\"\"\"## {todo['type']} Item\n     235: \n     236: **Description**: {todo['text']}\n     237: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 236,
        "text": "['text']}",
        "type": "TODO",
        "context": "     233:     # Create issue body\n     234:     body = f\"\"\"## {todo['type']} Item\n     235: \n>>>  236: **Description**: {todo['text']}\n     237: \n     238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 238,
        "text": "['file']}`",
        "type": "TODO",
        "context": "     235: \n     236: **Description**: {todo['text']}\n     237: \n>>>  238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  \n     240: **Priority**: {todo['priority']}  \n     241: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 239,
        "text": "['line']}",
        "type": "TODO",
        "context": "     236: **Description**: {todo['text']}\n     237: \n     238: **File**: `{todo['file']}`  \n>>>  239: **Line**: {todo['line']}  \n     240: **Priority**: {todo['priority']}  \n     241: \n     242: ### Context",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 240,
        "text": "['priority']}",
        "type": "TODO",
        "context": "     237: \n     238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  \n>>>  240: **Priority**: {todo['priority']}  \n     241: \n     242: ### Context\n     243: ```text",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 244,
        "text": "['context']}",
        "type": "TODO",
        "context": "     241: \n     242: ### Context\n     243: ```text\n>>>  244: {todo['context']}\n     245: ```\n     246: \n     247: ### Acceptance Criteria",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 248,
        "text": "item has been addressed",
        "type": "TODO",
        "context": "     245: ```\n     246: \n     247: ### Acceptance Criteria\n>>>  248: - [ ] TODO item has been addressed\n     249: - [ ] Code has been tested\n     250: - [ ] Documentation updated (if applicable)\n     251: - [ ] No regressions introduced",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 259,
        "text": "comment in the codebase.*",
        "type": "TODO",
        "context": "     256: - **Branch**: `{git_info['branch']}`\n     257: \n     258: ---\n>>>  259: *This issue was automatically created from a TODO comment in the codebase.*\n     260: \"\"\"\n     261:     \n     262:     return {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 265,
        "text": "['labels']",
        "type": "TODO",
        "context": "     262:     return {\n     263:         'title': title,\n     264:         'body': body,\n>>>  265:         'labels': todo['labels']\n     266:     }\n     267: \n     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 269,
        "text": "s found\"\"\"",
        "type": "TODO",
        "context": "     266:     }\n     267: \n     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n>>>  269:     \"\"\"Generate summary of all TODOs found\"\"\"\n     270:     \n     271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 271,
        "text": "s = sum(len(todos) for todos in categories.values())",
        "type": "TODO",
        "context": "     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n     269:     \"\"\"Generate summary of all TODOs found\"\"\"\n     270:     \n>>>  271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     \n     273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 273,
        "text": "to GitHub Issues Conversion Report",
        "type": "TODO",
        "context": "     270:     \n     271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     \n>>>  273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: \n     275: **Generated**: {datetime.now().isoformat()}  \n     276: **Total TODOs Found**: {total_todos}",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 276,
        "text": "s Found**: {total_todos}",
        "type": "TODO",
        "context": "     273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: \n     275: **Generated**: {datetime.now().isoformat()}  \n>>>  276: **Total TODOs Found**: {total_todos}\n     277: \n     278: ## Summary by Category\n     279: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 282,
        "text": "s in categories.items():",
        "type": "TODO",
        "context": "     279: \n     280: \"\"\"\n     281:     \n>>>  282:     for category, todos in categories.items():\n     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 284,
        "text": "s)} items)\\n\"",
        "type": "TODO",
        "context": "     281:     \n     282:     for category, todos in categories.items():\n     283:         if todos:\n>>>  284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 285,
        "text": "in todos[:5]:  # Show first 5",
        "type": "TODO",
        "context": "     282:     for category, todos in categories.items():\n     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n>>>  285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 286,
        "text": "['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"",
        "type": "TODO",
        "context": "     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n>>>  286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 287,
        "text": "s) > 5:",
        "type": "TODO",
        "context": "     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n>>>  287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"\n     290:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 288,
        "text": "s) - 5} more\\n\"",
        "type": "TODO",
        "context": "     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n>>>  288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"\n     290:     \n     291:     summary += \"\"\"## Next Steps",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 293,
        "text": "all generated issues",
        "type": "REVIEW",
        "context": "     290:     \n     291:     summary += \"\"\"## Next Steps\n     292: \n>>>  293: 1. Review all generated issues\n     294: 2. Prioritize based on business impact\n     295: 3. Assign to appropriate team members\n     296: 4. Create milestones for related issues",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 301,
        "text": "has been converted to a GitHub issue with:",
        "type": "TODO",
        "context": "     298: \n     299: ## Issue Templates Generated\n     300: \n>>>  301: Each TODO has been converted to a GitHub issue with:\n     302: - Descriptive title\n     303: - Full context and file location\n     304: - Priority and labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 309,
        "text": "to GitHub Issues conversion script.*",
        "type": "TODO",
        "context": "     306: - Additional metadata\n     307: \n     308: ---\n>>>  309: *This report is automatically generated by the TODO to GitHub Issues conversion script.*\n     310: \"\"\"\n     311:     \n     312:     return summary",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 316,
        "text": "items...\")",
        "type": "FIXME",
        "context": "     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 322,
        "text": "s = scan_for_todos()",
        "type": "TODO",
        "context": "     319:     git_info = get_git_info()\n     320:     \n     321:     # Scan for TODOs\n>>>  322:     todos = scan_for_todos()\n     323:     \n     324:     if not todos:\n     325:         print(\"No TODO items found!\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 325,
        "text": "items found!\")",
        "type": "TODO",
        "context": "     322:     todos = scan_for_todos()\n     323:     \n     324:     if not todos:\n>>>  325:         print(\"No TODO items found!\")\n     326:         return 0\n     327:     \n     328:     print(f\"Found {len(todos)} TODO items\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 328,
        "text": "s)} TODO items\")",
        "type": "TODO",
        "context": "     325:         print(\"No TODO items found!\")\n     326:         return 0\n     327:     \n>>>  328:     print(f\"Found {len(todos)} TODO items\")\n     329:     \n     330:     # Group by category\n     331:     categories = group_todos_by_category(todos)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 331,
        "text": "s_by_category(todos)",
        "type": "TODO",
        "context": "     328:     print(f\"Found {len(todos)} TODO items\")\n     329:     \n     330:     # Group by category\n>>>  331:     categories = group_todos_by_category(todos)\n     332:     \n     333:     # Generate issue templates\n     334:     issue_templates = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 335,
        "text": "in todos:",
        "type": "TODO",
        "context": "     332:     \n     333:     # Generate issue templates\n     334:     issue_templates = []\n>>>  335:     for todo in todos:\n     336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n     338:             'todo': todo,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 336,
        "text": ", git_info)",
        "type": "TODO",
        "context": "     333:     # Generate issue templates\n     334:     issue_templates = []\n     335:     for todo in todos:\n>>>  336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n     338:             'todo': todo,\n     339:             'issue_template': issue_template",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 338,
        "text": "': todo,",
        "type": "TODO",
        "context": "     335:     for todo in todos:\n     336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n>>>  338:             'todo': todo,\n     339:             'issue_template': issue_template\n     340:         })\n     341:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 346,
        "text": "s': len(todos),",
        "type": "TODO",
        "context": "     343:     results = {\n     344:         'scan_date': datetime.now().isoformat(),\n     345:         'git_info': git_info,\n>>>  346:         'total_todos': len(todos),\n     347:         'categories': categories,\n     348:         'issue_templates': issue_templates\n     349:     }",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 352,
        "text": "_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:",
        "type": "TODO",
        "context": "     349:     }\n     350:     \n     351:     # Write JSON report\n>>>  352:     with open('REPORTS/TODO_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:\n     353:         json.dump(results, f, indent=2)\n     354:     \n     355:     # Generate summary report",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 357,
        "text": "_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:",
        "type": "TODO",
        "context": "     354:     \n     355:     # Generate summary report\n     356:     summary = generate_issue_summary(categories)\n>>>  357:     with open('REPORTS/TODO_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:\n     358:         f.write(summary)\n     359:     \n     360:     # Print summary",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 361,
        "text": "to GitHub Issues Conversion Complete!\")",
        "type": "TODO",
        "context": "     358:         f.write(summary)\n     359:     \n     360:     # Print summary\n>>>  361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 362,
        "text": "s found: {len(todos)}\")",
        "type": "TODO",
        "context": "     359:     \n     360:     # Print summary\n     361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n>>>  362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 364,
        "text": "s_in_category in categories.items():",
        "type": "TODO",
        "context": "     361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n>>>  364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:\n     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 365,
        "text": "s_in_category:",
        "type": "TODO",
        "context": "     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():\n>>>  365:         if todos_in_category:\n     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 366,
        "text": "s_in_category)}\")",
        "type": "TODO",
        "context": "     363:     \n     364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:\n>>>  366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")\n     369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 369,
        "text": "_TO_ISSUES_CONVERSION.json\")",
        "type": "TODO",
        "context": "     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")\n>>>  369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")\n     370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 370,
        "text": "_TO_ISSUES_SUMMARY.md\")",
        "type": "TODO",
        "context": "     367:     \n     368:     print(f\"\\nReports generated:\")\n     369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")\n>>>  370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")\n     373:     print(f\"1. Review the generated issue templates\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 373,
        "text": "the generated issue templates\")",
        "type": "REVIEW",
        "context": "     370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")\n>>>  373:     print(f\"1. Review the generated issue templates\")\n     374:     print(f\"2. Create GitHub issues using the templates\")\n     375:     print(f\"3. Assign appropriate labels and priorities\")\n     376:     print(f\"4. Track progress in your project management tool\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      {
        "file": ".\\scripts\\version_bump.py",
        "line": 136,
        "text": "changes: git show HEAD\")",
        "type": "REVIEW",
        "context": "     133:     print(f\"\ud83d\udd27 Bump Type: {bump_type}\")\n     134:     print(f\"\ud83c\udff7\ufe0f  Git Tag: v{new_version}\")\n     135:     print(\"\\n\ud83d\udccb Next Steps:\")\n>>>  136:     print(\"  1. Review changes: git show HEAD\")\n     137:     print(\"  2. Push to remote: git push origin main --tags\")\n     138:     print(\"  3. Sync docs: npm run version:sync\")\n     139:     print(\"=\" * 50)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    ]
  },
  "issue_templates": [
    {
      "todo": {
        "file": ".\\docs\\API_REFERENCE.md",
        "line": 345,
        "text": "xXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx\",",
        "type": "XXX",
        "context": "     342: {\n     343:   \"status\": \"success\",\n     344:   \"storage\": {\n>>>  345:     \"cid\": \"QmXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx\",\n     346:     \"url\": \"https://gateway.pinata.cloud/ipfs/QmXx...\",\n     347:     \"pinata_url\": \"https://app.pinata.cloud/pinmanager?search=QmXx...\",\n     348:     \"size\": 2048",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] xXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx\",",
        "body": "## XXX Item\n\n**Description**: xXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx\",\n\n**File**: `.\\docs\\API_REFERENCE.md`  \n**Line**: 345  \n**Priority**: medium  \n\n### Context\n```text\n     342: {\n     343:   \"status\": \"success\",\n     344:   \"storage\": {\n>>>  345:     \"cid\": \"QmXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx\",\n     346:     \"url\": \"https://gateway.pinata.cloud/ipfs/QmXx...\",\n     347:     \"pinata_url\": \"https://app.pinata.cloud/pinmanager?search=QmXx...\",\n     348:     \"size\": 2048\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\CLI_COMMANDS_REFERENCE.md",
        "line": 24,
        "text": ", -d` - Enable debug mode",
        "type": "BUG",
        "context": "      21: \n      22: ### Global Options\n      23: - `--verbose, -v` - Enable verbose output\n>>>   24: - `--debug, -d` - Enable debug mode\n      25: \n      26: ---\n      27: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] , -d` - Enable debug mode",
        "body": "## BUG Item\n\n**Description**: , -d` - Enable debug mode\n\n**File**: `.\\docs\\CLI_COMMANDS_REFERENCE.md`  \n**Line**: 24  \n**Priority**: high  \n\n### Context\n```text\n      21: \n      22: ### Global Options\n      23: - `--verbose, -v` - Enable verbose output\n>>>   24: - `--debug, -d` - Enable debug mode\n      25: \n      26: ---\n      27: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 31,
        "text": "](#-post-incident-review)",
        "type": "REVIEW",
        "context": "      28: - [Incident Response Workflow](#-incident-response-workflow)\n      29: - [Emergency Patch Deployment](#-emergency-patch-deployment)\n      30: - [Communication Protocols](#-communication-protocols)\n>>>   31: - [Post-Incident Review](#-post-incident-review)\n      32: - [Fire Drill Schedule](#-fire-drill-schedule)\n      33: \n      34: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ](#-post-incident-review)",
        "body": "## REVIEW Item\n\n**Description**: ](#-post-incident-review)\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 31  \n**Priority**: medium  \n\n### Context\n```text\n      28: - [Incident Response Workflow](#-incident-response-workflow)\n      29: - [Emergency Patch Deployment](#-emergency-patch-deployment)\n      30: - [Communication Protocols](#-communication-protocols)\n>>>   31: - [Post-Incident Review](#-post-incident-review)\n      32: - [Fire Drill Schedule](#-fire-drill-schedule)\n      33: \n      34: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 43,
        "text": "s, UX issues | < 1 week | UI glitches, documentation errors |",
        "type": "BUG",
        "context": "      40: | **P0 - Critical** | Active exploit, funds at risk, data breach | Immediate (< 1 hour) | Private key leaked, active reentrancy exploit, RCE vulnerability |\n      41: | **P1 - High** | Security vulnerability, no active exploit | < 24 hours | Unpatched CVE in dependencies, insecure contract function |\n      42: | **P2 - Medium** | Functionality broken, user impact | < 48 hours | Deployment failures, broken workflows |\n>>>   43: | **P3 - Low** | Minor bugs, UX issues | < 1 week | UI glitches, documentation errors |\n      44: \n      45: ---\n      46: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[BUG] s, UX issues | < 1 week | UI glitches, documentation errors |",
        "body": "## BUG Item\n\n**Description**: s, UX issues | < 1 week | UI glitches, documentation errors |\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 43  \n**Priority**: high  \n\n### Context\n```text\n      40: | **P0 - Critical** | Active exploit, funds at risk, data breach | Immediate (< 1 hour) | Private key leaked, active reentrancy exploit, RCE vulnerability |\n      41: | **P1 - High** | Security vulnerability, no active exploit | < 24 hours | Unpatched CVE in dependencies, insecure contract function |\n      42: | **P2 - Medium** | Functionality broken, user impact | < 48 hours | Deployment failures, broken workflows |\n>>>   43: | **P3 - Low** | Minor bugs, UX issues | < 1 week | UI glitches, documentation errors |\n      44: \n      45: ---\n      46: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 62,
        "text": "Bounty Platform** | support@immunefi.com | Coordinate with security researchers |",
        "type": "BUG",
        "context": "      59: \n      60: | Service | Contact | Purpose |\n      61: |---------|---------|---------|\n>>>   62: | **Bug Bounty Platform** | support@immunefi.com | Coordinate with security researchers |\n      63: | **Hosting Provider** | [Provider Support] | Infrastructure issues |\n      64: | **Blockchain Explorers** | [Explorer Support] | Verification issues |\n      65: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      },
      "issue_template": {
        "title": "[BUG] Bounty Platform** | support@immunefi.com | Coordinate with security researchers ...",
        "body": "## BUG Item\n\n**Description**: Bounty Platform** | support@immunefi.com | Coordinate with security researchers |\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 62  \n**Priority**: high  \n\n### Context\n```text\n      59: \n      60: | Service | Contact | Purpose |\n      61: |---------|---------|---------|\n>>>   62: | **Bug Bounty Platform** | support@immunefi.com | Coordinate with security researchers |\n      63: | **Hosting Provider** | [Provider Support] | Infrastructure issues |\n      64: | **Blockchain Explorers** | [Explorer Support] | Verification issues |\n      65: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 136,
        "text": "commit history: git log --all --oneline --graph",
        "type": "REVIEW",
        "context": "     133: \n     134: ```bash\n     135: # 1. Root cause analysis\n>>>  136: - Review commit history: git log --all --oneline --graph\n     137: - Check affected code: git blame <file>\n     138: - Identify introduction point\n     139: - Document exploit timeline",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] commit history: git log --all --oneline --graph",
        "body": "## REVIEW Item\n\n**Description**: commit history: git log --all --oneline --graph\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 136  \n**Priority**: medium  \n\n### Context\n```text\n     133: \n     134: ```bash\n     135: # 1. Root cause analysis\n>>>  136: - Review commit history: git log --all --oneline --graph\n     137: - Check affected code: git blame <file>\n     138: - Identify introduction point\n     139: - Document exploit timeline\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 181,
        "text": "by 2+ team members",
        "type": "REVIEW",
        "context": "     178: # 1. Internal validation\n     179: - Run all tests: pytest tests/ -v\n     180: - Security scan: bandit -r . -ll\n>>>  181: - Peer review by 2+ team members\n     182: \n     183: # 2. Deploy patch\n     184: # Quick patch process (bypasses normal CI for P0):",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] by 2+ team members",
        "body": "## REVIEW Item\n\n**Description**: by 2+ team members\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 181  \n**Priority**: medium  \n\n### Context\n```text\n     178: # 1. Internal validation\n     179: - Run all tests: pytest tests/ -v\n     180: - Security scan: bandit -r . -ll\n>>>  181: - Peer review by 2+ team members\n     182: \n     183: # 2. Deploy patch\n     184: # Quick patch process (bypasses normal CI for P0):\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 201,
        "text": "s complete",
        "type": "REVIEW",
        "context": "     198: **Fast-Track Deployment Checklist**:\n     199: - [ ] All tests passing\n     200: - [ ] Security scans clean\n>>>  201: - [ ] 2+ peer reviews complete\n     202: - [ ] Patch committed and tagged\n     203: - [ ] Testnet deployment successful (if applicable)\n     204: - [ ] Production deployment successful",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] s complete",
        "body": "## REVIEW Item\n\n**Description**: s complete\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 201  \n**Priority**: medium  \n\n### Context\n```text\n     198: **Fast-Track Deployment Checklist**:\n     199: - [ ] All tests passing\n     200: - [ ] Security scans clean\n>>>  201: - [ ] 2+ peer reviews complete\n     202: - [ ] Patch committed and tagged\n     203: - [ ] Testnet deployment successful (if applicable)\n     204: - [ ] Production deployment successful\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 244,
        "text": "bounty researcher credited (if applicable)",
        "type": "BUG",
        "context": "     241: - [ ] Team notified (< 15 min)\n     242: - [ ] Stakeholders updated (< 1 hour)\n     243: - [ ] Public notice issued (if warranted)\n>>>  244: - [ ] Bug bounty researcher credited (if applicable)\n     245: - [ ] Post-mortem scheduled\n     246: \n     247: ### Phase 6: Monitoring (24-72 hours)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] bounty researcher credited (if applicable)",
        "body": "## BUG Item\n\n**Description**: bounty researcher credited (if applicable)\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 244  \n**Priority**: medium  \n\n### Context\n```text\n     241: - [ ] Team notified (< 15 min)\n     242: - [ ] Stakeholders updated (< 1 hour)\n     243: - [ ] Public notice issued (if warranted)\n>>>  244: - [ ] Bug bounty researcher credited (if applicable)\n     245: - [ ] Post-mortem scheduled\n     246: \n     247: ### Phase 6: Monitoring (24-72 hours)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 255,
        "text": "logs: tail -f logs/hyperagent.log",
        "type": "REVIEW",
        "context": "     252: hyperagent monitor system\n     253: \n     254: # Check for exploit attempts\n>>>  255: # Review logs: tail -f logs/hyperagent.log\n     256: \n     257: # Monitor blockchain activity\n     258: # Check deployed contracts for suspicious transactions",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] logs: tail -f logs/hyperagent.log",
        "body": "## REVIEW Item\n\n**Description**: logs: tail -f logs/hyperagent.log\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 255  \n**Priority**: medium  \n\n### Context\n```text\n     252: hyperagent monitor system\n     253: \n     254: # Check for exploit attempts\n>>>  255: # Review logs: tail -f logs/hyperagent.log\n     256: \n     257: # Monitor blockchain activity\n     258: # Check deployed contracts for suspicious transactions\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 306,
        "text": "before continuing\"",
        "type": "REVIEW",
        "context": "     303: \n     304: # 3. Security scan\n     305: echo \"\ud83d\udd12 Running security scan...\"\n>>>  306: bandit -r . -ll || echo \"\u26a0\ufe0f Security warnings detected - review before continuing\"\n     307: \n     308: # 4. Build contracts\n     309: echo \"\ud83d\udd28 Building contracts...\"",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] before continuing\"",
        "body": "## REVIEW Item\n\n**Description**: before continuing\"\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 306  \n**Priority**: medium  \n\n### Context\n```text\n     303: \n     304: # 3. Security scan\n     305: echo \"\ud83d\udd12 Running security scan...\"\n>>>  306: bandit -r . -ll || echo \"\u26a0\ufe0f Security warnings detected - review before continuing\"\n     307: \n     308: # 4. Build contracts\n     309: echo \"\ud83d\udd28 Building contracts...\"\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 392,
        "text": "Bounty Communication",
        "type": "BUG",
        "context": "     389: Thank you for your patience. \ud83d\ude4f\n     390: ```\n     391: \n>>>  392: ### Bug Bounty Communication\n     393: \n     394: **Template for Researcher Response**:\n     395: ```",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] Bounty Communication",
        "body": "## BUG Item\n\n**Description**: Bounty Communication\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 392  \n**Priority**: medium  \n\n### Context\n```text\n     389: Thank you for your patience. \ud83d\ude4f\n     390: ```\n     391: \n>>>  392: ### Bug Bounty Communication\n     393: \n     394: **Template for Researcher Response**:\n     395: ```\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 495,
        "text": "and planning | Leadership |",
        "type": "REVIEW",
        "context": "     492: | September | Blockchain fork handling | Tech Lead |\n     493: | October | Audit tool failure handling | Security Lead |\n     494: | November | Full system compromise | All Hands |\n>>>  495: | December | Year-end review and planning | Leadership |\n     496: \n     497: ### Fire Drill Procedure\n     498: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] and planning | Leadership |",
        "body": "## REVIEW Item\n\n**Description**: and planning | Leadership |\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 495  \n**Priority**: medium  \n\n### Context\n```text\n     492: | September | Blockchain fork handling | Tech Lead |\n     493: | October | Audit tool failure handling | Security Lead |\n     494: | November | Full system compromise | All Hands |\n>>>  495: | December | Year-end review and planning | Leadership |\n     496: \n     497: ### Fire Drill Procedure\n     498: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 510,
        "text": "bounty",
        "type": "BUG",
        "context": "     507: \n     508: ## \ud83d\udcda Related Documentation\n     509: \n>>>  510: - [SECURITY.md](../../SECURITY.md) - Security policy and bug bounty\n     511: - [SECURITY_AUDIT_LOG.md](./SECURITY_AUDIT_LOG.md) - Vulnerability tracking\n     512: - [CONTRIBUTING.md](../../CONTRIBUTING.md) - Security requirements for contributors\n     513: - [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) - Current project status",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] bounty",
        "body": "## BUG Item\n\n**Description**: bounty\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 510  \n**Priority**: medium  \n\n### Context\n```text\n     507: \n     508: ## \ud83d\udcda Related Documentation\n     509: \n>>>  510: - [SECURITY.md](../../SECURITY.md) - Security policy and bug bounty\n     511: - [SECURITY_AUDIT_LOG.md](./SECURITY_AUDIT_LOG.md) - Vulnerability tracking\n     512: - [CONTRIBUTING.md](../../CONTRIBUTING.md) - Security requirements for contributors\n     513: - [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) - Current project status\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EMERGENCY_RESPONSE.md",
        "line": 528,
        "text": "**: 2025-11-26",
        "type": "REVIEW",
        "context": "     525: **Maintained by**: HyperKit Security & Operations Team  \n     526: **Last Updated**: October 27, 2025  \n     527: **Version**: 1.4.6  \n>>>  528: **Next Review**: 2025-11-26  \n     529: **Last Drill**: TBD  \n     530: **Location**: `/hyperkit-agent/docs/EMERGENCY_RESPONSE.md`\n     531: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] **: 2025-11-26",
        "body": "## REVIEW Item\n\n**Description**: **: 2025-11-26\n\n**File**: `.\\docs\\EMERGENCY_RESPONSE.md`  \n**Line**: 528  \n**Priority**: medium  \n\n### Context\n```text\n     525: **Maintained by**: HyperKit Security & Operations Team  \n     526: **Last Updated**: October 27, 2025  \n     527: **Version**: 1.4.6  \n>>>  528: **Next Review**: 2025-11-26  \n     529: **Last Drill**: TBD  \n     530: **Location**: `/hyperkit-agent/docs/EMERGENCY_RESPONSE.md`\n     531: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXTERNAL_MONITORING.md",
        "line": 272,
        "text": "**: 2025-11-26",
        "type": "REVIEW",
        "context": "     269: ---\n     270: \n     271: **Status**: \u23f3 **ROADMAP** - Implementation planned for Q1 2025  \n>>>  272: **Next Review**: 2025-11-26\n     273: \n     274: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] **: 2025-11-26",
        "body": "## REVIEW Item\n\n**Description**: **: 2025-11-26\n\n**File**: `.\\docs\\EXTERNAL_MONITORING.md`  \n**Line**: 272  \n**Priority**: medium  \n\n### Context\n```text\n     269: ---\n     270: \n     271: **Status**: \u23f3 **ROADMAP** - Implementation planned for Q1 2025  \n>>>  272: **Next Review**: 2025-11-26\n     273: \n     274: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 28,
        "text": "from Code Owners",
        "type": "REVIEW",
        "context": "      25: - \u2611\ufe0f Require a pull request before merging\n      26:   - \u2611\ufe0f Require approvals: **2**\n      27:   - \u2611\ufe0f Dismiss stale pull request approvals when new commits are pushed\n>>>   28:   - \u2611\ufe0f Require review from Code Owners\n      29: - \u2611\ufe0f Require status checks to pass before merging\n      30:   - \u2611\ufe0f Require branches to be up to date before merging\n      31:   - Required status checks:",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] from Code Owners",
        "body": "## REVIEW Item\n\n**Description**: from Code Owners\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 28  \n**Priority**: medium  \n\n### Context\n```text\n      25: - \u2611\ufe0f Require a pull request before merging\n      26:   - \u2611\ufe0f Require approvals: **2**\n      27:   - \u2611\ufe0f Dismiss stale pull request approvals when new commits are pushed\n>>>   28:   - \u2611\ufe0f Require review from Code Owners\n      29: - \u2611\ufe0f Require status checks to pass before merging\n      30:   - \u2611\ufe0f Require branches to be up to date before merging\n      31:   - Required status checks:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 48,
        "text": "Report (`bug_report.md`)",
        "type": "BUG",
        "context": "      45: \n      46: Create `.github/ISSUE_TEMPLATE/` with:\n      47: \n>>>   48: ### 1. Bug Report (`bug_report.md`)\n      49: Already created \u2705\n      50: \n      51: ### 2. Feature Request (`feature_request.md`)",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] Report (`bug_report.md`)",
        "body": "## BUG Item\n\n**Description**: Report (`bug_report.md`)\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 48  \n**Priority**: high  \n\n### Context\n```text\n      45: \n      46: Create `.github/ISSUE_TEMPLATE/` with:\n      47: \n>>>   48: ### 1. Bug Report (`bug_report.md`)\n      49: Already created \u2705\n      50: \n      51: ### 2. Feature Request (`feature_request.md`)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 70,
        "text": "bounty information, see SECURITY.md",
        "type": "BUG",
        "context": "      67:         Please report security issues to: security@hyperkit.dev\n      68:         Or use GitHub Security Advisories (private)\n      69:         \n>>>   70:         For bug bounty information, see SECURITY.md\n      71: ```\n      72: \n      73: ---",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      },
      "issue_template": {
        "title": "[BUG] bounty information, see SECURITY.md",
        "body": "## BUG Item\n\n**Description**: bounty information, see SECURITY.md\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 70  \n**Priority**: high  \n\n### Context\n```text\n      67:         Please report security issues to: security@hyperkit.dev\n      68:         Or use GitHub Security Advisories (private)\n      69:         \n>>>   70:         For bug bounty information, see SECURITY.md\n      71: ```\n      72: \n      73: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 129,
        "text": "` (red)",
        "type": "BUG",
        "context": "     126: - `P3: Low` (green)\n     127: \n     128: **Type**:\n>>>  129: - `bug` (red)\n     130: - `feature` (blue)\n     131: - `documentation` (light blue)\n     132: - `security` (dark red)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] ` (red)",
        "body": "## BUG Item\n\n**Description**: ` (red)\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 129  \n**Priority**: medium  \n\n### Context\n```text\n     126: - `P3: Low` (green)\n     127: \n     128: **Type**:\n>>>  129: - `bug` (red)\n     130: - `feature` (blue)\n     131: - `documentation` (light blue)\n     132: - `security` (dark red)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 136,
        "text": "` (yellow)",
        "type": "REVIEW",
        "context": "     133: - `enhancement` (purple)\n     134: \n     135: **Status**:\n>>>  136: - `needs-review` (yellow)\n     137: - `in-progress` (blue)\n     138: - `blocked` (red)\n     139: - `wontfix` (grey)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ` (yellow)",
        "body": "## REVIEW Item\n\n**Description**: ` (yellow)\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 136  \n**Priority**: medium  \n\n### Context\n```text\n     133: - `enhancement` (purple)\n     134: \n     135: **Status**:\n>>>  136: - `needs-review` (yellow)\n     137: - `in-progress` (blue)\n     138: - `blocked` (red)\n     139: - `wontfix` (grey)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 174,
        "text": "s all changes",
        "type": "REVIEW",
        "context": "     171: \n     172: Create `.github/CODEOWNERS`:\n     173: ```\n>>>  174: # Core team reviews all changes\n     175: * @core-team\n     176: \n     177: # Security-critical files require security team",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] s all changes",
        "body": "## REVIEW Item\n\n**Description**: s all changes\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 174  \n**Priority**: medium  \n\n### Context\n```text\n     171: \n     172: Create `.github/CODEOWNERS`:\n     173: ```\n>>>  174: # Core team reviews all changes\n     175: * @core-team\n     176: \n     177: # Security-critical files require security team\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 220,
        "text": "bounty activation",
        "type": "BUG",
        "context": "     217: 1. **v4.2.0 - Q1 2025**\n     218:    - External security audit\n     219:    - Public launch\n>>>  220:    - Bug bounty activation\n     221: \n     222: 2. **v4.3.0 - Q2 2025**\n     223:    - Mainnet production deployment",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] bounty activation",
        "body": "## BUG Item\n\n**Description**: bounty activation\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 220  \n**Priority**: medium  \n\n### Context\n```text\n     217: 1. **v4.2.0 - Q1 2025**\n     218:    - External security audit\n     219:    - Public launch\n>>>  220:    - Bug bounty activation\n     221: \n     222: 2. **v4.3.0 - Q2 2025**\n     223:    - Mainnet production deployment\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 255,
        "text": "ers for PRs",
        "type": "REVIEW",
        "context": "     252: \n     253: ### Security\n     254: - [ ] Enable branch protection on `main`\n>>>  255: - [ ] Require 2+ reviewers for PRs\n     256: - [ ] Enable Dependabot\n     257: - [ ] Enable secret scanning\n     258: - [ ] Add repository secrets",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ers for PRs",
        "body": "## REVIEW Item\n\n**Description**: ers for PRs\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 255  \n**Priority**: medium  \n\n### Context\n```text\n     252: \n     253: ### Security\n     254: - [ ] Enable branch protection on `main`\n>>>  255: - [ ] Require 2+ reviewers for PRs\n     256: - [ ] Enable Dependabot\n     257: - [ ] Enable secret scanning\n     258: - [ ] Add repository secrets\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GITHUB_SETUP.md",
        "line": 292,
        "text": "s='{\"required_approving_review_count\":2,\"dismiss_stale_reviews\":true}' \\",
        "type": "REVIEW",
        "context": "     289:   --method PUT \\\n     290:   --field required_status_checks='{\"strict\":true,\"contexts\":[\"test (3.10)\",\"test (3.11)\",\"test (3.12)\",\"lint\",\"security-scan\"]}' \\\n     291:   --field enforce_admins=true \\\n>>>  292:   --field required_pull_request_reviews='{\"required_approving_review_count\":2,\"dismiss_stale_reviews\":true}' \\\n     293:   --field restrictions=null\n     294: \n     295: # Enable Dependabot",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] s='{\"required_approving_review_count\":2,\"dismiss_stale_reviews\":true}' \\",
        "body": "## REVIEW Item\n\n**Description**: s='{\"required_approving_review_count\":2,\"dismiss_stale_reviews\":true}' \\\n\n**File**: `.\\docs\\GITHUB_SETUP.md`  \n**Line**: 292  \n**Priority**: medium  \n\n### Context\n```text\n     289:   --method PUT \\\n     290:   --field required_status_checks='{\"strict\":true,\"contexts\":[\"test (3.10)\",\"test (3.11)\",\"test (3.12)\",\"lint\",\"security-scan\"]}' \\\n     291:   --field enforce_admins=true \\\n>>>  292:   --field required_pull_request_reviews='{\"required_approving_review_count\":2,\"dismiss_stale_reviews\":true}' \\\n     293:   --field restrictions=null\n     294: \n     295: # Enable Dependabot\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 22,
        "text": "ging but messier for deployment.",
        "type": "BUG",
        "context": "      19: **What You're Missing**: Any one of these fails = entire system fails.\n      20: \n      21: ### **Assumption 2**: \"Docker setup is easier\"\n>>>   22: **Challenge**: **MAYBE**. Docker isolates issues but adds networking complexity. Local setup is simpler for debugging but messier for deployment.\n      23: \n      24: ### **Assumption 3**: \"This will work immediately\"\n      25: **Challenge**: **HAHA NO**. Expect 2-4 hours of troubleshooting authentication, ports, and API keys.",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[BUG] ging but messier for deployment.",
        "body": "## BUG Item\n\n**Description**: ging but messier for deployment.\n\n**File**: `.\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md`  \n**Line**: 22  \n**Priority**: high  \n\n### Context\n```text\n      19: **What You're Missing**: Any one of these fails = entire system fails.\n      20: \n      21: ### **Assumption 2**: \"Docker setup is easier\"\n>>>   22: **Challenge**: **MAYBE**. Docker isolates issues but adds networking complexity. Local setup is simpler for debugging but messier for deployment.\n      23: \n      24: ### **Assumption 3**: \"This will work immediately\"\n      25: **Challenge**: **HAHA NO**. Expect 2-4 hours of troubleshooting authentication, ports, and API keys.\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 40,
        "text": "the port (default: 27124)",
        "type": "NOTE",
        "context": "      37: 3. Install plugin by \"coddingtonbear\"\n      38: 4. Enable the plugin\n      39: 5. Open plugin settings \u2192 Copy API Key (save this!)\n>>>   40: 6. Note the port (default: 27124)\n      41: ```\n      42: \n      43: **Expected Output**: You should see API key like `abc123xyz456...`",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[NOTE] the port (default: 27124)",
        "body": "## NOTE Item\n\n**Description**: the port (default: 27124)\n\n**File**: `.\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md`  \n**Line**: 40  \n**Priority**: medium  \n\n### Context\n```text\n      37: 3. Install plugin by \"coddingtonbear\"\n      38: 4. Enable the plugin\n      39: 5. Open plugin settings \u2192 Copy API Key (save this!)\n>>>   40: 6. Note the port (default: 27124)\n      41: ```\n      42: \n      43: **Expected Output**: You should see API key like `abc123xyz456...`\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 248,
        "text": "ging",
        "type": "BUG",
        "context": "     245: Adding RAG to a broken system = broken system with RAG.\n     246: \n     247: **The Setup I Gave You**:\n>>>  248: - **Local**: 30 minutes if everything works, 2 hours if debugging\n     249: - **Docker**: 45 minutes if everything works, 4 hours if networking issues\n     250: \n     251: **My Recommendation**: Start with LOCAL setup. Debug it. THEN containerize.",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] ging",
        "body": "## BUG Item\n\n**Description**: ging\n\n**File**: `.\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md`  \n**Line**: 248  \n**Priority**: medium  \n\n### Context\n```text\n     245: Adding RAG to a broken system = broken system with RAG.\n     246: \n     247: **The Setup I Gave You**:\n>>>  248: - **Local**: 30 minutes if everything works, 2 hours if debugging\n     249: - **Docker**: 45 minutes if everything works, 4 hours if networking issues\n     250: \n     251: **My Recommendation**: Start with LOCAL setup. Debug it. THEN containerize.\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 251,
        "text": "it. THEN containerize.",
        "type": "BUG",
        "context": "     248: - **Local**: 30 minutes if everything works, 2 hours if debugging\n     249: - **Docker**: 45 minutes if everything works, 4 hours if networking issues\n     250: \n>>>  251: **My Recommendation**: Start with LOCAL setup. Debug it. THEN containerize.\n     252: \n     253: **Stop collecting features like Pokemon**. Make ONE thing work perfectly before adding the next.\n     254: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] it. THEN containerize.",
        "body": "## BUG Item\n\n**Description**: it. THEN containerize.\n\n**File**: `.\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md`  \n**Line**: 251  \n**Priority**: medium  \n\n### Context\n```text\n     248: - **Local**: 30 minutes if everything works, 2 hours if debugging\n     249: - **Docker**: 45 minutes if everything works, 4 hours if networking issues\n     250: \n>>>  251: **My Recommendation**: Start with LOCAL setup. Debug it. THEN containerize.\n     252: \n     253: **Stop collecting features like Pokemon**. Make ONE thing work perfectly before adding the next.\n     254: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md",
        "line": 260,
        "text": "**: 2-4 hours",
        "type": "BUG",
        "context": "     257: ---\n     258: \n     259: **Time to Setup**: 1-2 hours  \n>>>  260: **Time to Debug**: 2-4 hours  \n     261: **Probability It Works First Try**: 20%\n     262: \n     263: **Your Choice**: Quick and broken, or slow and working?",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] **: 2-4 hours",
        "body": "## BUG Item\n\n**Description**: **: 2-4 hours\n\n**File**: `.\\docs\\OBSIDIAN_RAG_SETUP_GUIDE.md`  \n**Line**: 260  \n**Priority**: medium  \n\n### Context\n```text\n     257: ---\n     258: \n     259: **Time to Setup**: 1-2 hours  \n>>>  260: **Time to Debug**: 2-4 hours  \n     261: **Probability It Works First Try**: 20%\n     262: \n     263: **Your Choice**: Quick and broken, or slow and working?\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\PRODUCTION_MODE.md",
        "line": 223,
        "text": "Commands",
        "type": "BUG",
        "context": "     220: foundryup\n     221: ```\n     222: \n>>>  223: ### Debug Commands\n     224: \n     225: ```bash\n     226: # Check system health",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] Commands",
        "body": "## BUG Item\n\n**Description**: Commands\n\n**File**: `.\\docs\\PRODUCTION_MODE.md`  \n**Line**: 223  \n**Priority**: medium  \n\n### Context\n```text\n     220: foundryup\n     221: ```\n     222: \n>>>  223: ### Debug Commands\n     224: \n     225: ```bash\n     226: # Check system health\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SCREENSHOT_PLAN.md",
        "line": 146,
        "text": "HTML report",
        "type": "REVIEW",
        "context": "     143: 0:00 - Prepare multiple contracts\n     144: 0:30 - Run batch audit command\n     145: 1:00 - Watch progress (one fails, others continue)\n>>>  146: 2:00 - Review HTML report\n     147: 3:00 - Export to PDF\n     148: 3:30 - Export to Excel\n     149: 4:00 - Interpret risk scores",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] HTML report",
        "body": "## REVIEW Item\n\n**Description**: HTML report\n\n**File**: `.\\docs\\SCREENSHOT_PLAN.md`  \n**Line**: 146  \n**Priority**: medium  \n\n### Context\n```text\n     143: 0:00 - Prepare multiple contracts\n     144: 0:30 - Run batch audit command\n     145: 1:00 - Watch progress (one fails, others continue)\n>>>  146: 2:00 - Review HTML report\n     147: 3:00 - Export to PDF\n     148: 3:30 - Export to Excel\n     149: 4:00 - Interpret risk scores\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SCREENSHOT_PLAN.md",
        "line": 165,
        "text": "error logs",
        "type": "REVIEW",
        "context": "     162: 0:00 - GitHub Actions overview\n     163: 0:45 - Push code with error\n     164: 1:15 - See CI/CD fail\n>>>  165: 1:45 - Review error logs\n     166: 2:30 - Fix locally\n     167: 3:00 - Verify tests pass\n     168: 3:30 - Push again",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] error logs",
        "body": "## REVIEW Item\n\n**Description**: error logs\n\n**File**: `.\\docs\\SCREENSHOT_PLAN.md`  \n**Line**: 165  \n**Priority**: high  \n\n### Context\n```text\n     162: 0:00 - GitHub Actions overview\n     163: 0:45 - Push code with error\n     164: 1:15 - See CI/CD fail\n>>>  165: 1:45 - Review error logs\n     166: 2:30 - Fix locally\n     167: 3:00 - Verify tests pass\n     168: 3:30 - Push again\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SCREENSHOT_PLAN.md",
        "line": 251,
        "text": "and revisions",
        "type": "REVIEW",
        "context": "     248: ### Phase 3: Editing (Week 3)\n     249: - Day 1-2: Edit all videos\n     250: - Day 3: Add annotations to screenshots\n>>>  251: - Day 4: Review and revisions\n     252: - Day 5: Publish and integrate into docs\n     253: \n     254: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] and revisions",
        "body": "## REVIEW Item\n\n**Description**: and revisions\n\n**File**: `.\\docs\\SCREENSHOT_PLAN.md`  \n**Line**: 251  \n**Priority**: medium  \n\n### Context\n```text\n     248: ### Phase 3: Editing (Week 3)\n     249: - Day 1-2: Edit all videos\n     250: - Day 3: Add annotations to screenshots\n>>>  251: - Day 4: Review and revisions\n     252: - Day 5: Publish and integrate into docs\n     253: \n     254: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 11,
        "text": "s, and fixes with complete transparency.",
        "type": "BUG",
        "context": "       8: \n       9: # Security Audit Log\n      10: \n>>>   11: **Purpose**: Track all security vulnerabilities, bugs, and fixes with complete transparency.\n      12: \n      13: **Last Updated**: 2025-10-26  \n      14: **Status**: Active Monitoring",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] s, and fixes with complete transparency.",
        "body": "## BUG Item\n\n**Description**: s, and fixes with complete transparency.\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 11  \n**Priority**: high  \n\n### Context\n```text\n       8: \n       9: # Security Audit Log\n      10: \n>>>   11: **Purpose**: Track all security vulnerabilities, bugs, and fixes with complete transparency.\n      12: \n      13: **Last Updated**: 2025-10-26  \n      14: **Status**: Active Monitoring\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 116,
        "text": "stubs with no actual functionality. |",
        "type": "TODO",
        "context": "     113: | **Affected Versions** | v4.1.7 and earlier |\n     114: | **Fixed Version** | v4.1.11 |\n     115: | **Reporter** | User Feedback |\n>>>  116: | **Description** | Several CLI commands (verify, monitor, config) printed \"Success\" messages despite being TODO stubs with no actual functionality. |\n     117: | **Impact** | Users received misleading feedback, leading to confusion about system capabilities and false confidence in deployments. |\n     118: | **Mitigation** | Implemented all TODO stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |\n     119: | **Related** | Multiple commits in production readiness push |",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] stubs with no actual functionality. |",
        "body": "## TODO Item\n\n**Description**: stubs with no actual functionality. |\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 116  \n**Priority**: medium  \n\n### Context\n```text\n     113: | **Affected Versions** | v4.1.7 and earlier |\n     114: | **Fixed Version** | v4.1.11 |\n     115: | **Reporter** | User Feedback |\n>>>  116: | **Description** | Several CLI commands (verify, monitor, config) printed \"Success\" messages despite being TODO stubs with no actual functionality. |\n     117: | **Impact** | Users received misleading feedback, leading to confusion about system capabilities and false confidence in deployments. |\n     118: | **Mitigation** | Implemented all TODO stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |\n     119: | **Related** | Multiple commits in production readiness push |\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 118,
        "text": "stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |",
        "type": "TODO",
        "context": "     115: | **Reporter** | User Feedback |\n     116: | **Description** | Several CLI commands (verify, monitor, config) printed \"Success\" messages despite being TODO stubs with no actual functionality. |\n     117: | **Impact** | Users received misleading feedback, leading to confusion about system capabilities and false confidence in deployments. |\n>>>  118: | **Mitigation** | Implemented all TODO stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |\n     119: | **Related** | Multiple commits in production readiness push |\n     120: \n     121: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limit...",
        "body": "## TODO Item\n\n**Description**: stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 118  \n**Priority**: medium  \n\n### Context\n```text\n     115: | **Reporter** | User Feedback |\n     116: | **Description** | Several CLI commands (verify, monitor, config) printed \"Success\" messages despite being TODO stubs with no actual functionality. |\n     117: | **Impact** | Users received misleading feedback, leading to confusion about system capabilities and false confidence in deployments. |\n>>>  118: | **Mitigation** | Implemented all TODO stubs with real functionality or honest \"NOT IMPLEMENTED\" messages. Added `limitations` command to document known gaps. |\n     119: | **Related** | Multiple commits in production readiness push |\n     120: \n     121: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 175,
        "text": "from non-author",
        "type": "REVIEW",
        "context": "     172: \n     173: ### Code Review\n     174: \n>>>  175: - [x] All PRs require review from non-author\n     176: - [x] Security-critical changes require 2+ reviewers\n     177: - [ ] Security expert review for smart contracts\n     178: - [x] Automated linting and security scans",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] from non-author",
        "body": "## REVIEW Item\n\n**Description**: from non-author\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 175  \n**Priority**: medium  \n\n### Context\n```text\n     172: \n     173: ### Code Review\n     174: \n>>>  175: - [x] All PRs require review from non-author\n     176: - [x] Security-critical changes require 2+ reviewers\n     177: - [ ] Security expert review for smart contracts\n     178: - [x] Automated linting and security scans\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 177,
        "text": "for smart contracts",
        "type": "REVIEW",
        "context": "     174: \n     175: - [x] All PRs require review from non-author\n     176: - [x] Security-critical changes require 2+ reviewers\n>>>  177: - [ ] Security expert review for smart contracts\n     178: - [x] Automated linting and security scans\n     179: \n     180: ### Dependency Management",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] for smart contracts",
        "body": "## REVIEW Item\n\n**Description**: for smart contracts\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 177  \n**Priority**: medium  \n\n### Context\n```text\n     174: \n     175: - [x] All PRs require review from non-author\n     176: - [x] Security-critical changes require 2+ reviewers\n>>>  177: - [ ] Security expert review for smart contracts\n     178: - [x] Automated linting and security scans\n     179: \n     180: ### Dependency Management\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 197,
        "text": "bounty program active ($50-$5,000)",
        "type": "BUG",
        "context": "     194: ### Incident Response\n     195: \n     196: - [x] Security policy documented (SECURITY.md)\n>>>  197: - [x] Bug bounty program active ($50-$5,000)\n     198: - [x] 24-48hr response time commitment\n     199: - [ ] Emergency patch process documented\n     200: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] bounty program active ($50-$5,000)",
        "body": "## BUG Item\n\n**Description**: bounty program active ($50-$5,000)\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 197  \n**Priority**: medium  \n\n### Context\n```text\n     194: ### Incident Response\n     195: \n     196: - [x] Security policy documented (SECURITY.md)\n>>>  197: - [x] Bug bounty program active ($50-$5,000)\n     198: - [x] 24-48hr response time commitment\n     199: - [ ] Emergency patch process documented\n     200: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 267,
        "text": "| User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |",
        "type": "REVIEW",
        "context": "     264: | Date | Type | Auditor | Findings | Report |\n     265: |------|------|---------|----------|--------|\n     266: | 2025-01-25 | Internal | HyperKit Team | 4 issues (all fixed) | This log |\n>>>  267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n     268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n     270: | TBD | External | TBD | Pending | Q1 2025 |",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../R...",
        "body": "## REVIEW Item\n\n**Description**: | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 267  \n**Priority**: high  \n\n### Context\n```text\n     264: | Date | Type | Auditor | Findings | Report |\n     265: |------|------|---------|----------|--------|\n     266: | 2025-01-25 | Internal | HyperKit Team | 4 issues (all fixed) | This log |\n>>>  267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n     268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n     270: | TBD | External | TBD | Pending | Q1 2025 |\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 268,
        "text": "| User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |",
        "type": "REVIEW",
        "context": "     265: |------|------|---------|----------|--------|\n     266: | 2025-01-25 | Internal | HyperKit Team | 4 issues (all fixed) | This log |\n     267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n>>>  268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n     270: | TBD | External | TBD | Pending | Q1 2025 |\n     271: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](.....",
        "body": "## REVIEW Item\n\n**Description**: | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 268  \n**Priority**: high  \n\n### Context\n```text\n     265: |------|------|---------|----------|--------|\n     266: | 2025-01-25 | Internal | HyperKit Team | 4 issues (all fixed) | This log |\n     267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n>>>  268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n     270: | TBD | External | TBD | Pending | Q1 2025 |\n     271: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 270,
        "text": "| External | TBD | Pending | Q1 2025 |",
        "type": "TBD",
        "context": "     267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n     268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n>>>  270: | TBD | External | TBD | Pending | Q1 2025 |\n     271: \n     272: ---\n     273: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] | External | TBD | Pending | Q1 2025 |",
        "body": "## TBD Item\n\n**Description**: | External | TBD | Pending | Q1 2025 |\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 270  \n**Priority**: medium  \n\n### Context\n```text\n     267: | 2025-10-27 | Brutal CTO Review | User Feedback | Production readiness gaps | [HONEST_STATUS_ASSESSMENT.md](../REPORTS/HONEST_STATUS_ASSESSMENT.md) |\n     268: | 2025-10-27 | Brutal CTO Review | User Feedback | Critical fixes identified | [CRITICAL_FIXES_ACTION_PLAN.md](../REPORTS/CRITICAL_FIXES_ACTION_PLAN.md) |\n     269: | 2025-10-27 | Directory Audit | Team | Documentation organization | [ACCOMPLISHED archive](../../ACCOMPLISHED/) |\n>>>  270: | TBD | External | TBD | Pending | Q1 2025 |\n     271: \n     272: ---\n     273: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_AUDIT_LOG.md",
        "line": 295,
        "text": "**: 2025-11-26",
        "type": "REVIEW",
        "context": "     292: **Maintained by**: HyperKit Security Team  \n     293: **Last Updated**: October 27, 2025  \n     294: **Version**: 1.4.6  \n>>>  295: **Next Review**: 2025-11-26  \n     296: **Audit Cadence**: Monthly  \n     297: **Location**: `/hyperkit-agent/docs/SECURITY_AUDIT_LOG.md`\n     298: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] **: 2025-11-26",
        "body": "## REVIEW Item\n\n**Description**: **: 2025-11-26\n\n**File**: `.\\docs\\SECURITY_AUDIT_LOG.md`  \n**Line**: 295  \n**Priority**: medium  \n\n### Context\n```text\n     292: **Maintained by**: HyperKit Security Team  \n     293: **Last Updated**: October 27, 2025  \n     294: **Version**: 1.4.6  \n>>>  295: **Next Review**: 2025-11-26  \n     296: **Audit Cadence**: Monthly  \n     297: **Location**: `/hyperkit-agent/docs/SECURITY_AUDIT_LOG.md`\n     298: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_SETUP.md",
        "line": 69,
        "text": "access logs** for any unauthorized usage",
        "type": "REVIEW",
        "context": "      66: 1. **Replace `.env` file** with secure template\n      67: 2. **Rotate all exposed API keys** immediately\n      68: 3. **Use test wallets only** for development\n>>>   69: 4. **Review access logs** for any unauthorized usage\n      70: \n      71: ## \ud83d\udccb Security Checklist\n      72: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] access logs** for any unauthorized usage",
        "body": "## REVIEW Item\n\n**Description**: access logs** for any unauthorized usage\n\n**File**: `.\\docs\\SECURITY_SETUP.md`  \n**Line**: 69  \n**Priority**: medium  \n\n### Context\n```text\n      66: 1. **Replace `.env` file** with secure template\n      67: 2. **Rotate all exposed API keys** immediately\n      68: 3. **Use test wallets only** for development\n>>>   69: 4. **Review access logs** for any unauthorized usage\n      70: \n      71: ## \ud83d\udccb Security Checklist\n      72: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_SETUP.md",
        "line": 76,
        "text": "API usage logs",
        "type": "REVIEW",
        "context": "      73: - [ ] Replace `.env` with secure template\n      74: - [ ] Rotate all exposed API keys\n      75: - [ ] Use test wallets only\n>>>   76: - [ ] Review API usage logs\n      77: - [ ] Enable 2FA on all accounts\n      78: - [ ] Use environment-specific configurations\n      79: - [ ] Regular security audits",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] API usage logs",
        "body": "## REVIEW Item\n\n**Description**: API usage logs\n\n**File**: `.\\docs\\SECURITY_SETUP.md`  \n**Line**: 76  \n**Priority**: medium  \n\n### Context\n```text\n      73: - [ ] Replace `.env` with secure template\n      74: - [ ] Rotate all exposed API keys\n      75: - [ ] Use test wallets only\n>>>   76: - [ ] Review API usage logs\n      77: - [ ] Enable 2FA on all accounts\n      78: - [ ] Use environment-specific configurations\n      79: - [ ] Regular security audits\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\SECURITY_SETUP.md",
        "line": 86,
        "text": "access logs** for unauthorized usage",
        "type": "REVIEW",
        "context": "      83: 1. **Immediately revoke** the compromised keys\n      84: 2. **Generate new keys** from the respective platforms\n      85: 3. **Update `.env`** with new keys\n>>>   86: 4. **Review access logs** for unauthorized usage\n      87: 5. **Consider rotating** all related credentials\n      88: \n      89: ## \ud83d\udcde Support",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] access logs** for unauthorized usage",
        "body": "## REVIEW Item\n\n**Description**: access logs** for unauthorized usage\n\n**File**: `.\\docs\\SECURITY_SETUP.md`  \n**Line**: 86  \n**Priority**: medium  \n\n### Context\n```text\n      83: 1. **Immediately revoke** the compromised keys\n      84: 2. **Generate new keys** from the respective platforms\n      85: 3. **Update `.env`** with new keys\n>>>   86: 4. **Review access logs** for unauthorized usage\n      87: 5. **Consider rotating** all related credentials\n      88: \n      89: ## \ud83d\udcde Support\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 87,
        "text": "Add screenshot showing typical pip error)",
        "type": "TODO",
        "context": "      84: pip install -r requirements.txt --no-cache-dir\n      85: ```\n      86: \n>>>   87: **Screenshot Location**: `docs/images/installation_error.png` (TODO: Add screenshot showing typical pip error)\n      88: \n      89: ---\n      90: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[TODO] Add screenshot showing typical pip error)",
        "body": "## TODO Item\n\n**Description**: Add screenshot showing typical pip error)\n\n**File**: `.\\docs\\TROUBLESHOOTING_GUIDE.md`  \n**Line**: 87  \n**Priority**: high  \n\n### Context\n```text\n      84: pip install -r requirements.txt --no-cache-dir\n      85: ```\n      86: \n>>>   87: **Screenshot Location**: `docs/images/installation_error.png` (TODO: Add screenshot showing typical pip error)\n      88: \n      89: ---\n      90: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 159,
        "text": "Add screenshot)",
        "type": "TODO",
        "context": "     156: CLI: hyperagent deploy contract MyToken.sol --args '[\"0x742d...\", 1000000, \"My Token\"]'\n     157: ```\n     158: \n>>>  159: **Screenshot Location**: `docs/images/constructor_error.png` (TODO: Add screenshot)\n     160: \n     161: ---\n     162: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] Add screenshot)",
        "body": "## TODO Item\n\n**Description**: Add screenshot)\n\n**File**: `.\\docs\\TROUBLESHOOTING_GUIDE.md`  \n**Line**: 159  \n**Priority**: medium  \n\n### Context\n```text\n     156: CLI: hyperagent deploy contract MyToken.sol --args '[\"0x742d...\", 1000000, \"My Token\"]'\n     157: ```\n     158: \n>>>  159: **Screenshot Location**: `docs/images/constructor_error.png` (TODO: Add screenshot)\n     160: \n     161: ---\n     162: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 183,
        "text": "Create 3-minute video)",
        "type": "TODO",
        "context": "     180: docker pull ghcr.io/foundry-rs/foundry:latest\n     181: ```\n     182: \n>>>  183: **Video Tutorial**: \"Installing Foundry for HyperKit\" (TODO: Create 3-minute video)\n     184: \n     185: ---\n     186: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] Create 3-minute video)",
        "body": "## TODO Item\n\n**Description**: Create 3-minute video)\n\n**File**: `.\\docs\\TROUBLESHOOTING_GUIDE.md`  \n**Line**: 183  \n**Priority**: medium  \n\n### Context\n```text\n     180: docker pull ghcr.io/foundry-rs/foundry:latest\n     181: ```\n     182: \n>>>  183: **Video Tutorial**: \"Installing Foundry for HyperKit\" (TODO: Create 3-minute video)\n     184: \n     185: ---\n     186: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 206,
        "text": "Add screenshot)",
        "type": "TODO",
        "context": "     203: #   Failed: 2\n     204: ```\n     205: \n>>>  206: **Screenshot Location**: `docs/images/batch_audit_success.png` (TODO: Add screenshot)\n     207: \n     208: ---\n     209: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] Add screenshot)",
        "body": "## TODO Item\n\n**Description**: Add screenshot)\n\n**File**: `.\\docs\\TROUBLESHOOTING_GUIDE.md`  \n**Line**: 206  \n**Priority**: medium  \n\n### Context\n```text\n     203: #   Failed: 2\n     204: ```\n     205: \n>>>  206: **Screenshot Location**: `docs/images/batch_audit_success.png` (TODO: Add screenshot)\n     207: \n     208: ---\n     209: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 268,
        "text": "Add screenshots for each type)",
        "type": "TODO",
        "context": "     265: ```\n     266: **Fix**: Run tests locally: `pytest tests/ -v`\n     267: \n>>>  268: **Screenshot Location**: `docs/images/cicd_failure.png` (TODO: Add screenshots for each type)\n     269: \n     270: ---\n     271: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] Add screenshots for each type)",
        "body": "## TODO Item\n\n**Description**: Add screenshots for each type)\n\n**File**: `.\\docs\\TROUBLESHOOTING_GUIDE.md`  \n**Line**: 268  \n**Priority**: medium  \n\n### Context\n```text\n     265: ```\n     266: **Fix**: Run tests locally: `pytest tests/ -v`\n     267: \n>>>  268: **Screenshot Location**: `docs/images/cicd_failure.png` (TODO: Add screenshots for each type)\n     269: \n     270: ---\n     271: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TROUBLESHOOTING_GUIDE.md",
        "line": 404,
        "text": "**: Create and link video tutorials for:",
        "type": "TODO",
        "context": "     401: \n     402: ## Video Tutorial Index\n     403: \n>>>  404: **TODO**: Create and link video tutorials for:\n     405: \n     406: 1. **Installation & Setup** (5 min)\n     407:    - Installing Python 3.10+",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] **: Create and link video tutorials for:",
        "body": "## TODO Item\n\n**Description**: **: Create and link video tutorials for:\n\n**File**: `.\\docs\\TROUBLESHOOTING_GUIDE.md`  \n**Line**: 404  \n**Priority**: medium  \n\n### Context\n```text\n     401: \n     402: ## Video Tutorial Index\n     403: \n>>>  404: **TODO**: Create and link video tutorials for:\n     405: \n     406: 1. **Installation & Setup** (5 min)\n     407:    - Installing Python 3.10+\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 11,
        "text": "er**: Brutal CTO/Auditor",
        "type": "REVIEW",
        "context": "       8: \n       9: # Critical Fixes Applied - Emergency Response\n      10: \n>>>   11: **Reviewer**: Brutal CTO/Auditor  \n      12: **Status**: \ud83d\udfe2 **CRITICAL BUGS FIXED**  \n      13: \n      14: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] er**: Brutal CTO/Auditor",
        "body": "## REVIEW Item\n\n**Description**: er**: Brutal CTO/Auditor\n\n**File**: `.\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md`  \n**Line**: 11  \n**Priority**: medium  \n\n### Context\n```text\n       8: \n       9: # Critical Fixes Applied - Emergency Response\n      10: \n>>>   11: **Reviewer**: Brutal CTO/Auditor  \n      12: **Status**: \ud83d\udfe2 **CRITICAL BUGS FIXED**  \n      13: \n      14: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 12,
        "text": "S FIXED**",
        "type": "BUG",
        "context": "       9: # Critical Fixes Applied - Emergency Response\n      10: \n      11: **Reviewer**: Brutal CTO/Auditor  \n>>>   12: **Status**: \ud83d\udfe2 **CRITICAL BUGS FIXED**  \n      13: \n      14: ---\n      15: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] S FIXED**",
        "body": "## BUG Item\n\n**Description**: S FIXED**\n\n**File**: `.\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md`  \n**Line**: 12  \n**Priority**: high  \n\n### Context\n```text\n       9: # Critical Fixes Applied - Emergency Response\n      10: \n      11: **Reviewer**: Brutal CTO/Auditor  \n>>>   12: **Status**: \ud83d\udfe2 **CRITICAL BUGS FIXED**  \n      13: \n      14: ---\n      15: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 98,
        "text": "s unexpectedly",
        "type": "BUG",
        "context": "      95: \n      96: ### **Issue Identified:**\n      97: - No central place for known limitations\n>>>   98: - Users discovering bugs unexpectedly\n      99: - No workarounds documented\n     100: \n     101: **Risk**: \ud83d\udfe1 **USER FRUSTRATION - Wasted time on known issues**",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] s unexpectedly",
        "body": "## BUG Item\n\n**Description**: s unexpectedly\n\n**File**: `.\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md`  \n**Line**: 98  \n**Priority**: medium  \n\n### Context\n```text\n      95: \n      96: ### **Issue Identified:**\n      97: - No central place for known limitations\n>>>   98: - Users discovering bugs unexpectedly\n      99: - No workarounds documented\n     100: \n     101: **Risk**: \ud83d\udfe1 **USER FRUSTRATION - Wasted time on known issues**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 106,
        "text": "s (with fixes)",
        "type": "BUG",
        "context": "     103: ### **Fix Applied:**\n     104: Created comprehensive `docs/KNOWN_ISSUES.md` documenting:\n     105: - \u2705 5 current limitations\n>>>  106: - \u2705 3 known bugs (with fixes)\n     107: - \u2705 3 feature gaps\n     108: - \u2705 3 technical debt items\n     109: - \u2705 3 security considerations",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] s (with fixes)",
        "body": "## BUG Item\n\n**Description**: s (with fixes)\n\n**File**: `.\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md`  \n**Line**: 106  \n**Priority**: high  \n\n### Context\n```text\n     103: ### **Fix Applied:**\n     104: Created comprehensive `docs/KNOWN_ISSUES.md` documenting:\n     105: - \u2705 5 current limitations\n>>>  106: - \u2705 3 known bugs (with fixes)\n     107: - \u2705 3 feature gaps\n     108: - \u2705 3 technical debt items\n     109: - \u2705 3 security considerations\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md",
        "line": 152,
        "text": "**: Fake deployment success = production failures",
        "type": "BUG",
        "context": "     149: ## \ud83d\udcca **Impact Assessment**\n     150: \n     151: ### **Before Fixes:**\n>>>  152: - \ud83d\udd34 **Critical Bug**: Fake deployment success = production failures\n     153: - \ud83d\udd34 **Misleading Claims**: Mock Alith presented as real\n     154: - \ud83d\udfe1 **Hidden Issues**: Users discovering limitations by accident\n     155: - \ud83d\udfe1 **Overclaimed Features**: README not matching reality",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[BUG] **: Fake deployment success = production failures",
        "body": "## BUG Item\n\n**Description**: **: Fake deployment success = production failures\n\n**File**: `.\\docs\\EXECUTION\\CRITICAL_FIXES_APPLIED.md`  \n**Line**: 152  \n**Priority**: high  \n\n### Context\n```text\n     149: ## \ud83d\udcca **Impact Assessment**\n     150: \n     151: ### **Before Fixes:**\n>>>  152: - \ud83d\udd34 **Critical Bug**: Fake deployment success = production failures\n     153: - \ud83d\udd34 **Misleading Claims**: Mock Alith presented as real\n     154: - \ud83d\udfe1 **Hidden Issues**: Users discovering limitations by accident\n     155: - \ud83d\udfe1 **Overclaimed Features**: README not matching reality\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\DEMO_SCRIPT.md",
        "line": 87,
        "text": "of generated contract",
        "type": "REVIEW",
        "context": "      84: \n      85: **Show** (if time permits):\n      86: ```bash\n>>>   87: # Quick preview of generated contract\n      88: head -20 artifacts/workflows/tokens/Token.sol\n      89: ```\n      90: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] of generated contract",
        "body": "## REVIEW Item\n\n**Description**: of generated contract\n\n**File**: `.\\docs\\EXECUTION\\DEMO_SCRIPT.md`  \n**Line**: 87  \n**Priority**: medium  \n\n### Context\n```text\n      84: \n      85: **Show** (if time permits):\n      86: ```bash\n>>>   87: # Quick preview of generated contract\n      88: head -20 artifacts/workflows/tokens/Token.sol\n      89: ```\n      90: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\DISASTER_RECOVERY.md",
        "line": 23,
        "text": "active alerts and error logs",
        "type": "REVIEW",
        "context": "      20: \n      21: 1. **Assess the Situation**\n      22:    - Check system health dashboard: http://localhost:8080\n>>>   23:    - Review active alerts and error logs\n      24:    - Identify the scope and impact of the incident\n      25: \n      26: 2. **Activate Emergency Procedures**",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] active alerts and error logs",
        "body": "## REVIEW Item\n\n**Description**: active alerts and error logs\n\n**File**: `.\\docs\\EXECUTION\\DISASTER_RECOVERY.md`  \n**Line**: 23  \n**Priority**: high  \n\n### Context\n```text\n      20: \n      21: 1. **Assess the Situation**\n      22:    - Check system health dashboard: http://localhost:8080\n>>>   23:    - Review active alerts and error logs\n      24:    - Identify the scope and impact of the incident\n      25: \n      26: 2. **Activate Emergency Procedures**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\DISASTER_RECOVERY.md",
        "line": 564,
        "text": "monitoring",
        "type": "REVIEW",
        "context": "     561: - [ ] Update procedures\n     562: - [ ] Implement preventive measures\n     563: - [ ] Conduct training\n>>>  564: - [ ] Review monitoring\n     565: - [ ] Test recovery procedures\n     566: \n     567: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] monitoring",
        "body": "## REVIEW Item\n\n**Description**: monitoring\n\n**File**: `.\\docs\\EXECUTION\\DISASTER_RECOVERY.md`  \n**Line**: 564  \n**Priority**: medium  \n\n### Context\n```text\n     561: - [ ] Update procedures\n     562: - [ ] Implement preventive measures\n     563: - [ ] Conduct training\n>>>  564: - [ ] Review monitoring\n     565: - [ ] Test recovery procedures\n     566: \n     567: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\DISASTER_RECOVERY.md",
        "line": 571,
        "text": "** 2024-04-01",
        "type": "REVIEW",
        "context": "     568: \n     569: **Document Version:** 1.0  \n     570: **Last Updated:** 2024-01-01  \n>>>  571: **Next Review:** 2024-04-01  \n     572: **Owner:** HyperKit Agent Team\n     573: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ** 2024-04-01",
        "body": "## REVIEW Item\n\n**Description**: ** 2024-04-01\n\n**File**: `.\\docs\\EXECUTION\\DISASTER_RECOVERY.md`  \n**Line**: 571  \n**Priority**: medium  \n\n### Context\n```text\n     568: \n     569: **Document Version:** 1.0  \n     570: **Last Updated:** 2024-01-01  \n>>>  571: **Next Review:** 2024-04-01  \n     572: **Owner:** HyperKit Agent Team\n     573: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 62,
        "text": "**: Real implementation now active and tested",
        "type": "NOTE",
        "context": "      59:   1. Install: `pip install alith>=0.12.0`\n      60:   2. Get API keys from https://lazai.network\n      61:   3. Configure in `.env` file\n>>>   62: - **Note**: Real implementation now active and tested\n      63: \n      64: ### **2. Audit System Accuracy**\n      65: - **Status**: \ud83d\udfe1 **BEST EFFORT**",
        "priority": "medium",
        "labels": [
          "todo",
          "priority:medium",
          "documentation",
          "maintenance",
          "testing"
        ]
      },
      "issue_template": {
        "title": "[NOTE] **: Real implementation now active and tested",
        "body": "## NOTE Item\n\n**Description**: **: Real implementation now active and tested\n\n**File**: `.\\docs\\EXECUTION\\KNOWN_ISSUES.md`  \n**Line**: 62  \n**Priority**: medium  \n\n### Context\n```text\n      59:   1. Install: `pip install alith>=0.12.0`\n      60:   2. Get API keys from https://lazai.network\n      61:   3. Configure in `.env` file\n>>>   62: - **Note**: Real implementation now active and tested\n      63: \n      64: ### **2. Audit System Accuracy**\n      65: - **Status**: \ud83d\udfe1 **BEST EFFORT**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "priority:medium",
          "documentation",
          "maintenance",
          "testing"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 82,
        "text": "**: This is a fundamental limitation of bytecode analysis, not a bug",
        "type": "NOTE",
        "context": "      79:   - Verify contract source on explorer first\n      80:   - Use Sourcify for verification\n      81:   - Request source code from contract owner\n>>>   82: - **Note**: This is a fundamental limitation of bytecode analysis, not a bug\n      83: \n      84: ### **4. Tool Availability Checks**\n      85: - **Status**: \ud83d\udfe1 **PERFORMANCE ISSUE**",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[NOTE] **: This is a fundamental limitation of bytecode analysis, not a bug",
        "body": "## NOTE Item\n\n**Description**: **: This is a fundamental limitation of bytecode analysis, not a bug\n\n**File**: `.\\docs\\EXECUTION\\KNOWN_ISSUES.md`  \n**Line**: 82  \n**Priority**: high  \n\n### Context\n```text\n      79:   - Verify contract source on explorer first\n      80:   - Use Sourcify for verification\n      81:   - Request source code from contract owner\n>>>   82: - **Note**: This is a fundamental limitation of bytecode analysis, not a bug\n      83: \n      84: ### **4. Tool Availability Checks**\n      85: - **Status**: \ud83d\udfe1 **PERFORMANCE ISSUE**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 196,
        "text": "transaction details manually",
        "type": "REVIEW",
        "context": "     193: - **Issue**: Simulation cannot detect all malicious behaviors\n     194: - **Impact**: Some attacks may not be detected\n     195: - **Best Practice**:\n>>>  196:   - Always review transaction details manually\n     197:   - Use multi-sig for high-value transactions\n     198:   - Monitor transaction history regularly\n     199: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] transaction details manually",
        "body": "## REVIEW Item\n\n**Description**: transaction details manually\n\n**File**: `.\\docs\\EXECUTION\\KNOWN_ISSUES.md`  \n**Line**: 196  \n**Priority**: medium  \n\n### Context\n```text\n     193: - **Issue**: Simulation cannot detect all malicious behaviors\n     194: - **Impact**: Some attacks may not be detected\n     195: - **Best Practice**:\n>>>  196:   - Always review transaction details manually\n     197:   - Use multi-sig for high-value transactions\n     198:   - Monitor transaction history regularly\n     199: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 204,
        "text": "or limitation not listed here?",
        "type": "BUG",
        "context": "     201: \n     202: ## \ud83d\udcde **Reporting New Issues**\n     203: \n>>>  204: Found a bug or limitation not listed here?\n     205: \n     206: 1. **Check** if it's already reported: https://github.com/JustineDevs/Hyperkit-Agent/issues\n     207: 2. **Create** new issue with:",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] or limitation not listed here?",
        "body": "## BUG Item\n\n**Description**: or limitation not listed here?\n\n**File**: `.\\docs\\EXECUTION\\KNOWN_ISSUES.md`  \n**Line**: 204  \n**Priority**: medium  \n\n### Context\n```text\n     201: \n     202: ## \ud83d\udcde **Reporting New Issues**\n     203: \n>>>  204: Found a bug or limitation not listed here?\n     205: \n     206: 1. **Check** if it's already reported: https://github.com/JustineDevs/Hyperkit-Agent/issues\n     207: 2. **Create** new issue with:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\KNOWN_ISSUES.md",
        "line": 213,
        "text": "`, `enhancement`, `documentation`",
        "type": "BUG",
        "context": "     210:    - Expected vs actual behavior\n     211:    - Environment details (OS, Python version, etc.)\n     212:    - Error logs if applicable\n>>>  213: 3. **Label** appropriately: `bug`, `enhancement`, `documentation`\n     214: \n     215: ---\n     216: ",
        "priority": "medium",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] `, `enhancement`, `documentation`",
        "body": "## BUG Item\n\n**Description**: `, `enhancement`, `documentation`\n\n**File**: `.\\docs\\EXECUTION\\KNOWN_ISSUES.md`  \n**Line**: 213  \n**Priority**: medium  \n\n### Context\n```text\n     210:    - Expected vs actual behavior\n     211:    - Environment details (OS, Python version, etc.)\n     212:    - Error logs if applicable\n>>>  213: 3. **Label** appropriately: `bug`, `enhancement`, `documentation`\n     214: \n     215: ---\n     216: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\KNOWN_LIMITATIONS.md",
        "line": 222,
        "text": "fixes completed",
        "type": "BUG",
        "context": "     219: 2. \u274c **Test Complete Workflow**\n     220:    - Generate \u2192 Audit \u2192 Deploy working\n     221:    - End-to-end success proven\n>>>  222:    - Bug fixes completed\n     223:    - **Timeline**: Critical (48 hours)\n     224: \n     225: 3. \ud83d\udfe1 **Install Missing SDKs**",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] fixes completed",
        "body": "## BUG Item\n\n**Description**: fixes completed\n\n**File**: `.\\docs\\EXECUTION\\KNOWN_LIMITATIONS.md`  \n**Line**: 222  \n**Priority**: high  \n\n### Context\n```text\n     219: 2. \u274c **Test Complete Workflow**\n     220:    - Generate \u2192 Audit \u2192 Deploy working\n     221:    - End-to-end success proven\n>>>  222:    - Bug fixes completed\n     223:    - **Timeline**: Critical (48 hours)\n     224: \n     225: 3. \ud83d\udfe1 **Install Missing SDKs**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 79,
        "text": "**: Skip deployment test to avoid using gas/resources",
        "type": "NOTE",
        "context": "      76:   **Expected**: Audit completes with severity rating\n      77:   **Time**: ~15 seconds\n      78: \n>>>   79: **Note**: Skip deployment test to avoid using gas/resources\n      80: \n      81: ---\n      82: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "testing"
        ]
      },
      "issue_template": {
        "title": "[NOTE] **: Skip deployment test to avoid using gas/resources",
        "body": "## NOTE Item\n\n**Description**: **: Skip deployment test to avoid using gas/resources\n\n**File**: `.\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md`  \n**Line**: 79  \n**Priority**: high  \n\n### Context\n```text\n      76:   **Expected**: Audit completes with severity rating\n      77:   **Time**: ~15 seconds\n      78: \n>>>   79: **Note**: Skip deployment test to avoid using gas/resources\n      80: \n      81: ---\n      82: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "testing"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 96,
        "text": "s/script (optional reference)",
        "type": "NOTE",
        "context": "      93: - [ ] **Open Required Applications**\n      94:   - [ ] Terminal window (maximized)\n      95:   - [ ] Browser (with explorer bookmarked)\n>>>   96:   - [ ] Notes/script (optional reference)\n      97: \n      98: - [ ] **Increase Terminal Font Size**\n      99:   - **Windows Terminal**: `Ctrl` + `+` (multiple times)",
        "priority": "low",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:low"
        ]
      },
      "issue_template": {
        "title": "[NOTE] s/script (optional reference)",
        "body": "## NOTE Item\n\n**Description**: s/script (optional reference)\n\n**File**: `.\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md`  \n**Line**: 96  \n**Priority**: low  \n\n### Context\n```text\n      93: - [ ] **Open Required Applications**\n      94:   - [ ] Terminal window (maximized)\n      95:   - [ ] Browser (with explorer bookmarked)\n>>>   96:   - [ ] Notes/script (optional reference)\n      97: \n      98: - [ ] **Increase Terminal Font Size**\n      99:   - **Windows Terminal**: `Ctrl` + `+` (multiple times)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:low"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 135,
        "text": "demo script key points",
        "type": "REVIEW",
        "context": "     132:   - [ ] Keep tab ready for contract verification\n     133: \n     134: - [ ] **Mental Preparation**\n>>>  135:   - [ ] Review demo script key points\n     136:   - [ ] Memorize backup contract address\n     137:   - [ ] Deep breath - you're ready! \ud83d\ude0a\n     138: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] demo script key points",
        "body": "## REVIEW Item\n\n**Description**: demo script key points\n\n**File**: `.\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md`  \n**Line**: 135  \n**Priority**: medium  \n\n### Context\n```text\n     132:   - [ ] Keep tab ready for contract verification\n     133: \n     134: - [ ] **Mental Preparation**\n>>>  135:   - [ ] Review demo script key points\n     136:   - [ ] Memorize backup contract address\n     137:   - [ ] Deep breath - you're ready! \ud83d\ude0a\n     138: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 185,
        "text": "FAILURE_RECOVERY_PLAN.md",
        "type": "REVIEW",
        "context": "     182:   cat test_logs/deployment_test_2.log | tail -20\n     183:   ```\n     184: \n>>>  185: - [ ] Review FAILURE_RECOVERY_PLAN.md\n     186: \n     187: - [ ] Switch to backup demo script\n     188: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] FAILURE_RECOVERY_PLAN.md",
        "body": "## REVIEW Item\n\n**Description**: FAILURE_RECOVERY_PLAN.md\n\n**File**: `.\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md`  \n**Line**: 185  \n**Priority**: medium  \n\n### Context\n```text\n     182:   cat test_logs/deployment_test_2.log | tail -20\n     183:   ```\n     184: \n>>>  185: - [ ] Review FAILURE_RECOVERY_PLAN.md\n     186: \n     187: - [ ] Switch to backup demo script\n     188: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 202,
        "text": "offline demo script in FAILURE_RECOVERY_PLAN.md",
        "type": "REVIEW",
        "context": "     199:   - [ ] Deployment logs\n     200:   - [ ] Screenshots\n     201: \n>>>  202: - [ ] Review offline demo script in FAILURE_RECOVERY_PLAN.md\n     203: \n     204: **Decision**: Can proceed with offline demonstration!\n     205: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] offline demo script in FAILURE_RECOVERY_PLAN.md",
        "body": "## REVIEW Item\n\n**Description**: offline demo script in FAILURE_RECOVERY_PLAN.md\n\n**File**: `.\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md`  \n**Line**: 202  \n**Priority**: medium  \n\n### Context\n```text\n     199:   - [ ] Deployment logs\n     200:   - [ ] Screenshots\n     201: \n>>>  202: - [ ] Review offline demo script in FAILURE_RECOVERY_PLAN.md\n     203: \n     204: **Decision**: Can proceed with offline demonstration!\n     205: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 242,
        "text": "relevant section and practice",
        "type": "REVIEW",
        "context": "     239: \n     240: **All Yes?** \u2192 \ud83d\udcaa **YOU'RE READY!**\n     241: \n>>>  242: **Any No?** \u2192 Review relevant section and practice\n     243: \n     244: ---\n     245: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] relevant section and practice",
        "body": "## REVIEW Item\n\n**Description**: relevant section and practice\n\n**File**: `.\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md`  \n**Line**: 242  \n**Priority**: medium  \n\n### Context\n```text\n     239: \n     240: **All Yes?** \u2192 \ud83d\udcaa **YOU'RE READY!**\n     241: \n>>>  242: **Any No?** \u2192 Review relevant section and practice\n     243: \n     244: ---\n     245: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 314,
        "text": "These Points**",
        "type": "REVIEW",
        "context": "     311: \n     312: ## \ud83c\udfc1 **FINAL GO/NO-GO DECISION**\n     313: \n>>>  314: ### **Review These Points**\n     315: \n     316: **System Status**:\n     317: - [ ] Terminal working",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] These Points**",
        "body": "## REVIEW Item\n\n**Description**: These Points**\n\n**File**: `.\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md`  \n**Line**: 314  \n**Priority**: medium  \n\n### Context\n```text\n     311: \n     312: ## \ud83c\udfc1 **FINAL GO/NO-GO DECISION**\n     313: \n>>>  314: ### **Review These Points**\n     315: \n     316: **System Status**:\n     317: - [ ] Terminal working\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md",
        "line": 346,
        "text": "notes",
        "type": "REVIEW",
        "context": "     343: \n     344: ### **October 27, 2025**\n     345: \n>>>  346: **8:00 AM** - Wake up, review notes  \n     347: **9:00 AM** - Morning coffee, relaxation  \n     348: **10:00 AM** - First practice run  \n     349: **11:00 AM** - Second practice run (if needed)  ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] notes",
        "body": "## REVIEW Item\n\n**Description**: notes\n\n**File**: `.\\docs\\EXECUTION\\PRE_DEMO_CHECKLIST.md`  \n**Line**: 346  \n**Priority**: medium  \n\n### Context\n```text\n     343: \n     344: ### **October 27, 2025**\n     345: \n>>>  346: **8:00 AM** - Wake up, review notes  \n     347: **9:00 AM** - Morning coffee, relaxation  \n     348: **10:00 AM** - First practice run  \n     349: **11:00 AM** - Second practice run (if needed)  \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\README.md",
        "line": 54,
        "text": "**PRE_DEMO_CHECKLIST.md**",
        "type": "REVIEW",
        "context": "      51: ## Quick Start\n      52: \n      53: For deployment:\n>>>   54: 1. Review **PRE_DEMO_CHECKLIST.md**\n      55: 2. Follow **DEMO_SCRIPT.md**\n      56: 3. Keep **DISASTER_RECOVERY.md** handy\n      57: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] **PRE_DEMO_CHECKLIST.md**",
        "body": "## REVIEW Item\n\n**Description**: **PRE_DEMO_CHECKLIST.md**\n\n**File**: `.\\docs\\EXECUTION\\README.md`  \n**Line**: 54  \n**Priority**: medium  \n\n### Context\n```text\n      51: ## Quick Start\n      52: \n      53: For deployment:\n>>>   54: 1. Review **PRE_DEMO_CHECKLIST.md**\n      55: 2. Follow **DEMO_SCRIPT.md**\n      56: 3. Keep **DISASTER_RECOVERY.md** handy\n      57: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\EXECUTION\\workflow-command.md",
        "line": 69,
        "text": "= ctx.obj.get('debug', False)",
        "type": "BUG",
        "context": "      66:     from core.config.loader import get_config\n      67:     \n      68:     verbose = ctx.obj.get('verbose', False)\n>>>   69:     debug = ctx.obj.get('debug', False)\n      70:     \n      71:     # Display configuration\n      72:     config_panel = Panel.fit(",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] = ctx.obj.get('debug', False)",
        "body": "## BUG Item\n\n**Description**: = ctx.obj.get('debug', False)\n\n**File**: `.\\docs\\EXECUTION\\workflow-command.md`  \n**Line**: 69  \n**Priority**: high  \n\n### Context\n```text\n      66:     from core.config.loader import get_config\n      67:     \n      68:     verbose = ctx.obj.get('verbose', False)\n>>>   69:     debug = ctx.obj.get('debug', False)\n      70:     \n      71:     # Display configuration\n      72:     config_panel = Panel.fit(\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 48,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      45: \n      46: **Output:**\n      47: ```\n>>>   48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "body": "## XXX Item\n\n**Description**: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n**File**: `.\\docs\\GUIDE\\IPFS_RAG_GUIDE.md`  \n**Line**: 48  \n**Priority**: medium  \n\n### Context\n```text\n      45: \n      46: **Output:**\n      47: ```\n>>>   48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 49,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      46: **Output:**\n      47: ```\n      48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n>>>   49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```\n      52: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "body": "## XXX Item\n\n**Description**: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n**File**: `.\\docs\\GUIDE\\IPFS_RAG_GUIDE.md`  \n**Line**: 49  \n**Priority**: medium  \n\n### Context\n```text\n      46: **Output:**\n      47: ```\n      48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n>>>   49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```\n      52: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 50,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      47: ```\n      48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n>>>   50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```\n      52: \n      53: **Save the CID** - you'll need it to fetch the vector store later!",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "body": "## XXX Item\n\n**Description**: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n**File**: `.\\docs\\GUIDE\\IPFS_RAG_GUIDE.md`  \n**Line**: 50  \n**Priority**: medium  \n\n### Context\n```text\n      47: ```\n      48: \u2713 Uploaded to IPFS with CID: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      49:   Access at: https://ipfs.io/ipfs/QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n>>>   50:   Save this CID to fetch later: QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      51: ```\n      52: \n      53: **Save the CID** - you'll need it to fetch the vector store later!\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 58,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      55: ### 4. Fetch from IPFS (New Developer/CI/CD)\n      56: \n      57: ```bash\n>>>   58: hyperagent setup_rag_vectors --fetch-cid QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      59: ```\n      60: \n      61: This downloads the vector store from IPFS and extracts it locally.",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "body": "## XXX Item\n\n**Description**: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n**File**: `.\\docs\\GUIDE\\IPFS_RAG_GUIDE.md`  \n**Line**: 58  \n**Priority**: medium  \n\n### Context\n```text\n      55: ### 4. Fetch from IPFS (New Developer/CI/CD)\n      56: \n      57: ```bash\n>>>   58: hyperagent setup_rag_vectors --fetch-cid QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      59: ```\n      60: \n      61: This downloads the vector store from IPFS and extracts it locally.\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 99,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "type": "XXX",
        "context": "      96: pip install -r requirements.txt\n      97: \n      98: # 3. Fetch pre-built vectors from IPFS (< 1 minute)\n>>>   99: hyperagent setup_rag_vectors --fetch-cid QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n     100: \n     101: # 4. Ready to go!\n     102: ```",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "body": "## XXX Item\n\n**Description**: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n**File**: `.\\docs\\GUIDE\\IPFS_RAG_GUIDE.md`  \n**Line**: 99  \n**Priority**: medium  \n\n### Context\n```text\n      96: pip install -r requirements.txt\n      97: \n      98: # 3. Fetch pre-built vectors from IPFS (< 1 minute)\n>>>   99: hyperagent setup_rag_vectors --fetch-cid QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n     100: \n     101: # 4. Ready to go!\n     102: ```\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 157,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",",
        "type": "XXX",
        "context": "     154: \n     155: ```json\n     156: {\n>>>  157:   \"latest_cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     158:   \"versions\": [\n     159:     {\n     160:       \"cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",",
        "body": "## XXX Item\n\n**Description**: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n\n**File**: `.\\docs\\GUIDE\\IPFS_RAG_GUIDE.md`  \n**Line**: 157  \n**Priority**: medium  \n\n### Context\n```text\n     154: \n     155: ```json\n     156: {\n>>>  157:   \"latest_cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     158:   \"versions\": [\n     159:     {\n     160:       \"cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 160,
        "text": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",",
        "type": "XXX",
        "context": "     157:   \"latest_cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     158:   \"versions\": [\n     159:     {\n>>>  160:       \"cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     161:       \"timestamp\": 1706697600,\n     162:       \"uploaded\": true\n     163:     },",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",",
        "body": "## XXX Item\n\n**Description**: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n\n**File**: `.\\docs\\GUIDE\\IPFS_RAG_GUIDE.md`  \n**Line**: 160  \n**Priority**: medium  \n\n### Context\n```text\n     157:   \"latest_cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     158:   \"versions\": [\n     159:     {\n>>>  160:       \"cid\": \"QmXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     161:       \"timestamp\": 1706697600,\n     162:       \"uploaded\": true\n     163:     },\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\GUIDE\\IPFS_RAG_GUIDE.md",
        "line": 457,
        "text": "[ChromaDB logs](data/vector_store/)",
        "type": "REVIEW",
        "context": "     454: If you encounter issues:\n     455: \n     456: 1. Check [Troubleshooting](#-troubleshooting) section\n>>>  457: 2. Review [ChromaDB logs](data/vector_store/)\n     458: 3. Check [IPFS CID registry](data/vector_store/cid_registry.json)\n     459: 4. Open an issue on GitHub\n     460: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] [ChromaDB logs](data/vector_store/)",
        "body": "## REVIEW Item\n\n**Description**: [ChromaDB logs](data/vector_store/)\n\n**File**: `.\\docs\\GUIDE\\IPFS_RAG_GUIDE.md`  \n**Line**: 457  \n**Priority**: medium  \n\n### Context\n```text\n     454: If you encounter issues:\n     455: \n     456: 1. Check [Troubleshooting](#-troubleshooting) section\n>>>  457: 2. Review [ChromaDB logs](data/vector_store/)\n     458: 3. Check [IPFS CID registry](data/vector_store/cid_registry.json)\n     459: 4. Open an issue on GitHub\n     460: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_INTEGRATION_PROGRESS.md",
        "line": 105,
        "text": "| Oct 31 | \ud83d\udcc5 PLANNED | Complete foundation |",
        "type": "REVIEW",
        "context": "     102: |-----------|-------------|--------|-------|\n     103: | Project Structure | Oct 28 | \ud83d\udcc5 PLANNED | Create services/alith/ |\n     104: | Write Tests | Oct 29 | \ud83d\udcc5 PLANNED | 5 unit tests |\n>>>  105: | Phase 1 Review | Oct 31 | \ud83d\udcc5 PLANNED | Complete foundation |\n     106: \n     107: ---\n     108: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] | Oct 31 | \ud83d\udcc5 PLANNED | Complete foundation |",
        "body": "## REVIEW Item\n\n**Description**: | Oct 31 | \ud83d\udcc5 PLANNED | Complete foundation |\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_INTEGRATION_PROGRESS.md`  \n**Line**: 105  \n**Priority**: medium  \n\n### Context\n```text\n     102: |-----------|-------------|--------|-------|\n     103: | Project Structure | Oct 28 | \ud83d\udcc5 PLANNED | Create services/alith/ |\n     104: | Write Tests | Oct 29 | \ud83d\udcc5 PLANNED | 5 unit tests |\n>>>  105: | Phase 1 Review | Oct 31 | \ud83d\udcc5 PLANNED | Complete foundation |\n     106: \n     107: ---\n     108: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_INTEGRATION_PROGRESS.md",
        "line": 341,
        "text": "any issues encountered",
        "type": "NOTE",
        "context": "     338: \n     339: 3. \ud83d\udd04 **Document Installation**\n     340:    - Update this report with results\n>>>  341:    - Note any issues encountered\n     342:    - Record execution time\n     343: \n     344: ### Short-term (This Week - Oct 25-31)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[NOTE] any issues encountered",
        "body": "## NOTE Item\n\n**Description**: any issues encountered\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_INTEGRATION_PROGRESS.md`  \n**Line**: 341  \n**Priority**: medium  \n\n### Context\n```text\n     338: \n     339: 3. \ud83d\udd04 **Document Installation**\n     340:    - Update this report with results\n>>>  341:    - Note any issues encountered\n     342:    - Record execution time\n     343: \n     344: ### Short-term (This Week - Oct 25-31)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 527,
        "text": "| \ud83c\udfaf |",
        "type": "TBD",
        "context": "     524: **Performance Targets**:\n     525: | Metric | Target | Current | Status |\n     526: |--------|--------|---------|--------|\n>>>  527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] | \ud83c\udfaf |",
        "body": "## TBD Item\n\n**Description**: | \ud83c\udfaf |\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md`  \n**Line**: 527  \n**Priority**: medium  \n\n### Context\n```text\n     524: **Performance Targets**:\n     525: | Metric | Target | Current | Status |\n     526: |--------|--------|---------|--------|\n>>>  527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 528,
        "text": "| \ud83c\udfaf |",
        "type": "TBD",
        "context": "     525: | Metric | Target | Current | Status |\n     526: |--------|--------|---------|--------|\n     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n>>>  528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] | \ud83c\udfaf |",
        "body": "## TBD Item\n\n**Description**: | \ud83c\udfaf |\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md`  \n**Line**: 528  \n**Priority**: medium  \n\n### Context\n```text\n     525: | Metric | Target | Current | Status |\n     526: |--------|--------|---------|--------|\n     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n>>>  528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 529,
        "text": "| \ud83c\udfaf |",
        "type": "TBD",
        "context": "     526: |--------|--------|---------|--------|\n     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n>>>  529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: \n     532: **Deliverables**:",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] | \ud83c\udfaf |",
        "body": "## TBD Item\n\n**Description**: | \ud83c\udfaf |\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md`  \n**Line**: 529  \n**Priority**: medium  \n\n### Context\n```text\n     526: |--------|--------|---------|--------|\n     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n>>>  529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n     530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: \n     532: **Deliverables**:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 530,
        "text": "| \ud83c\udfaf |",
        "type": "TBD",
        "context": "     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n>>>  530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: \n     532: **Deliverables**:\n     533: - [x] Performance targets achieved",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] | \ud83c\udfaf |",
        "body": "## TBD Item\n\n**Description**: | \ud83c\udfaf |\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md`  \n**Line**: 530  \n**Priority**: medium  \n\n### Context\n```text\n     527: | AI Inference | < 3 sec | TBD | \ud83c\udfaf |\n     528: | Web3 Query | < 500ms | TBD | \ud83c\udfaf |\n     529: | Full Audit | < 10 sec | TBD | \ud83c\udfaf |\n>>>  530: | Cache Hit Rate | > 80% | TBD | \ud83c\udfaf |\n     531: \n     532: **Deliverables**:\n     533: - [x] Performance targets achieved\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 601,
        "text": "(post-launch metric)",
        "type": "TBD",
        "context": "     598:    - Audit confidence: 30% \u2192 85%+ (55 point improvement)\n     599:    - Inference latency: < 3 seconds\n     600:    - Success rate: 95%+ on verified contracts\n>>>  601:    - User satisfaction: TBD (post-launch metric)\n     602: \n     603: **Deliverables**:\n     604: - [x] Production deployment complete",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] (post-launch metric)",
        "body": "## TBD Item\n\n**Description**: (post-launch metric)\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md`  \n**Line**: 601  \n**Priority**: medium  \n\n### Context\n```text\n     598:    - Audit confidence: 30% \u2192 85%+ (55 point improvement)\n     599:    - Inference latency: < 3 seconds\n     600:    - Success rate: 95%+ on verified contracts\n>>>  601:    - User satisfaction: TBD (post-launch metric)\n     602: \n     603: **Deliverables**:\n     604: - [x] Production deployment complete\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 777,
        "text": "this integration roadmap",
        "type": "REVIEW",
        "context": "     774: ## Next Steps\n     775: \n     776: ### This Week\n>>>  777: 1. \u2705 Review this integration roadmap\n     778: 2. \ud83d\udd04 Install Alith SDK: `pip install alith`\n     779: 3. \ud83d\udd04 Test basic agent functionality\n     780: 4. \ud83d\udd04 Schedule Week 1 kickoff meeting",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] this integration roadmap",
        "body": "## REVIEW Item\n\n**Description**: this integration roadmap\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md`  \n**Line**: 777  \n**Priority**: medium  \n\n### Context\n```text\n     774: ## Next Steps\n     775: \n     776: ### This Week\n>>>  777: 1. \u2705 Review this integration roadmap\n     778: 2. \ud83d\udd04 Install Alith SDK: `pip install alith`\n     779: 3. \ud83d\udd04 Test basic agent functionality\n     780: 4. \ud83d\udd04 Schedule Week 1 kickoff meeting\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 790,
        "text": "with LazAI team",
        "type": "REVIEW",
        "context": "     787: \n     788: ### Milestone Checkpoint (Week 4)\n     789: - Working demo of AI-powered audit\n>>>  790: - Code review with LazAI team\n     791: - Performance benchmarks validated\n     792: - Documentation draft for review\n     793: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] with LazAI team",
        "body": "## REVIEW Item\n\n**Description**: with LazAI team\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md`  \n**Line**: 790  \n**Priority**: medium  \n\n### Context\n```text\n     787: \n     788: ### Milestone Checkpoint (Week 4)\n     789: - Working demo of AI-powered audit\n>>>  790: - Code review with LazAI team\n     791: - Performance benchmarks validated\n     792: - Documentation draft for review\n     793: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md",
        "line": 807,
        "text": "*: Week 4 Milestone Checkpoint",
        "type": "REVIEW",
        "context": "     804: *Roadmap Created*: October 25, 2024  \n     805: *Timeline*: 10 weeks (Phases 1-5)  \n     806: *Status*: Ready to Begin Phase 1  \n>>>  807: *Next Review*: Week 4 Milestone Checkpoint  \n     808: \n     809: ---\n     810: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] *: Week 4 Milestone Checkpoint",
        "body": "## REVIEW Item\n\n**Description**: *: Week 4 Milestone Checkpoint\n\n**File**: `.\\docs\\INTEGRATION\\ALITH_SDK_INTEGRATION_ROADMAP.md`  \n**Line**: 807  \n**Priority**: medium  \n\n### Context\n```text\n     804: *Roadmap Created*: October 25, 2024  \n     805: *Timeline*: 10 weeks (Phases 1-5)  \n     806: *Status*: Ready to Begin Phase 1  \n>>>  807: *Next Review*: Week 4 Milestone Checkpoint  \n     808: \n     809: ---\n     810: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\LAZAI_INTEGRATION_GUIDE.md",
        "line": 120,
        "text": "Commands:",
        "type": "BUG",
        "context": "     117: 3. **Insufficient funds**: Deposit more tokens for inference\n     118: 4. **IPFS not configured**: Set up Pinata JWT token\n     119: \n>>>  120: ### Debug Commands:\n     121: ```python\n     122: # Check integration status\n     123: status = ai_agent.get_lazai_status()",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] Commands:",
        "body": "## BUG Item\n\n**Description**: Commands:\n\n**File**: `.\\docs\\INTEGRATION\\LAZAI_INTEGRATION_GUIDE.md`  \n**Line**: 120  \n**Priority**: medium  \n\n### Context\n```text\n     117: 3. **Insufficient funds**: Deposit more tokens for inference\n     118: 4. **IPFS not configured**: Set up Pinata JWT token\n     119: \n>>>  120: ### Debug Commands:\n     121: ```python\n     122: # Check integration status\n     123: status = ai_agent.get_lazai_status()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\LAZAI_INTEGRATION_GUIDE.md",
        "line": 156,
        "text": "s and feature requests",
        "type": "BUG",
        "context": "     153: \n     154: - **LazAI Discord**: Join for community support\n     155: - **Builder Guild**: Technical assistance\n>>>  156: - **GitHub Issues**: Report bugs and feature requests\n     157: - **Documentation**: https://docs.lazai.network/\n     158: \n     159: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] s and feature requests",
        "body": "## BUG Item\n\n**Description**: s and feature requests\n\n**File**: `.\\docs\\INTEGRATION\\LAZAI_INTEGRATION_GUIDE.md`  \n**Line**: 156  \n**Priority**: medium  \n\n### Context\n```text\n     153: \n     154: - **LazAI Discord**: Join for community support\n     155: - **Builder Guild**: Technical assistance\n>>>  156: - **GitHub Issues**: Report bugs and feature requests\n     157: - **Documentation**: https://docs.lazai.network/\n     158: \n     159: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 45,
        "text": "\u2502    \u2502 \u2713 100K+ addresses    \u2502          \u2502",
        "type": "REVIEW",
        "context": "      42: \u2502  \u2502 Transaction          \u2502    \u2502 Address Reputation   \u2502          \u2502\n      43: \u2502  \u2502 Simulation Engine    \u2502    \u2502 Database             \u2502          \u2502\n      44: \u2502  \u2502 (Pocket Universe)    \u2502    \u2502 (GoPlus Security)    \u2502          \u2502\n>>>   45: \u2502  \u2502 \u2713 Pre-sign preview   \u2502    \u2502 \u2713 100K+ addresses    \u2502          \u2502\n      46: \u2502  \u2502 \u2713 Balance changes    \u2502    \u2502 \u2713 Graph analysis     \u2502          \u2502\n      47: \u2502  \u2502 \u2713 Exploit detection  \u2502    \u2502 \u2713 Risk scoring       \u2502          \u2502\n      48: \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2502",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] \u2502    \u2502 \u2713 100K+ addresses    \u2502          \u2502",
        "body": "## REVIEW Item\n\n**Description**: \u2502    \u2502 \u2713 100K+ addresses    \u2502          \u2502\n\n**File**: `.\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md`  \n**Line**: 45  \n**Priority**: medium  \n\n### Context\n```text\n      42: \u2502  \u2502 Transaction          \u2502    \u2502 Address Reputation   \u2502          \u2502\n      43: \u2502  \u2502 Simulation Engine    \u2502    \u2502 Database             \u2502          \u2502\n      44: \u2502  \u2502 (Pocket Universe)    \u2502    \u2502 (GoPlus Security)    \u2502          \u2502\n>>>   45: \u2502  \u2502 \u2713 Pre-sign preview   \u2502    \u2502 \u2713 100K+ addresses    \u2502          \u2502\n      46: \u2502  \u2502 \u2713 Balance changes    \u2502    \u2502 \u2713 Graph analysis     \u2502          \u2502\n      47: \u2502  \u2502 \u2713 Exploit detection  \u2502    \u2502 \u2713 Risk scoring       \u2502          \u2502\n      48: \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2502\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 83,
        "text": "(Pocket Universe foundation)",
        "type": "REVIEW",
        "context": "      80: \n      81: ### 1. Transaction Simulation Engine\n      82: \n>>>   83: **Purpose**: Pre-signature transaction preview (Pocket Universe foundation)\n      84: \n      85: **Features**:\n      86: - Forks blockchain state using Anvil (Foundry)",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] (Pocket Universe foundation)",
        "body": "## REVIEW Item\n\n**Description**: (Pocket Universe foundation)\n\n**File**: `.\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md`  \n**Line**: 83  \n**Priority**: medium  \n\n### Context\n```text\n      80: \n      81: ### 1. Transaction Simulation Engine\n      82: \n>>>   83: **Purpose**: Pre-signature transaction preview (Pocket Universe foundation)\n      84: \n      85: **Features**:\n      86: - Forks blockchain state using Anvil (Foundry)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 90,
        "text": "(\"You will send X, receive Y\")",
        "type": "REVIEW",
        "context": "      87: - Executes transaction in isolated environment\n      88: - Captures balance changes (ETH, ERC20, ERC721)\n      89: - Detects suspicious patterns (reentrancy, price manipulation)\n>>>   90: - Generates human-readable preview (\"You will send X, receive Y\")\n      91: \n      92: **Performance**:\n      93: - Execution time: 1-3 seconds",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] (\"You will send X, receive Y\")",
        "body": "## REVIEW Item\n\n**Description**: (\"You will send X, receive Y\")\n\n**File**: `.\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md`  \n**Line**: 90  \n**Priority**: medium  \n\n### Context\n```text\n      87: - Executes transaction in isolated environment\n      88: - Captures balance changes (ETH, ERC20, ERC721)\n      89: - Detects suspicious patterns (reentrancy, price manipulation)\n>>>   90: - Generates human-readable preview (\"You will send X, receive Y\")\n      91: \n      92: **Performance**:\n      93: - Execution time: 1-3 seconds\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 481,
        "text": "s and request features]",
        "type": "BUG",
        "context": "     478: - **Documentation**: `/docs/WALLET_SECURITY_EXTENSIONS.md`\n     479: - **Examples**: `/examples/security_examples.py`\n     480: - **API Reference**: `/docs/API_REFERENCE.md`\n>>>  481: - **GitHub Issues**: [Report bugs and request features]\n     482: \n     483: ---\n     484: ",
        "priority": "medium",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] s and request features]",
        "body": "## BUG Item\n\n**Description**: s and request features]\n\n**File**: `.\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md`  \n**Line**: 481  \n**Priority**: medium  \n\n### Context\n```text\n     478: - **Documentation**: `/docs/WALLET_SECURITY_EXTENSIONS.md`\n     479: - **Examples**: `/examples/security_examples.py`\n     480: - **API Reference**: `/docs/API_REFERENCE.md`\n>>>  481: - **GitHub Issues**: [Report bugs and request features]\n     482: \n     483: ---\n     484: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "priority:medium",
          "enhancement",
          "documentation",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md",
        "line": 486,
        "text": "**: Phase 2 completion (Week 24)",
        "type": "REVIEW",
        "context": "     483: ---\n     484: \n     485: **Last Updated**: October 25, 2024  \n>>>  486: **Next Review**: Phase 2 completion (Week 24)\n     487: \n     488: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] **: Phase 2 completion (Week 24)",
        "body": "## REVIEW Item\n\n**Description**: **: Phase 2 completion (Week 24)\n\n**File**: `.\\docs\\INTEGRATION\\WALLET_SECURITY_EXTENSIONS.md`  \n**Line**: 486  \n**Priority**: medium  \n\n### Context\n```text\n     483: ---\n     484: \n     485: **Last Updated**: October 25, 2024  \n>>>  486: **Next Review**: Phase 2 completion (Week 24)\n     487: \n     488: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 24,
        "text": "ed by someone familiar with the user-facing impact",
        "type": "REVIEW",
        "context": "      21: \n      22: ### 2. **Mandatory Documentation Review**\n      23: - All PRs must include a documentation reviewer\n>>>   24: - Documentation changes must be reviewed by someone familiar with the user-facing impact\n      25: - Technical writers or senior developers must approve documentation changes\n      26: \n      27: ### 3. **Automated Enforcement**",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ed by someone familiar with the user-facing impact",
        "body": "## REVIEW Item\n\n**Description**: ed by someone familiar with the user-facing impact\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 24  \n**Priority**: medium  \n\n### Context\n```text\n      21: \n      22: ### 2. **Mandatory Documentation Review**\n      23: - All PRs must include a documentation reviewer\n>>>   24: - Documentation changes must be reviewed by someone familiar with the user-facing impact\n      25: - Technical writers or senior developers must approve documentation changes\n      26: \n      27: ### 3. **Automated Enforcement**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 78,
        "text": "/FIXME comments",
        "type": "TODO",
        "context": "      75: The automated drift detection checks for:\n      76: - References to deprecated CLI commands\n      77: - Future-tense language in documentation\n>>>   78: - Stale TODO/FIXME comments\n      79: - Outdated script references\n      80: - Missing implementation status\n      81: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[TODO] /FIXME comments",
        "body": "## TODO Item\n\n**Description**: /FIXME comments\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 78  \n**Priority**: high  \n\n### Context\n```text\n      75: The automated drift detection checks for:\n      76: - References to deprecated CLI commands\n      77: - Future-tense language in documentation\n>>>   78: - Stale TODO/FIXME comments\n      79: - Outdated script references\n      80: - Missing implementation status\n      81: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 78,
        "text": "comments",
        "type": "FIXME",
        "context": "      75: The automated drift detection checks for:\n      76: - References to deprecated CLI commands\n      77: - Future-tense language in documentation\n>>>   78: - Stale TODO/FIXME comments\n      79: - Outdated script references\n      80: - Missing implementation status\n      81: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] comments",
        "body": "## FIXME Item\n\n**Description**: comments\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 78  \n**Priority**: medium  \n\n### Context\n```text\n      75: The automated drift detection checks for:\n      76: - References to deprecated CLI commands\n      77: - Future-tense language in documentation\n>>>   78: - Stale TODO/FIXME comments\n      79: - Outdated script references\n      80: - Missing implementation status\n      81: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 111,
        "text": "Process",
        "type": "REVIEW",
        "context": "     108: - \u274c **Not Implemented**: Feature is documented but not functional\n     109: - \ud83d\udd27 **Stub Process**: Process is documented but not CLI-integrated\n     110: \n>>>  111: ## Review Process\n     112: \n     113: ### **Documentation Review Checklist**\n     114: Reviewers must verify:",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] Process",
        "body": "## REVIEW Item\n\n**Description**: Process\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 111  \n**Priority**: medium  \n\n### Context\n```text\n     108: - \u274c **Not Implemented**: Feature is documented but not functional\n     109: - \ud83d\udd27 **Stub Process**: Process is documented but not CLI-integrated\n     110: \n>>>  111: ## Review Process\n     112: \n     113: ### **Documentation Review Checklist**\n     114: Reviewers must verify:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 113,
        "text": "Checklist**",
        "type": "REVIEW",
        "context": "     110: \n     111: ## Review Process\n     112: \n>>>  113: ### **Documentation Review Checklist**\n     114: Reviewers must verify:\n     115: - [ ] Documentation matches actual implementation\n     116: - [ ] Examples are tested and working",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] Checklist**",
        "body": "## REVIEW Item\n\n**Description**: Checklist**\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 113  \n**Priority**: medium  \n\n### Context\n```text\n     110: \n     111: ## Review Process\n     112: \n>>>  113: ### **Documentation Review Checklist**\n     114: Reviewers must verify:\n     115: - [ ] Documentation matches actual implementation\n     116: - [ ] Examples are tested and working\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 114,
        "text": "ers must verify:",
        "type": "REVIEW",
        "context": "     111: ## Review Process\n     112: \n     113: ### **Documentation Review Checklist**\n>>>  114: Reviewers must verify:\n     115: - [ ] Documentation matches actual implementation\n     116: - [ ] Examples are tested and working\n     117: - [ ] All CLI commands are documented",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ers must verify:",
        "body": "## REVIEW Item\n\n**Description**: ers must verify:\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 114  \n**Priority**: medium  \n\n### Context\n```text\n     111: ## Review Process\n     112: \n     113: ### **Documentation Review Checklist**\n>>>  114: Reviewers must verify:\n     115: - [ ] Documentation matches actual implementation\n     116: - [ ] Examples are tested and working\n     117: - [ ] All CLI commands are documented\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 122,
        "text": "er Requirements**",
        "type": "REVIEW",
        "context": "     119: - [ ] Links are valid and up-to-date\n     120: - [ ] Implementation status is accurate\n     121: \n>>>  122: ### **Reviewer Requirements**\n     123: - Must be familiar with the feature being documented\n     124: - Must test all examples and commands\n     125: - Must verify implementation status",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] er Requirements**",
        "body": "## REVIEW Item\n\n**Description**: er Requirements**\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 122  \n**Priority**: medium  \n\n### Context\n```text\n     119: - [ ] Links are valid and up-to-date\n     120: - [ ] Implementation status is accurate\n     121: \n>>>  122: ### **Reviewer Requirements**\n     123: - Must be familiar with the feature being documented\n     124: - Must test all examples and commands\n     125: - Must verify implementation status\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 158,
        "text": "affects production systems",
        "type": "BUG",
        "context": "     155: ### **Emergency Fixes**\n     156: Emergency fixes may bypass documentation requirements if:\n     157: - Security vulnerability requires immediate fix\n>>>  158: - Critical bug affects production systems\n     159: - Documentation update is scheduled within 24 hours\n     160: \n     161: ### **Experimental Features**",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[BUG] affects production systems",
        "body": "## BUG Item\n\n**Description**: affects production systems\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 158  \n**Priority**: high  \n\n### Context\n```text\n     155: ### **Emergency Fixes**\n     156: Emergency fixes may bypass documentation requirements if:\n     157: - Security vulnerability requires immediate fix\n>>>  158: - Critical bug affects production systems\n     159: - Documentation update is scheduled within 24 hours\n     160: \n     161: ### **Experimental Features**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 171,
        "text": "drift prevention policy",
        "type": "REVIEW",
        "context": "     168: \n     169: ### **New Team Members**\n     170: - Must complete documentation standards training\n>>>  171: - Must review drift prevention policy\n     172: - Must understand audit badge system\n     173: - Must practice documentation review process\n     174: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] drift prevention policy",
        "body": "## REVIEW Item\n\n**Description**: drift prevention policy\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 171  \n**Priority**: medium  \n\n### Context\n```text\n     168: \n     169: ### **New Team Members**\n     170: - Must complete documentation standards training\n>>>  171: - Must review drift prevention policy\n     172: - Must understand audit badge system\n     173: - Must practice documentation review process\n     174: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 173,
        "text": "process",
        "type": "REVIEW",
        "context": "     170: - Must complete documentation standards training\n     171: - Must review drift prevention policy\n     172: - Must understand audit badge system\n>>>  173: - Must practice documentation review process\n     174: \n     175: ### **Ongoing Training**\n     176: - Monthly documentation best practices sessions",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] process",
        "body": "## REVIEW Item\n\n**Description**: process\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 173  \n**Priority**: medium  \n\n### Context\n```text\n     170: - Must complete documentation standards training\n     171: - Must review drift prevention policy\n     172: - Must understand audit badge system\n>>>  173: - Must practice documentation review process\n     174: \n     175: ### **Ongoing Training**\n     176: - Monthly documentation best practices sessions\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md",
        "line": 224,
        "text": "**: 2025-11-28",
        "type": "REVIEW",
        "context": "     221: \n     222: **Policy Version**: 1.0  \n     223: **Last Updated**: 2025-10-28  \n>>>  224: **Next Review**: 2025-11-28  \n     225: **Approved By**: Engineering Leadership  \n     226: \n     227: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] **: 2025-11-28",
        "body": "## REVIEW Item\n\n**Description**: **: 2025-11-28\n\n**File**: `.\\docs\\POLICIES\\DRIFT_PREVENTION_POLICY.md`  \n**Line**: 224  \n**Priority**: medium  \n\n### Context\n```text\n     221: \n     222: **Policy Version**: 1.0  \n     223: **Last Updated**: 2025-10-28  \n>>>  224: **Next Review**: 2025-11-28  \n     225: **Approved By**: Engineering Leadership  \n     226: \n     227: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 34,
        "text": "Fixes** \u2705 **COMPLETED**",
        "type": "BUG",
        "context": "      31:   - Testing documentation created\n      32:   - Integration testing framework ready\n      33: \n>>>   34: ### **2. Quality Assurance & Bug Fixes** \u2705 **COMPLETED**\n      35: - **Status**: Complete\n      36: - **Deliverables**:\n      37:   - Comprehensive QA checklist created",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] Fixes** \u2705 **COMPLETED**",
        "body": "## BUG Item\n\n**Description**: Fixes** \u2705 **COMPLETED**\n\n**File**: `.\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md`  \n**Line**: 34  \n**Priority**: high  \n\n### Context\n```text\n      31:   - Testing documentation created\n      32:   - Integration testing framework ready\n      33: \n>>>   34: ### **2. Quality Assurance & Bug Fixes** \u2705 **COMPLETED**\n      35: - **Status**: Complete\n      36: - **Deliverables**:\n      37:   - Comprehensive QA checklist created\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 38,
        "text": "tracking system established",
        "type": "BUG",
        "context": "      35: - **Status**: Complete\n      36: - **Deliverables**:\n      37:   - Comprehensive QA checklist created\n>>>   38:   - Bug tracking system established\n      39:   - Quality standards documented\n      40:   - Testing protocols implemented\n      41: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] tracking system established",
        "body": "## BUG Item\n\n**Description**: tracking system established\n\n**File**: `.\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md`  \n**Line**: 38  \n**Priority**: medium  \n\n### Context\n```text\n      35: - **Status**: Complete\n      36: - **Deliverables**:\n      37:   - Comprehensive QA checklist created\n>>>   38:   - Bug tracking system established\n      39:   - Quality standards documented\n      40:   - Testing protocols implemented\n      41: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 95,
        "text": "& Delivery** \u2705 **COMPLETED**",
        "type": "REVIEW",
        "context": "      92:   - User onboarding materials created\n      93:   - Launch materials prepared\n      94: \n>>>   95: ### **9. Final Documentation Review & Delivery** \u2705 **COMPLETED**\n      96: - **Status**: Complete\n      97: - **Deliverables**:\n      98:   - All documentation reviewed and finalized",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] & Delivery** \u2705 **COMPLETED**",
        "body": "## REVIEW Item\n\n**Description**: & Delivery** \u2705 **COMPLETED**\n\n**File**: `.\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md`  \n**Line**: 95  \n**Priority**: medium  \n\n### Context\n```text\n      92:   - User onboarding materials created\n      93:   - Launch materials prepared\n      94: \n>>>   95: ### **9. Final Documentation Review & Delivery** \u2705 **COMPLETED**\n      96: - **Status**: Complete\n      97: - **Deliverables**:\n      98:   - All documentation reviewed and finalized\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 98,
        "text": "ed and finalized",
        "type": "REVIEW",
        "context": "      95: ### **9. Final Documentation Review & Delivery** \u2705 **COMPLETED**\n      96: - **Status**: Complete\n      97: - **Deliverables**:\n>>>   98:   - All documentation reviewed and finalized\n      99:   - Delivery readiness assessment completed\n     100:   - Final quality assurance passed\n     101:   - Documentation delivery confirmed",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ed and finalized",
        "body": "## REVIEW Item\n\n**Description**: ed and finalized\n\n**File**: `.\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md`  \n**Line**: 98  \n**Priority**: medium  \n\n### Context\n```text\n      95: ### **9. Final Documentation Review & Delivery** \u2705 **COMPLETED**\n      96: - **Status**: Complete\n      97: - **Deliverables**:\n>>>   98:   - All documentation reviewed and finalized\n      99:   - Delivery readiness assessment completed\n     100:   - Final quality assurance passed\n     101:   - Documentation delivery confirmed\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 199,
        "text": "and updates",
        "type": "REVIEW",
        "context": "     196: \n     197: ### **Justine (CPOO) - Product Integration Points**\n     198: - \u2705 **Testing Framework**: Ready for execution\n>>>  199: - \u2705 **Documentation**: Ready for review and updates\n     200: - \u2705 **Team Coordination**: Ready for implementation\n     201: - \u2705 **Quality Assurance**: Ready for execution\n     202: - \u2705 **Launch Preparation**: Ready for coordination",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] and updates",
        "body": "## REVIEW Item\n\n**Description**: and updates\n\n**File**: `.\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md`  \n**Line**: 199  \n**Priority**: medium  \n\n### Context\n```text\n     196: \n     197: ### **Justine (CPOO) - Product Integration Points**\n     198: - \u2705 **Testing Framework**: Ready for execution\n>>>  199: - \u2705 **Documentation**: Ready for review and updates\n     200: - \u2705 **Team Coordination**: Ready for implementation\n     201: - \u2705 **Quality Assurance**: Ready for execution\n     202: - \u2705 **Launch Preparation**: Ready for coordination\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 222,
        "text": "fix procedures ready",
        "type": "BUG",
        "context": "     219: \n     220: ### **Weekend, October 28-29, 2025**\n     221: - \u2705 **Final Integration**: End-to-end testing protocols ready\n>>>  222: - \u2705 **Quality Assurance**: Final QA and bug fix procedures ready\n     223: - \u2705 **Launch Preparation**: Launch coordination and materials ready\n     224: \n     225: ### **Monday, October 30, 2025**",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] fix procedures ready",
        "body": "## BUG Item\n\n**Description**: fix procedures ready\n\n**File**: `.\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md`  \n**Line**: 222  \n**Priority**: high  \n\n### Context\n```text\n     219: \n     220: ### **Weekend, October 28-29, 2025**\n     221: - \u2705 **Final Integration**: End-to-end testing protocols ready\n>>>  222: - \u2705 **Quality Assurance**: Final QA and bug fix procedures ready\n     223: - \u2705 **Launch Preparation**: Launch coordination and materials ready\n     224: \n     225: ### **Monday, October 30, 2025**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md",
        "line": 268,
        "text": "fixes",
        "type": "BUG",
        "context": "     265: - **Oct 23**: Foundation integration and setup\n     266: - **Oct 24-25**: Core feature integration\n     267: - **Oct 26-27**: Final integration and testing\n>>>  268: - **Oct 28-29**: Quality assurance and bug fixes\n     269: - **Oct 30**: Final delivery and launch\n     270: \n     271: ---",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] fixes",
        "body": "## BUG Item\n\n**Description**: fixes\n\n**File**: `.\\docs\\TEAM\\CPOO_DELIVERY_SUMMARY.md`  \n**Line**: 268  \n**Priority**: high  \n\n### Context\n```text\n     265: - **Oct 23**: Foundation integration and setup\n     266: - **Oct 24-25**: Core feature integration\n     267: - **Oct 26-27**: Final integration and testing\n>>>  268: - **Oct 28-29**: Quality assurance and bug fixes\n     269: - **Oct 30**: Final delivery and launch\n     270: \n     271: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\CPOO_INTEGRATION_GUIDE.md",
        "line": 294,
        "text": "fixes",
        "type": "BUG",
        "context": "     291: ### **Final Week Timeline**\n     292: - **Oct 23-25**: Complete remaining development\n     293: - **Oct 26-27**: Integration and testing\n>>>  294: - **Oct 28-29**: Final QA and bug fixes\n     295: - **Oct 30**: Delivery\n     296: \n     297: ---",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] fixes",
        "body": "## BUG Item\n\n**Description**: fixes\n\n**File**: `.\\docs\\TEAM\\CPOO_INTEGRATION_GUIDE.md`  \n**Line**: 294  \n**Priority**: high  \n\n### Context\n```text\n     291: ### **Final Week Timeline**\n     292: - **Oct 23-25**: Complete remaining development\n     293: - **Oct 26-27**: Integration and testing\n>>>  294: - **Oct 28-29**: Final QA and bug fixes\n     295: - **Oct 30**: Delivery\n     296: \n     297: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 218,
        "text": "logging",
        "type": "BUG",
        "context": "     215: # Run in development mode\n     216: python -m hyperkit_agent.cli.main --dev\n     217: \n>>>  218: # Run with debug logging\n     219: PYTHONPATH=. python -m hyperkit_agent.cli.main --debug\n     220: ```\n     221: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] logging",
        "body": "## BUG Item\n\n**Description**: logging\n\n**File**: `.\\docs\\TEAM\\DEVELOPER_GUIDE.md`  \n**Line**: 218  \n**Priority**: medium  \n\n### Context\n```text\n     215: # Run in development mode\n     216: python -m hyperkit_agent.cli.main --dev\n     217: \n>>>  218: # Run with debug logging\n     219: PYTHONPATH=. python -m hyperkit_agent.cli.main --debug\n     220: ```\n     221: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 256,
        "text": "Guidelines**",
        "type": "REVIEW",
        "context": "     253: 6. Update documentation\n     254: 7. Submit pull request\n     255: \n>>>  256: ### **Code Review Guidelines**\n     257: - Review code for correctness\n     258: - Check for security issues\n     259: - Ensure proper error handling",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] Guidelines**",
        "body": "## REVIEW Item\n\n**Description**: Guidelines**\n\n**File**: `.\\docs\\TEAM\\DEVELOPER_GUIDE.md`  \n**Line**: 256  \n**Priority**: medium  \n\n### Context\n```text\n     253: 6. Update documentation\n     254: 7. Submit pull request\n     255: \n>>>  256: ### **Code Review Guidelines**\n     257: - Review code for correctness\n     258: - Check for security issues\n     259: - Ensure proper error handling\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 257,
        "text": "code for correctness",
        "type": "REVIEW",
        "context": "     254: 7. Submit pull request\n     255: \n     256: ### **Code Review Guidelines**\n>>>  257: - Review code for correctness\n     258: - Check for security issues\n     259: - Ensure proper error handling\n     260: - Verify test coverage",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] code for correctness",
        "body": "## REVIEW Item\n\n**Description**: code for correctness\n\n**File**: `.\\docs\\TEAM\\DEVELOPER_GUIDE.md`  \n**Line**: 257  \n**Priority**: medium  \n\n### Context\n```text\n     254: 7. Submit pull request\n     255: \n     256: ### **Code Review Guidelines**\n>>>  257: - Review code for correctness\n     258: - Check for security issues\n     259: - Ensure proper error handling\n     260: - Verify test coverage\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 263,
        "text": "ging",
        "type": "BUG",
        "context": "     260: - Verify test coverage\n     261: - Check documentation updates\n     262: \n>>>  263: ## \ud83d\udc1b Debugging\n     264: \n     265: ### **Common Issues**\n     266: - **Import Errors**: Check PYTHONPATH and virtual environment",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] ging",
        "body": "## BUG Item\n\n**Description**: ging\n\n**File**: `.\\docs\\TEAM\\DEVELOPER_GUIDE.md`  \n**Line**: 263  \n**Priority**: medium  \n\n### Context\n```text\n     260: - Verify test coverage\n     261: - Check documentation updates\n     262: \n>>>  263: ## \ud83d\udc1b Debugging\n     264: \n     265: ### **Common Issues**\n     266: - **Import Errors**: Check PYTHONPATH and virtual environment\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 271,
        "text": "Tools**",
        "type": "BUG",
        "context": "     268: - **Network Issues**: Check RPC endpoints and connectivity\n     269: - **API Issues**: Verify API keys and rate limits\n     270: \n>>>  271: ### **Debug Tools**\n     272: ```bash\n     273: # Enable debug logging\n     274: export LOG_LEVEL=DEBUG",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] Tools**",
        "body": "## BUG Item\n\n**Description**: Tools**\n\n**File**: `.\\docs\\TEAM\\DEVELOPER_GUIDE.md`  \n**Line**: 271  \n**Priority**: medium  \n\n### Context\n```text\n     268: - **Network Issues**: Check RPC endpoints and connectivity\n     269: - **API Issues**: Verify API keys and rate limits\n     270: \n>>>  271: ### **Debug Tools**\n     272: ```bash\n     273: # Enable debug logging\n     274: export LOG_LEVEL=DEBUG\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\DEVELOPER_GUIDE.md",
        "line": 273,
        "text": "logging",
        "type": "BUG",
        "context": "     270: \n     271: ### **Debug Tools**\n     272: ```bash\n>>>  273: # Enable debug logging\n     274: export LOG_LEVEL=DEBUG\n     275: \n     276: # Run with verbose output",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] logging",
        "body": "## BUG Item\n\n**Description**: logging\n\n**File**: `.\\docs\\TEAM\\DEVELOPER_GUIDE.md`  \n**Line**: 273  \n**Priority**: medium  \n\n### Context\n```text\n     270: \n     271: ### **Debug Tools**\n     272: ```bash\n>>>  273: # Enable debug logging\n     274: export LOG_LEVEL=DEBUG\n     275: \n     276: # Run with verbose output\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\ENVIRONMENT_SETUP.md",
        "line": 89,
        "text": "**: If Foundry is not installed, the agent will run in simulation mode (no actual deployment).",
        "type": "NOTE",
        "context": "      86: # Should output: /home/user/.foundry/bin/forge (Linux/Mac) or C:\\Program Files\\Foundry\\bin\\forge.exe (Windows)\n      87: ```\n      88: \n>>>   89: **Note**: If Foundry is not installed, the agent will run in simulation mode (no actual deployment).\n      90: \n      91: ## \ud83d\udd11 **REQUIRED API KEYS**\n      92: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[NOTE] **: If Foundry is not installed, the agent will run in simulation mode (no actua...",
        "body": "## NOTE Item\n\n**Description**: **: If Foundry is not installed, the agent will run in simulation mode (no actual deployment).\n\n**File**: `.\\docs\\TEAM\\ENVIRONMENT_SETUP.md`  \n**Line**: 89  \n**Priority**: high  \n\n### Context\n```text\n      86: # Should output: /home/user/.foundry/bin/forge (Linux/Mac) or C:\\Program Files\\Foundry\\bin\\forge.exe (Windows)\n      87: ```\n      88: \n>>>   89: **Note**: If Foundry is not installed, the agent will run in simulation mode (no actual deployment).\n      90: \n      91: ## \ud83d\udd11 **REQUIRED API KEYS**\n      92: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\ENVIRONMENT_SETUP.md",
        "line": 223,
        "text": "**: No Local REST API plugin needed - MCP Docker handles all Obsidian access.",
        "type": "NOTE",
        "context": "     220: - **OBSIDIAN_MCP_API_KEY** - Your Obsidian API key (for MCP Docker)\n     221: - **OBSIDIAN_HOST=host.docker.internal** - Docker host configuration\n     222: \n>>>  223: **Note**: No Local REST API plugin needed - MCP Docker handles all Obsidian access.\n     224: \n     225: ### **4. Start MCP Docker Container**\n     226: ```bash",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[NOTE] **: No Local REST API plugin needed - MCP Docker handles all Obsidian access.",
        "body": "## NOTE Item\n\n**Description**: **: No Local REST API plugin needed - MCP Docker handles all Obsidian access.\n\n**File**: `.\\docs\\TEAM\\ENVIRONMENT_SETUP.md`  \n**Line**: 223  \n**Priority**: medium  \n\n### Context\n```text\n     220: - **OBSIDIAN_MCP_API_KEY** - Your Obsidian API key (for MCP Docker)\n     221: - **OBSIDIAN_HOST=host.docker.internal** - Docker host configuration\n     222: \n>>>  223: **Note**: No Local REST API plugin needed - MCP Docker handles all Obsidian access.\n     224: \n     225: ### **4. Start MCP Docker Container**\n     226: ```bash\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\ENVIRONMENT_SETUP.md",
        "line": 305,
        "text": "=false",
        "type": "BUG",
        "context": "     302: # ============================================================================\n     303: LOG_LEVEL=INFO\n     304: ENVIRONMENT=development\n>>>  305: DEBUG=false\n     306: TEST_MODE=true\n     307: ```\n     308: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] =false",
        "body": "## BUG Item\n\n**Description**: =false\n\n**File**: `.\\docs\\TEAM\\ENVIRONMENT_SETUP.md`  \n**Line**: 305  \n**Priority**: medium  \n\n### Context\n```text\n     302: # ============================================================================\n     303: LOG_LEVEL=INFO\n     304: ENVIRONMENT=development\n>>>  305: DEBUG=false\n     306: TEST_MODE=true\n     307: ```\n     308: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\ENVIRONMENT_SETUP.md",
        "line": 456,
        "text": "the [Documentation](https://github.com/JustineDevs/Hyperkit-Agent#readme)",
        "type": "REVIEW",
        "context": "     453: ### **Getting Help**\n     454: \n     455: - Check the [Issues](https://github.com/JustineDevs/Hyperkit-Agent/issues) page\n>>>  456: - Review the [Documentation](https://github.com/JustineDevs/Hyperkit-Agent#readme)\n     457: - Contact support: [team@hyperionkit.xyz](mailto:team@hyperionkit.xyz)\n     458: \n     459: ---",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] the [Documentation](https://github.com/JustineDevs/Hyperkit-Agent#readme)",
        "body": "## REVIEW Item\n\n**Description**: the [Documentation](https://github.com/JustineDevs/Hyperkit-Agent#readme)\n\n**File**: `.\\docs\\TEAM\\ENVIRONMENT_SETUP.md`  \n**Line**: 456  \n**Priority**: medium  \n\n### Context\n```text\n     453: ### **Getting Help**\n     454: \n     455: - Check the [Issues](https://github.com/JustineDevs/Hyperkit-Agent/issues) page\n>>>  456: - Review the [Documentation](https://github.com/JustineDevs/Hyperkit-Agent#readme)\n     457: - Contact support: [team@hyperionkit.xyz](mailto:team@hyperionkit.xyz)\n     458: \n     459: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\INTEGRATION_REPORT.md",
        "line": 394,
        "text": "Audit Results**: Always check security issues",
        "type": "REVIEW",
        "context": "     391: ### For Production Use\n     392: 1. **Install Foundry**: Required for real deployment\n     393: 2. **Use --allow-insecure**: For automated deployments\n>>>  394: 3. **Review Audit Results**: Always check security issues\n     395: 4. **Test on Testnets**: Before mainnet deployment\n     396: 5. **Monitor Gas Costs**: For deployment optimization\n     397: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] Audit Results**: Always check security issues",
        "body": "## REVIEW Item\n\n**Description**: Audit Results**: Always check security issues\n\n**File**: `.\\docs\\TEAM\\INTEGRATION_REPORT.md`  \n**Line**: 394  \n**Priority**: high  \n\n### Context\n```text\n     391: ### For Production Use\n     392: 1. **Install Foundry**: Required for real deployment\n     393: 2. **Use --allow-insecure**: For automated deployments\n>>>  394: 3. **Review Audit Results**: Always check security issues\n     395: 4. **Test on Testnets**: Before mainnet deployment\n     396: 5. **Monitor Gas Costs**: For deployment optimization\n     397: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "security"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\INTEGRATION_REPORT.md",
        "line": 400,
        "text": "Generated Contracts**: Before deployment",
        "type": "REVIEW",
        "context": "     397: \n     398: ### For Development\n     399: 1. **Use Interactive Mode**: For learning and testing\n>>>  400: 2. **Review Generated Contracts**: Before deployment\n     401: 3. **Test Different Prompts**: To understand capabilities\n     402: 4. **Use Simulation Mode**: When Foundry unavailable\n     403: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] Generated Contracts**: Before deployment",
        "body": "## REVIEW Item\n\n**Description**: Generated Contracts**: Before deployment\n\n**File**: `.\\docs\\TEAM\\INTEGRATION_REPORT.md`  \n**Line**: 400  \n**Priority**: high  \n\n### Context\n```text\n     397: \n     398: ### For Development\n     399: 1. **Use Interactive Mode**: For learning and testing\n>>>  400: 2. **Review Generated Contracts**: Before deployment\n     401: 3. **Test Different Prompts**: To understand capabilities\n     402: 4. **Use Simulation Mode**: When Foundry unavailable\n     403: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 74,
        "text": "fixes and quality assurance**",
        "type": "BUG",
        "context": "      71: - [ ] **Test cross-browser compatibility**\n      72: \n      73: #### **Justine (CPOO) - Coordination Tasks**\n>>>   74: - [ ] **Bug fixes and quality assurance**\n      75: - [ ] **API references and guides**\n      76: - [ ] **Integration testing coordination**\n      77: - [ ] **Progress tracking and reporting**",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] fixes and quality assurance**",
        "body": "## BUG Item\n\n**Description**: fixes and quality assurance**\n\n**File**: `.\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md`  \n**Line**: 74  \n**Priority**: high  \n\n### Context\n```text\n      71: - [ ] **Test cross-browser compatibility**\n      72: \n      73: #### **Justine (CPOO) - Coordination Tasks**\n>>>   74: - [ ] **Bug fixes and quality assurance**\n      75: - [ ] **API references and guides**\n      76: - [ ] **Integration testing coordination**\n      77: - [ ] **Progress tracking and reporting**\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 147,
        "text": "fixes**",
        "type": "BUG",
        "context": "     144: \n     145: #### **All Team Members**\n     146: - [ ] **Final integration testing**\n>>>  147: - [ ] **Quality assurance and bug fixes**\n     148: - [ ] **Performance optimization**\n     149: - [ ] **Security review**\n     150: ",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] fixes**",
        "body": "## BUG Item\n\n**Description**: fixes**\n\n**File**: `.\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md`  \n**Line**: 147  \n**Priority**: high  \n\n### Context\n```text\n     144: \n     145: #### **All Team Members**\n     146: - [ ] **Final integration testing**\n>>>  147: - [ ] **Quality assurance and bug fixes**\n     148: - [ ] **Performance optimization**\n     149: - [ ] **Security review**\n     150: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 172,
        "text": "overnight progress",
        "type": "REVIEW",
        "context": "     169: \n     170: ### **Integration Checkpoints**\n     171: - **Morning Checkpoint**: 10:00 AM\n>>>  172:   - Review overnight progress\n     173:   - Address any blockers\n     174:   - Confirm daily priorities\n     175: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] overnight progress",
        "body": "## REVIEW Item\n\n**Description**: overnight progress\n\n**File**: `.\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md`  \n**Line**: 172  \n**Priority**: medium  \n\n### Context\n```text\n     169: \n     170: ### **Integration Checkpoints**\n     171: - **Morning Checkpoint**: 10:00 AM\n>>>  172:   - Review overnight progress\n     173:   - Address any blockers\n     174:   - Confirm daily priorities\n     175: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 181,
        "text": "**: 6:00 PM",
        "type": "REVIEW",
        "context": "     178:   - Integration status\n     179:   - Evening priorities\n     180: \n>>>  181: - **End-of-Day Review**: 6:00 PM\n     182:   - Daily accomplishments\n     183:   - Tomorrow's priorities\n     184:   - Blocker identification",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] **: 6:00 PM",
        "body": "## REVIEW Item\n\n**Description**: **: 6:00 PM\n\n**File**: `.\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md`  \n**Line**: 181  \n**Priority**: medium  \n\n### Context\n```text\n     178:   - Integration status\n     179:   - Evening priorities\n     180: \n>>>  181: - **End-of-Day Review**: 6:00 PM\n     182:   - Daily accomplishments\n     183:   - Tomorrow's priorities\n     184:   - Blocker identification\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 339,
        "text": "previous day's progress",
        "type": "REVIEW",
        "context": "     336: ## \ud83d\udccb **DAILY CHECKLIST**\n     337: \n     338: ### **Morning Checklist (9:00 AM)**\n>>>  339: - [ ] Review previous day's progress\n     340: - [ ] Confirm today's priorities\n     341: - [ ] Check for any blockers\n     342: - [ ] Update team on status",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] previous day's progress",
        "body": "## REVIEW Item\n\n**Description**: previous day's progress\n\n**File**: `.\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md`  \n**Line**: 339  \n**Priority**: medium  \n\n### Context\n```text\n     336: ## \ud83d\udccb **DAILY CHECKLIST**\n     337: \n     338: ### **Morning Checklist (9:00 AM)**\n>>>  339: - [ ] Review previous day's progress\n     340: - [ ] Confirm today's priorities\n     341: - [ ] Check for any blockers\n     342: - [ ] Update team on status\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 346,
        "text": "morning progress",
        "type": "REVIEW",
        "context": "     343: - [ ] Begin development work\n     344: \n     345: ### **Afternoon Checklist (3:00 PM)**\n>>>  346: - [ ] Review morning progress\n     347: - [ ] Check integration status\n     348: - [ ] Address any issues\n     349: - [ ] Plan evening work",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] morning progress",
        "body": "## REVIEW Item\n\n**Description**: morning progress\n\n**File**: `.\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md`  \n**Line**: 346  \n**Priority**: medium  \n\n### Context\n```text\n     343: - [ ] Begin development work\n     344: \n     345: ### **Afternoon Checklist (3:00 PM)**\n>>>  346: - [ ] Review morning progress\n     347: - [ ] Check integration status\n     348: - [ ] Address any issues\n     349: - [ ] Plan evening work\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md",
        "line": 375,
        "text": "fixes",
        "type": "BUG",
        "context": "     372: ### **Final Week Timeline**\n     373: - **Oct 23-25**: Complete remaining development\n     374: - **Oct 26-27**: Integration and testing\n>>>  375: - **Oct 28-29**: Final QA and bug fixes\n     376: - **Oct 30**: Delivery\n     377: \n     378: ---",
        "priority": "high",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      },
      "issue_template": {
        "title": "[BUG] fixes",
        "body": "## BUG Item\n\n**Description**: fixes\n\n**File**: `.\\docs\\TEAM\\TEAM_COORDINATION_GUIDE.md`  \n**Line**: 375  \n**Priority**: high  \n\n### Context\n```text\n     372: ### **Final Week Timeline**\n     373: - **Oct 23-25**: Complete remaining development\n     374: - **Oct 26-27**: Integration and testing\n>>>  375: - **Oct 28-29**: Final QA and bug fixes\n     376: - **Oct 30**: Delivery\n     377: \n     378: ---\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:high",
          "bug"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TECHNICAL_DOCUMENTATION.md",
        "line": 608,
        "text": "Mode",
        "type": "BUG",
        "context": "     605: pip install slither-analyzer\n     606: ```\n     607: \n>>>  608: ### Debug Mode\n     609: \n     610: Enable debug logging for troubleshooting:\n     611: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] Mode",
        "body": "## BUG Item\n\n**Description**: Mode\n\n**File**: `.\\docs\\TEAM\\TECHNICAL_DOCUMENTATION.md`  \n**Line**: 608  \n**Priority**: medium  \n\n### Context\n```text\n     605: pip install slither-analyzer\n     606: ```\n     607: \n>>>  608: ### Debug Mode\n     609: \n     610: Enable debug logging for troubleshooting:\n     611: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\TECHNICAL_DOCUMENTATION.md",
        "line": 610,
        "text": "logging for troubleshooting:",
        "type": "BUG",
        "context": "     607: \n     608: ### Debug Mode\n     609: \n>>>  610: Enable debug logging for troubleshooting:\n     611: \n     612: ```bash\n     613: export LOG_LEVEL=DEBUG",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] logging for troubleshooting:",
        "body": "## BUG Item\n\n**Description**: logging for troubleshooting:\n\n**File**: `.\\docs\\TEAM\\TECHNICAL_DOCUMENTATION.md`  \n**Line**: 610  \n**Priority**: medium  \n\n### Context\n```text\n     607: \n     608: ### Debug Mode\n     609: \n>>>  610: Enable debug logging for troubleshooting:\n     611: \n     612: ```bash\n     613: export LOG_LEVEL=DEBUG\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\WORKFLOW_BEHAVIOR_REPORT.md",
        "line": 237,
        "text": "audit results** before proceeding with high-severity issues",
        "type": "REVIEW",
        "context": "     234: \n     235: ### For Production Use\n     236: 1. **Always use `--allow-insecure` flag** for automated deployments\n>>>  237: 2. **Review audit results** before proceeding with high-severity issues\n     238: 3. **Test on testnets** before mainnet deployment\n     239: 4. **Monitor gas costs** for deployment optimization\n     240: ",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] audit results** before proceeding with high-severity issues",
        "body": "## REVIEW Item\n\n**Description**: audit results** before proceeding with high-severity issues\n\n**File**: `.\\docs\\TEAM\\WORKFLOW_BEHAVIOR_REPORT.md`  \n**Line**: 237  \n**Priority**: medium  \n\n### Context\n```text\n     234: \n     235: ### For Production Use\n     236: 1. **Always use `--allow-insecure` flag** for automated deployments\n>>>  237: 2. **Review audit results** before proceeding with high-severity issues\n     238: 3. **Test on testnets** before mainnet deployment\n     239: 4. **Monitor gas costs** for deployment optimization\n     240: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\docs\\TEAM\\WORKFLOW_BEHAVIOR_REPORT.md",
        "line": 243,
        "text": "generated contracts** before deployment",
        "type": "REVIEW",
        "context": "     240: \n     241: ### For Development\n     242: 1. **Use interactive mode** for learning and testing\n>>>  243: 2. **Review generated contracts** before deployment\n     244: 3. **Test different prompts** to understand capabilities\n     245: 4. **Use simulation mode** when Foundry is not available\n     246: ",
        "priority": "high",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] generated contracts** before deployment",
        "body": "## REVIEW Item\n\n**Description**: generated contracts** before deployment\n\n**File**: `.\\docs\\TEAM\\WORKFLOW_BEHAVIOR_REPORT.md`  \n**Line**: 243  \n**Priority**: high  \n\n### Context\n```text\n     240: \n     241: ### For Development\n     242: 1. **Use interactive mode** for learning and testing\n>>>  243: 2. **Review generated contracts** before deployment\n     244: 3. **Test different prompts** to understand capabilities\n     245: 4. **Use simulation mode** when Foundry is not available\n     246: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "maintenance",
          "todo",
          "documentation",
          "priority:high"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\audit_badge_system.py",
        "line": 80,
        "text": ".md',",
        "type": "TODO",
        "context": "      77:     skip_patterns = [\n      78:         'README.md',\n      79:         'CHANGELOG.md',\n>>>   80:         'TODO.md',\n      81:         'SECURITY.md',\n      82:         'CONTRIBUTING.md',\n      83:         'LICENSE',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] .md',",
        "body": "## TODO Item\n\n**Description**: .md',\n\n**File**: `.\\scripts\\audit_badge_system.py`  \n**Line**: 80  \n**Priority**: medium  \n\n### Context\n```text\n      77:     skip_patterns = [\n      78:         'README.md',\n      79:         'CHANGELOG.md',\n>>>   80:         'TODO.md',\n      81:         'SECURITY.md',\n      82:         'CONTRIBUTING.md',\n      83:         'LICENSE',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\audit_badge_system.py",
        "line": 274,
        "text": "all files with audit badges",
        "type": "REVIEW",
        "context": "     271:     report += f\"\"\"\n     272: ## Next Steps\n     273: \n>>>  274: 1. Review all files with audit badges\n     275: 2. Verify implementation status is accurate\n     276: 3. Update badges when features are implemented\n     277: 4. Integrate badge updates into CI/CD pipeline",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] all files with audit badges",
        "body": "## REVIEW Item\n\n**Description**: all files with audit badges\n\n**File**: `.\\scripts\\audit_badge_system.py`  \n**Line**: 274  \n**Priority**: medium  \n\n### Context\n```text\n     271:     report += f\"\"\"\n     272: ## Next Steps\n     273: \n>>>  274: 1. Review all files with audit badges\n     275: 2. Verify implementation status is accurate\n     276: 3. Update badges when features are implemented\n     277: 4. Integrate badge updates into CI/CD pipeline\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 53,
        "text": "s\"\"\"",
        "type": "TODO",
        "context": "      50:     return commands\n      51: \n      52: def check_command_implementation(cmd_file: Path) -> Dict[str, Any]:\n>>>   53:     \"\"\"Check if command is implemented or has TODOs\"\"\"\n      54:     \n      55:     try:\n      56:         content = cmd_file.read_text(encoding='utf-8')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s\"\"\"",
        "body": "## TODO Item\n\n**Description**: s\"\"\"\n\n**File**: `.\\scripts\\cli_command_inventory.py`  \n**Line**: 53  \n**Priority**: medium  \n\n### Context\n```text\n      50:     return commands\n      51: \n      52: def check_command_implementation(cmd_file: Path) -> Dict[str, Any]:\n>>>   53:     \"\"\"Check if command is implemented or has TODOs\"\"\"\n      54:     \n      55:     try:\n      56:         content = cmd_file.read_text(encoding='utf-8')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 58,
        "text": "s and check implementation",
        "type": "TODO",
        "context": "      55:     try:\n      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n>>>   58:         # Count TODOs and check implementation\n      59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s and check implementation",
        "body": "## TODO Item\n\n**Description**: s and check implementation\n\n**File**: `.\\scripts\\cli_command_inventory.py`  \n**Line**: 58  \n**Priority**: medium  \n\n### Context\n```text\n      55:     try:\n      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n>>>   58:         # Count TODOs and check implementation\n      59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 59,
        "text": "_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))",
        "type": "TODO",
        "context": "      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TODO] _count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))",
        "body": "## TODO Item\n\n**Description**: _count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n\n**File**: `.\\scripts\\cli_command_inventory.py`  \n**Line**: 59  \n**Priority**: high  \n\n### Context\n```text\n      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 59,
        "text": "|XXX', content, re.IGNORECASE))",
        "type": "FIXME",
        "context": "      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] |XXX', content, re.IGNORECASE))",
        "body": "## FIXME Item\n\n**Description**: |XXX', content, re.IGNORECASE))\n\n**File**: `.\\scripts\\cli_command_inventory.py`  \n**Line**: 59  \n**Priority**: medium  \n\n### Context\n```text\n      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 59,
        "text": "', content, re.IGNORECASE))",
        "type": "XXX",
        "context": "      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] ', content, re.IGNORECASE))",
        "body": "## XXX Item\n\n**Description**: ', content, re.IGNORECASE))\n\n**File**: `.\\scripts\\cli_command_inventory.py`  \n**Line**: 59  \n**Priority**: medium  \n\n### Context\n```text\n      56:         content = cmd_file.read_text(encoding='utf-8')\n      57:         \n      58:         # Count TODOs and check implementation\n>>>   59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n      62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 62,
        "text": "_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "type": "TODO",
        "context": "      59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n>>>   62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()\n      63:         \n      64:         return {\n      65:             \"implemented\": not is_stub,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()",
        "body": "## TODO Item\n\n**Description**: _count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()\n\n**File**: `.\\scripts\\cli_command_inventory.py`  \n**Line**: 62  \n**Priority**: medium  \n\n### Context\n```text\n      59:         todo_count = len(re.findall(r'TODO|FIXME|XXX', content, re.IGNORECASE))\n      60:         \n      61:         # Check if it's a stub\n>>>   62:         is_stub = todo_count > 5 or \"stub\" in content.lower() or \"not implemented\" in content.lower()\n      63:         \n      64:         return {\n      65:             \"implemented\": not is_stub,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 66,
        "text": "_count\": todo_count,",
        "type": "TODO",
        "context": "      63:         \n      64:         return {\n      65:             \"implemented\": not is_stub,\n>>>   66:             \"todo_count\": todo_count,\n      67:             \"is_stub\": is_stub,\n      68:             \"lines\": len(content.split('\\n'))\n      69:         }",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _count\": todo_count,",
        "body": "## TODO Item\n\n**Description**: _count\": todo_count,\n\n**File**: `.\\scripts\\cli_command_inventory.py`  \n**Line**: 66  \n**Priority**: medium  \n\n### Context\n```text\n      63:         \n      64:         return {\n      65:             \"implemented\": not is_stub,\n>>>   66:             \"todo_count\": todo_count,\n      67:             \"is_stub\": is_stub,\n      68:             \"lines\": len(content.split('\\n'))\n      69:         }\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\cli_command_inventory.py",
        "line": 135,
        "text": "_count\": 0}",
        "type": "TODO",
        "context": "     132:     for group_name, group_info in commands[\"groups\"].items():\n     133:         cmd_file = cli_dir / f\"{group_name}.py\"\n     134:         \n>>>  135:         impl_status = check_command_implementation(cmd_file) if cmd_file.exists() else {\"implemented\": False, \"todo_count\": 0}\n     136:         test_coverage = check_test_coverage(group_name)\n     137:         \n     138:         inventory[\"commands\"][group_name] = {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _count\": 0}",
        "body": "## TODO Item\n\n**Description**: _count\": 0}\n\n**File**: `.\\scripts\\cli_command_inventory.py`  \n**Line**: 135  \n**Priority**: medium  \n\n### Context\n```text\n     132:     for group_name, group_info in commands[\"groups\"].items():\n     133:         cmd_file = cli_dir / f\"{group_name}.py\"\n     134:         \n>>>  135:         impl_status = check_command_implementation(cmd_file) if cmd_file.exists() else {\"implemented\": False, \"todo_count\": 0}\n     136:         test_coverage = check_test_coverage(group_name)\n     137:         \n     138:         inventory[\"commands\"][group_name] = {\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\debug_deployment_error.py",
        "line": 143,
        "text": "Passing entire config dict instead of RPC URL!\")",
        "type": "BUG",
        "context": "     140:                     \n     141:                     # Check what's being passed\n     142:                     if \"self.config['networks']\" in line:\n>>>  143:                         print_error(\"\u274c FOUND BUG: Passing entire config dict instead of RPC URL!\")\n     144:                         print_warning(\"Should pass: rpc_url (string)\")\n     145:                         print_warning(\"Currently passing: self.config['networks'][network] (dict)\")\n     146:                     elif \"rpc_url\" in line:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] Passing entire config dict instead of RPC URL!\")",
        "body": "## BUG Item\n\n**Description**: Passing entire config dict instead of RPC URL!\")\n\n**File**: `.\\scripts\\debug_deployment_error.py`  \n**Line**: 143  \n**Priority**: medium  \n\n### Context\n```text\n     140:                     \n     141:                     # Check what's being passed\n     142:                     if \"self.config['networks']\" in line:\n>>>  143:                         print_error(\"\u274c FOUND BUG: Passing entire config dict instead of RPC URL!\")\n     144:                         print_warning(\"Should pass: rpc_url (string)\")\n     145:                         print_warning(\"Currently passing: self.config['networks'][network] (dict)\")\n     146:                     elif \"rpc_url\" in line:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\debug_deployment_error.py",
        "line": 191,
        "text": "Deployer expects 'config' dict, not 'rpc_url' string!\")",
        "type": "BUG",
        "context": "     188:         if len(param_names) > 1:\n     189:             second_param = param_names[1]\n     190:             if second_param == 'config':\n>>>  191:                 print_error(\"\u274c FOUND BUG: Deployer expects 'config' dict, not 'rpc_url' string!\")\n     192:             elif second_param == 'network':\n     193:                 print_success(\"\u2713 Deployer correctly expects 'network' string\")\n     194:             else:",
        "priority": "high",
        "labels": [
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] Deployer expects 'config' dict, not 'rpc_url' string!\")",
        "body": "## BUG Item\n\n**Description**: Deployer expects 'config' dict, not 'rpc_url' string!\")\n\n**File**: `.\\scripts\\debug_deployment_error.py`  \n**Line**: 191  \n**Priority**: high  \n\n### Context\n```text\n     188:         if len(param_names) > 1:\n     189:             second_param = param_names[1]\n     190:             if second_param == 'config':\n>>>  191:                 print_error(\"\u274c FOUND BUG: Deployer expects 'config' dict, not 'rpc_url' string!\")\n     192:             elif second_param == 'network':\n     193:                 print_success(\"\u2713 Deployer correctly expects 'network' string\")\n     194:             else:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\debug_deployment_error.py",
        "line": 381,
        "text": "analysis complete!{Colors.END}\\n\")",
        "type": "BUG",
        "context": "     378:     # Generate final report\n     379:     generate_report()\n     380:     \n>>>  381:     print(f\"\\n{Colors.BOLD}{Colors.GREEN}\u2705 Debug analysis complete!{Colors.END}\\n\")\n     382: \n     383: if __name__ == \"__main__\":\n     384:     main()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] analysis complete!{Colors.END}\\n\")",
        "body": "## BUG Item\n\n**Description**: analysis complete!{Colors.END}\\n\")\n\n**File**: `.\\scripts\\debug_deployment_error.py`  \n**Line**: 381  \n**Priority**: medium  \n\n### Context\n```text\n     378:     # Generate final report\n     379:     generate_report()\n     380:     \n>>>  381:     print(f\"\\n{Colors.BOLD}{Colors.GREEN}\u2705 Debug analysis complete!{Colors.END}\\n\")\n     382: \n     383: if __name__ == \"__main__\":\n     384:     main()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\doc_drift_audit.py",
        "line": 134,
        "text": "and update content\"",
        "type": "REVIEW",
        "context": "     131:                         \"pattern\": \"stale_file\",\n     132:                         \"age_days\": file_age.days,\n     133:                         \"severity\": \"low\",\n>>>  134:                         \"recommendation\": \"Review and update content\"\n     135:                     })\n     136:                 \n     137:                 content = md_file.read_text(encoding='utf-8', errors='ignore')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] and update content\"",
        "body": "## REVIEW Item\n\n**Description**: and update content\"\n\n**File**: `.\\scripts\\doc_drift_audit.py`  \n**Line**: 134  \n**Priority**: medium  \n\n### Context\n```text\n     131:                         \"pattern\": \"stale_file\",\n     132:                         \"age_days\": file_age.days,\n     133:                         \"severity\": \"low\",\n>>>  134:                         \"recommendation\": \"Review and update content\"\n     135:                     })\n     136:                 \n     137:                 content = md_file.read_text(encoding='utf-8', errors='ignore')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\doc_drift_audit.py",
        "line": 228,
        "text": "old files for updates\")",
        "type": "REVIEW",
        "context": "     225:         if medium_severity > 0:\n     226:             self.audit_results[\"recommendations\"].append(\"Medium priority: Update future-tense language and stale content\")\n     227:         if low_severity > 0:\n>>>  228:             self.audit_results[\"recommendations\"].append(\"Low priority: Review old files for updates\")\n     229:         \n     230:         if total_issues == 0:\n     231:             self.audit_results[\"recommendations\"].append(\"No drift detected - documentation is up to date!\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] old files for updates\")",
        "body": "## REVIEW Item\n\n**Description**: old files for updates\")\n\n**File**: `.\\scripts\\doc_drift_audit.py`  \n**Line**: 228  \n**Priority**: medium  \n\n### Context\n```text\n     225:         if medium_severity > 0:\n     226:             self.audit_results[\"recommendations\"].append(\"Medium priority: Update future-tense language and stale content\")\n     227:         if low_severity > 0:\n>>>  228:             self.audit_results[\"recommendations\"].append(\"Low priority: Review old files for updates\")\n     229:         \n     230:         if total_issues == 0:\n     231:             self.audit_results[\"recommendations\"].append(\"No drift detected - documentation is up to date!\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 3,
        "text": "to Issues Conversion Script",
        "type": "TODO",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n>>>    3: Focused TODO to Issues Conversion Script\n       4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] to Issues Conversion Script",
        "body": "## TODO Item\n\n**Description**: to Issues Conversion Script\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 3  \n**Priority**: medium  \n\n### Context\n```text\n       1: #!/usr/bin/env python3\n       2: \"\"\"\n>>>    3: Focused TODO to Issues Conversion Script\n       4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 4,
        "text": "/TBD sections and converts them into GitHub issues",
        "type": "TODO",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Focused TODO to Issues Conversion Script\n>>>    4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"\n       7: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] /TBD sections and converts them into GitHub issues",
        "body": "## TODO Item\n\n**Description**: /TBD sections and converts them into GitHub issues\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 4  \n**Priority**: medium  \n\n### Context\n```text\n       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Focused TODO to Issues Conversion Script\n>>>    4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"\n       7: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 4,
        "text": "sections and converts them into GitHub issues",
        "type": "TBD",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Focused TODO to Issues Conversion Script\n>>>    4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"\n       7: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] sections and converts them into GitHub issues",
        "body": "## TBD Item\n\n**Description**: sections and converts them into GitHub issues\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 4  \n**Priority**: medium  \n\n### Context\n```text\n       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Focused TODO to Issues Conversion Script\n>>>    4: Scans only our actual codebase for TODO/TBD sections and converts them into GitHub issues\n       5: Excludes external libraries and generated files\n       6: \"\"\"\n       7: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 35,
        "text": "s\"\"\"",
        "type": "TODO",
        "context": "      32:         }\n      33: \n      34: def should_scan_file(file_path: str) -> bool:\n>>>   35:     \"\"\"Determine if a file should be scanned for TODOs\"\"\"\n      36:     \n      37:     # Skip certain directories\n      38:     skip_dirs = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s\"\"\"",
        "body": "## TODO Item\n\n**Description**: s\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 35  \n**Priority**: medium  \n\n### Context\n```text\n      32:         }\n      33: \n      34: def should_scan_file(file_path: str) -> bool:\n>>>   35:     \"\"\"Determine if a file should be scanned for TODOs\"\"\"\n      36:     \n      37:     # Skip certain directories\n      38:     skip_dirs = [\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 87,
        "text": "s() -> List[Dict[str, Any]]:",
        "type": "TODO",
        "context": "      84:     \n      85:     return False\n      86: \n>>>   87: def scan_for_todos() -> List[Dict[str, Any]]:\n      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s() -> List[Dict[str, Any]]:",
        "body": "## TODO Item\n\n**Description**: s() -> List[Dict[str, Any]]:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 87  \n**Priority**: medium  \n\n### Context\n```text\n      84:     \n      85:     return False\n      86: \n>>>   87: def scan_for_todos() -> List[Dict[str, Any]]:\n      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 88,
        "text": "/TBD/FIXME markers in our actual code\"\"\"",
        "type": "TODO",
        "context": "      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TODO] /TBD/FIXME markers in our actual code\"\"\"",
        "body": "## TODO Item\n\n**Description**: /TBD/FIXME markers in our actual code\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 88  \n**Priority**: high  \n\n### Context\n```text\n      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 88,
        "text": "/FIXME markers in our actual code\"\"\"",
        "type": "TBD",
        "context": "      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TBD] /FIXME markers in our actual code\"\"\"",
        "body": "## TBD Item\n\n**Description**: /FIXME markers in our actual code\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 88  \n**Priority**: high  \n\n### Context\n```text\n      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 88,
        "text": "markers in our actual code\"\"\"",
        "type": "FIXME",
        "context": "      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] markers in our actual code\"\"\"",
        "body": "## FIXME Item\n\n**Description**: markers in our actual code\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 88  \n**Priority**: medium  \n\n### Context\n```text\n      85:     return False\n      86: \n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 90,
        "text": "_patterns = [",
        "type": "TODO",
        "context": "      87: def scan_for_todos() -> List[Dict[str, Any]]:\n      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n>>>   90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _patterns = [",
        "body": "## TODO Item\n\n**Description**: _patterns = [\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 90  \n**Priority**: medium  \n\n### Context\n```text\n      87: def scan_for_todos() -> List[Dict[str, Any]]:\n      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n>>>   90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 91,
        "text": "?\\s*(.+)',",
        "type": "TODO",
        "context": "      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n>>>   91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ?\\s*(.+)',",
        "body": "## TODO Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 91  \n**Priority**: medium  \n\n### Context\n```text\n      88:     \"\"\"Scan codebase for TODO/TBD/FIXME markers in our actual code\"\"\"\n      89:     \n      90:     todo_patterns = [\n>>>   91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 92,
        "text": "?\\s*(.+)',",
        "type": "TBD",
        "context": "      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n>>>   92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] ?\\s*(.+)',",
        "body": "## TBD Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 92  \n**Priority**: medium  \n\n### Context\n```text\n      89:     \n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n>>>   92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 93,
        "text": "?\\s*(.+)',",
        "type": "FIXME",
        "context": "      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n>>>   93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] ?\\s*(.+)',",
        "body": "## FIXME Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 93  \n**Priority**: medium  \n\n### Context\n```text\n      90:     todo_patterns = [\n      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n>>>   93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 94,
        "text": "?\\s*(.+)',",
        "type": "XXX",
        "context": "      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n>>>   94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] ?\\s*(.+)',",
        "body": "## XXX Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 94  \n**Priority**: medium  \n\n### Context\n```text\n      91:         r'TODO:?\\s*(.+)',\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n>>>   94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 95,
        "text": "?\\s*(.+)',",
        "type": "HACK",
        "context": "      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n>>>   95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[HACK] ?\\s*(.+)',",
        "body": "## HACK Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 95  \n**Priority**: medium  \n\n### Context\n```text\n      92:         r'TBD:?\\s*(.+)',\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n>>>   95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 96,
        "text": "?\\s*(.+)',",
        "type": "BUG",
        "context": "      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n>>>   96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] ?\\s*(.+)',",
        "body": "## BUG Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 96  \n**Priority**: medium  \n\n### Context\n```text\n      93:         r'FIXME:?\\s*(.+)',\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n>>>   96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 97,
        "text": "?\\s*(.+)',",
        "type": "NOTE",
        "context": "      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n>>>   97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[NOTE] ?\\s*(.+)',",
        "body": "## NOTE Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 97  \n**Priority**: medium  \n\n### Context\n```text\n      94:         r'XXX:?\\s*(.+)',\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n>>>   97:         r'NOTE:?\\s*(.+)',\n      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 98,
        "text": "?\\s*(.+)'",
        "type": "REVIEW",
        "context": "      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n>>>   98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     \n     101:     todos = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ?\\s*(.+)'",
        "body": "## REVIEW Item\n\n**Description**: ?\\s*(.+)'\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 98  \n**Priority**: medium  \n\n### Context\n```text\n      95:         r'HACK:?\\s*(.+)',\n      96:         r'BUG:?\\s*(.+)',\n      97:         r'NOTE:?\\s*(.+)',\n>>>   98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     \n     101:     todos = []\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 101,
        "text": "s = []",
        "type": "TODO",
        "context": "      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     \n>>>  101:     todos = []\n     102:     \n     103:     # Scan all files\n     104:     for root, dirs, files in os.walk('.'):",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s = []",
        "body": "## TODO Item\n\n**Description**: s = []\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 101  \n**Priority**: medium  \n\n### Context\n```text\n      98:         r'REVIEW:?\\s*(.+)'\n      99:     ]\n     100:     \n>>>  101:     todos = []\n     102:     \n     103:     # Scan all files\n     104:     for root, dirs, files in os.walk('.'):\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 120,
        "text": "patterns",
        "type": "TODO",
        "context": "     117:                     content = f.read()\n     118:                     lines = content.split('\\n')\n     119:                     \n>>>  120:                 # Check for TODO patterns\n     121:                 for line_num, line in enumerate(lines, 1):\n     122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] patterns",
        "body": "## TODO Item\n\n**Description**: patterns\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 120  \n**Priority**: medium  \n\n### Context\n```text\n     117:                     content = f.read()\n     118:                     lines = content.split('\\n')\n     119:                     \n>>>  120:                 # Check for TODO patterns\n     121:                 for line_num, line in enumerate(lines, 1):\n     122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 122,
        "text": "_patterns:",
        "type": "TODO",
        "context": "     119:                     \n     120:                 # Check for TODO patterns\n     121:                 for line_num, line in enumerate(lines, 1):\n>>>  122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n     125:                             todo_text = matches[0].strip()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _patterns:",
        "body": "## TODO Item\n\n**Description**: _patterns:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 122  \n**Priority**: medium  \n\n### Context\n```text\n     119:                     \n     120:                 # Check for TODO patterns\n     121:                 for line_num, line in enumerate(lines, 1):\n>>>  122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n     125:                             todo_text = matches[0].strip()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 125,
        "text": "_text = matches[0].strip()",
        "type": "TODO",
        "context": "     122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n>>>  125:                             todo_text = matches[0].strip()\n     126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n     127:                                 todos.append({\n     128:                                     'file': file_path,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text = matches[0].strip()",
        "body": "## TODO Item\n\n**Description**: _text = matches[0].strip()\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 125  \n**Priority**: medium  \n\n### Context\n```text\n     122:                     for pattern in todo_patterns:\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n>>>  125:                             todo_text = matches[0].strip()\n     126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n     127:                                 todos.append({\n     128:                                     'file': file_path,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 126,
        "text": "_text and len(todo_text) > 3:  # Only meaningful TODOs",
        "type": "TODO",
        "context": "     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n     125:                             todo_text = matches[0].strip()\n>>>  126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n     127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text and len(todo_text) > 3:  # Only meaningful TODOs",
        "body": "## TODO Item\n\n**Description**: _text and len(todo_text) > 3:  # Only meaningful TODOs\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 126  \n**Priority**: medium  \n\n### Context\n```text\n     123:                         matches = re.findall(pattern, line, re.IGNORECASE)\n     124:                         if matches:\n     125:                             todo_text = matches[0].strip()\n>>>  126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n     127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 127,
        "text": "s.append({",
        "type": "TODO",
        "context": "     124:                         if matches:\n     125:                             todo_text = matches[0].strip()\n     126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n>>>  127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,\n     130:                                     'text': todo_text,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s.append({",
        "body": "## TODO Item\n\n**Description**: s.append({\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 127  \n**Priority**: medium  \n\n### Context\n```text\n     124:                         if matches:\n     125:                             todo_text = matches[0].strip()\n     126:                             if todo_text and len(todo_text) > 3:  # Only meaningful TODOs\n>>>  127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,\n     130:                                     'text': todo_text,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 130,
        "text": "_text,",
        "type": "TODO",
        "context": "     127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,\n>>>  130:                                     'text': todo_text,\n     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n     133:                                     'priority': _determine_priority(todo_text, file_path),",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text,",
        "body": "## TODO Item\n\n**Description**: _text,\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 130  \n**Priority**: medium  \n\n### Context\n```text\n     127:                                 todos.append({\n     128:                                     'file': file_path,\n     129:                                     'line': line_num,\n>>>  130:                                     'text': todo_text,\n     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n     133:                                     'priority': _determine_priority(todo_text, file_path),\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 133,
        "text": "_text, file_path),",
        "type": "TODO",
        "context": "     130:                                     'text': todo_text,\n     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n>>>  133:                                     'priority': _determine_priority(todo_text, file_path),\n     134:                                     'labels': _determine_labels(todo_text, file_path)\n     135:                                 })\n     136:                                 ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text, file_path),",
        "body": "## TODO Item\n\n**Description**: _text, file_path),\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 133  \n**Priority**: medium  \n\n### Context\n```text\n     130:                                     'text': todo_text,\n     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n>>>  133:                                     'priority': _determine_priority(todo_text, file_path),\n     134:                                     'labels': _determine_labels(todo_text, file_path)\n     135:                                 })\n     136:                                 \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 134,
        "text": "_text, file_path)",
        "type": "TODO",
        "context": "     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n     133:                                     'priority': _determine_priority(todo_text, file_path),\n>>>  134:                                     'labels': _determine_labels(todo_text, file_path)\n     135:                                 })\n     136:                                 \n     137:             except Exception as e:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text, file_path)",
        "body": "## TODO Item\n\n**Description**: _text, file_path)\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 134  \n**Priority**: medium  \n\n### Context\n```text\n     131:                                     'type': pattern.split(':')[0].upper(),\n     132:                                     'context': _get_context(lines, line_num),\n     133:                                     'priority': _determine_priority(todo_text, file_path),\n>>>  134:                                     'labels': _determine_labels(todo_text, file_path)\n     135:                                 })\n     136:                                 \n     137:             except Exception as e:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 143,
        "text": "line\"\"\"",
        "type": "TODO",
        "context": "     140:     return todos\n     141: \n     142: def _get_context(lines: List[str], line_num: int, context_size: int = 3) -> str:\n>>>  143:     \"\"\"Get context around a TODO line\"\"\"\n     144:     start = max(0, line_num - context_size - 1)\n     145:     end = min(len(lines), line_num + context_size)\n     146:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] line\"\"\"",
        "body": "## TODO Item\n\n**Description**: line\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 143  \n**Priority**: medium  \n\n### Context\n```text\n     140:     return todos\n     141: \n     142: def _get_context(lines: List[str], line_num: int, context_size: int = 3) -> str:\n>>>  143:     \"\"\"Get context around a TODO line\"\"\"\n     144:     start = max(0, line_num - context_size - 1)\n     145:     end = min(len(lines), line_num + context_size)\n     146:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 154,
        "text": "_text: str, file_path: str) -> str:",
        "type": "TODO",
        "context": "     151:     \n     152:     return '\\n'.join(context_lines)\n     153: \n>>>  154: def _determine_priority(todo_text: str, file_path: str) -> str:\n     155:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     156:     \n     157:     # High priority keywords",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text: str, file_path: str) -> str:",
        "body": "## TODO Item\n\n**Description**: _text: str, file_path: str) -> str:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 154  \n**Priority**: medium  \n\n### Context\n```text\n     151:     \n     152:     return '\\n'.join(context_lines)\n     153: \n>>>  154: def _determine_priority(todo_text: str, file_path: str) -> str:\n     155:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     156:     \n     157:     # High priority keywords\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 155,
        "text": "content and file location\"\"\"",
        "type": "TODO",
        "context": "     152:     return '\\n'.join(context_lines)\n     153: \n     154: def _determine_priority(todo_text: str, file_path: str) -> str:\n>>>  155:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     156:     \n     157:     # High priority keywords\n     158:     high_priority_keywords = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] content and file location\"\"\"",
        "body": "## TODO Item\n\n**Description**: content and file location\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 155  \n**Priority**: medium  \n\n### Context\n```text\n     152:     return '\\n'.join(context_lines)\n     153: \n     154: def _determine_priority(todo_text: str, file_path: str) -> str:\n>>>  155:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     156:     \n     157:     # High priority keywords\n     158:     high_priority_keywords = [\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 159,
        "text": "', 'fix', 'error', 'crash',",
        "type": "BUG",
        "context": "     156:     \n     157:     # High priority keywords\n     158:     high_priority_keywords = [\n>>>  159:         'critical', 'urgent', 'security', 'bug', 'fix', 'error', 'crash',\n     160:         'production', 'deploy', 'release', 'hotfix', 'emergency'\n     161:     ]\n     162:     ",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] ', 'fix', 'error', 'crash',",
        "body": "## BUG Item\n\n**Description**: ', 'fix', 'error', 'crash',\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 159  \n**Priority**: high  \n\n### Context\n```text\n     156:     \n     157:     # High priority keywords\n     158:     high_priority_keywords = [\n>>>  159:         'critical', 'urgent', 'security', 'bug', 'fix', 'error', 'crash',\n     160:         'production', 'deploy', 'release', 'hotfix', 'emergency'\n     161:     ]\n     162:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 175,
        "text": "_lower = todo_text.lower()",
        "type": "TODO",
        "context": "     172:         'cosmetic', 'minor', 'low priority'\n     173:     ]\n     174:     \n>>>  175:     todo_lower = todo_text.lower()\n     176:     \n     177:     # Check for priority keywords\n     178:     for keyword in high_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _lower = todo_text.lower()",
        "body": "## TODO Item\n\n**Description**: _lower = todo_text.lower()\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 175  \n**Priority**: medium  \n\n### Context\n```text\n     172:         'cosmetic', 'minor', 'low priority'\n     173:     ]\n     174:     \n>>>  175:     todo_lower = todo_text.lower()\n     176:     \n     177:     # Check for priority keywords\n     178:     for keyword in high_priority_keywords:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 179,
        "text": "_lower:",
        "type": "TODO",
        "context": "     176:     \n     177:     # Check for priority keywords\n     178:     for keyword in high_priority_keywords:\n>>>  179:         if keyword in todo_lower:\n     180:             return 'high'\n     181:     \n     182:     for keyword in medium_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _lower:",
        "body": "## TODO Item\n\n**Description**: _lower:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 179  \n**Priority**: medium  \n\n### Context\n```text\n     176:     \n     177:     # Check for priority keywords\n     178:     for keyword in high_priority_keywords:\n>>>  179:         if keyword in todo_lower:\n     180:             return 'high'\n     181:     \n     182:     for keyword in medium_priority_keywords:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 183,
        "text": "_lower:",
        "type": "TODO",
        "context": "     180:             return 'high'\n     181:     \n     182:     for keyword in medium_priority_keywords:\n>>>  183:         if keyword in todo_lower:\n     184:             return 'medium'\n     185:     \n     186:     for keyword in low_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _lower:",
        "body": "## TODO Item\n\n**Description**: _lower:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 183  \n**Priority**: medium  \n\n### Context\n```text\n     180:             return 'high'\n     181:     \n     182:     for keyword in medium_priority_keywords:\n>>>  183:         if keyword in todo_lower:\n     184:             return 'medium'\n     185:     \n     186:     for keyword in low_priority_keywords:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 187,
        "text": "_lower:",
        "type": "TODO",
        "context": "     184:             return 'medium'\n     185:     \n     186:     for keyword in low_priority_keywords:\n>>>  187:         if keyword in todo_lower:\n     188:             return 'low'\n     189:     \n     190:     # Default priority based on file location",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _lower:",
        "body": "## TODO Item\n\n**Description**: _lower:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 187  \n**Priority**: medium  \n\n### Context\n```text\n     184:             return 'medium'\n     185:     \n     186:     for keyword in low_priority_keywords:\n>>>  187:         if keyword in todo_lower:\n     188:             return 'low'\n     189:     \n     190:     # Default priority based on file location\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 198,
        "text": "_text: str, file_path: str) -> List[str]:",
        "type": "TODO",
        "context": "     195:     else:\n     196:         return 'medium'\n     197: \n>>>  198: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n     199:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     200:     \n     201:     labels = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text: str, file_path: str) -> List[str]:",
        "body": "## TODO Item\n\n**Description**: _text: str, file_path: str) -> List[str]:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 198  \n**Priority**: medium  \n\n### Context\n```text\n     195:     else:\n     196:         return 'medium'\n     197: \n>>>  198: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n     199:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     200:     \n     201:     labels = []\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 199,
        "text": "content and file location\"\"\"",
        "type": "TODO",
        "context": "     196:         return 'medium'\n     197: \n     198: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n>>>  199:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     200:     \n     201:     labels = []\n     202:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] content and file location\"\"\"",
        "body": "## TODO Item\n\n**Description**: content and file location\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 199  \n**Priority**: medium  \n\n### Context\n```text\n     196:         return 'medium'\n     197: \n     198: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n>>>  199:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     200:     \n     201:     labels = []\n     202:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 204,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     201:     labels = []\n     202:     \n     203:     # Type-based labels\n>>>  204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n     206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 204  \n**Priority**: medium  \n\n### Context\n```text\n     201:     labels = []\n     202:     \n     203:     # Type-based labels\n>>>  204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n     206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 206,
        "text": "_text.lower() or 'fix' in todo_text.lower():",
        "type": "TODO",
        "context": "     203:     # Type-based labels\n     204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n>>>  206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower() or 'fix' in todo_text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower() or 'fix' in todo_text.lower():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 206  \n**Priority**: high  \n\n### Context\n```text\n     203:     # Type-based labels\n     204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n>>>  206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 206,
        "text": "' in todo_text.lower() or 'fix' in todo_text.lower():",
        "type": "BUG",
        "context": "     203:     # Type-based labels\n     204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n>>>  206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] ' in todo_text.lower() or 'fix' in todo_text.lower():",
        "body": "## BUG Item\n\n**Description**: ' in todo_text.lower() or 'fix' in todo_text.lower():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 206  \n**Priority**: high  \n\n### Context\n```text\n     203:     # Type-based labels\n     204:     if 'security' in todo_text.lower():\n     205:         labels.append('security')\n>>>  206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 208,
        "text": "_text.lower() or 'enhancement' in todo_text.lower():",
        "type": "TODO",
        "context": "     205:         labels.append('security')\n     206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n>>>  208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')\n     210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')",
        "priority": "medium",
        "labels": [
          "enhancement",
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower() or 'enhancement' in todo_text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower() or 'enhancement' in todo_text.lower():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 208  \n**Priority**: medium  \n\n### Context\n```text\n     205:         labels.append('security')\n     206:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     207:         labels.append('bug')\n>>>  208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')\n     210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "enhancement",
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 210,
        "text": "_text.lower() or 'doc' in todo_text.lower():",
        "type": "TODO",
        "context": "     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')\n>>>  210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')\n     212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower() or 'doc' in todo_text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower() or 'doc' in todo_text.lower():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 210  \n**Priority**: medium  \n\n### Context\n```text\n     207:         labels.append('bug')\n     208:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     209:         labels.append('enhancement')\n>>>  210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')\n     212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 212,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     209:         labels.append('enhancement')\n     210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')\n>>>  212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')\n     214:     if 'performance' in todo_text.lower():\n     215:         labels.append('performance')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 212  \n**Priority**: medium  \n\n### Context\n```text\n     209:         labels.append('enhancement')\n     210:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     211:         labels.append('documentation')\n>>>  212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')\n     214:     if 'performance' in todo_text.lower():\n     215:         labels.append('performance')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 214,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     211:         labels.append('documentation')\n     212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')\n>>>  214:     if 'performance' in todo_text.lower():\n     215:         labels.append('performance')\n     216:     \n     217:     # File-based labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 214  \n**Priority**: medium  \n\n### Context\n```text\n     211:         labels.append('documentation')\n     212:     if 'test' in todo_text.lower():\n     213:         labels.append('testing')\n>>>  214:     if 'performance' in todo_text.lower():\n     215:         labels.append('performance')\n     216:     \n     217:     # File-based labels\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 234,
        "text": "_text, file_path)",
        "type": "TODO",
        "context": "     231:         labels.append('documentation')\n     232:     \n     233:     # Priority labels\n>>>  234:     priority = _determine_priority(todo_text, file_path)\n     235:     labels.append(f'priority:{priority}')\n     236:     \n     237:     # Default labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text, file_path)",
        "body": "## TODO Item\n\n**Description**: _text, file_path)\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 234  \n**Priority**: medium  \n\n### Context\n```text\n     231:         labels.append('documentation')\n     232:     \n     233:     # Priority labels\n>>>  234:     priority = _determine_priority(todo_text, file_path)\n     235:     labels.append(f'priority:{priority}')\n     236:     \n     237:     # Default labels\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 238,
        "text": "', 'maintenance'])",
        "type": "TODO",
        "context": "     235:     labels.append(f'priority:{priority}')\n     236:     \n     237:     # Default labels\n>>>  238:     labels.extend(['todo', 'maintenance'])\n     239:     \n     240:     return list(set(labels))  # Remove duplicates\n     241: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ', 'maintenance'])",
        "body": "## TODO Item\n\n**Description**: ', 'maintenance'])\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 238  \n**Priority**: medium  \n\n### Context\n```text\n     235:     labels.append(f'priority:{priority}')\n     236:     \n     237:     # Default labels\n>>>  238:     labels.extend(['todo', 'maintenance'])\n     239:     \n     240:     return list(set(labels))  # Remove duplicates\n     241: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 242,
        "text": "s_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:",
        "type": "TODO",
        "context": "     239:     \n     240:     return list(set(labels))  # Remove duplicates\n     241: \n>>>  242: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n     243:     \"\"\"Group TODOs by category for better organization\"\"\"\n     244:     \n     245:     categories = {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:",
        "body": "## TODO Item\n\n**Description**: s_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 242  \n**Priority**: medium  \n\n### Context\n```text\n     239:     \n     240:     return list(set(labels))  # Remove duplicates\n     241: \n>>>  242: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n     243:     \"\"\"Group TODOs by category for better organization\"\"\"\n     244:     \n     245:     categories = {\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 243,
        "text": "s by category for better organization\"\"\"",
        "type": "TODO",
        "context": "     240:     return list(set(labels))  # Remove duplicates\n     241: \n     242: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n>>>  243:     \"\"\"Group TODOs by category for better organization\"\"\"\n     244:     \n     245:     categories = {\n     246:         'cli_commands': [],",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s by category for better organization\"\"\"",
        "body": "## TODO Item\n\n**Description**: s by category for better organization\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 243  \n**Priority**: medium  \n\n### Context\n```text\n     240:     return list(set(labels))  # Remove duplicates\n     241: \n     242: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n>>>  243:     \"\"\"Group TODOs by category for better organization\"\"\"\n     244:     \n     245:     categories = {\n     246:         'cli_commands': [],\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 252,
        "text": "_fixes': [],",
        "type": "BUG",
        "context": "     249:         'security': [],\n     250:         'performance': [],\n     251:         'features': [],\n>>>  252:         'bug_fixes': [],\n     253:         'refactoring': [],\n     254:         'other': []\n     255:     }",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] _fixes': [],",
        "body": "## BUG Item\n\n**Description**: _fixes': [],\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 252  \n**Priority**: high  \n\n### Context\n```text\n     249:         'security': [],\n     250:         'performance': [],\n     251:         'features': [],\n>>>  252:         'bug_fixes': [],\n     253:         'refactoring': [],\n     254:         'other': []\n     255:     }\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 257,
        "text": "in todos:",
        "type": "TODO",
        "context": "     254:         'other': []\n     255:     }\n     256:     \n>>>  257:     for todo in todos:\n     258:         labels = todo['labels']\n     259:         \n     260:         if 'cli' in labels:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] in todos:",
        "body": "## TODO Item\n\n**Description**: in todos:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 257  \n**Priority**: medium  \n\n### Context\n```text\n     254:         'other': []\n     255:     }\n     256:     \n>>>  257:     for todo in todos:\n     258:         labels = todo['labels']\n     259:         \n     260:         if 'cli' in labels:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 258,
        "text": "['labels']",
        "type": "TODO",
        "context": "     255:     }\n     256:     \n     257:     for todo in todos:\n>>>  258:         labels = todo['labels']\n     259:         \n     260:         if 'cli' in labels:\n     261:             categories['cli_commands'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['labels']",
        "body": "## TODO Item\n\n**Description**: ['labels']\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 258  \n**Priority**: medium  \n\n### Context\n```text\n     255:     }\n     256:     \n     257:     for todo in todos:\n>>>  258:         labels = todo['labels']\n     259:         \n     260:         if 'cli' in labels:\n     261:             categories['cli_commands'].append(todo)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 272,
        "text": "' in labels:",
        "type": "BUG",
        "context": "     269:             categories['performance'].append(todo)\n     270:         elif 'enhancement' in labels:\n     271:             categories['features'].append(todo)\n>>>  272:         elif 'bug' in labels:\n     273:             categories['bug_fixes'].append(todo)\n     274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] ' in labels:",
        "body": "## BUG Item\n\n**Description**: ' in labels:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 272  \n**Priority**: medium  \n\n### Context\n```text\n     269:             categories['performance'].append(todo)\n     270:         elif 'enhancement' in labels:\n     271:             categories['features'].append(todo)\n>>>  272:         elif 'bug' in labels:\n     273:             categories['bug_fixes'].append(todo)\n     274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 273,
        "text": "_fixes'].append(todo)",
        "type": "BUG",
        "context": "     270:         elif 'enhancement' in labels:\n     271:             categories['features'].append(todo)\n     272:         elif 'bug' in labels:\n>>>  273:             categories['bug_fixes'].append(todo)\n     274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)\n     276:         else:",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] _fixes'].append(todo)",
        "body": "## BUG Item\n\n**Description**: _fixes'].append(todo)\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 273  \n**Priority**: high  \n\n### Context\n```text\n     270:         elif 'enhancement' in labels:\n     271:             categories['features'].append(todo)\n     272:         elif 'bug' in labels:\n>>>  273:             categories['bug_fixes'].append(todo)\n     274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)\n     276:         else:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 274,
        "text": "['text'].lower():",
        "type": "TODO",
        "context": "     271:             categories['features'].append(todo)\n     272:         elif 'bug' in labels:\n     273:             categories['bug_fixes'].append(todo)\n>>>  274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)\n     276:         else:\n     277:             categories['other'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['text'].lower():",
        "body": "## TODO Item\n\n**Description**: ['text'].lower():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 274  \n**Priority**: medium  \n\n### Context\n```text\n     271:             categories['features'].append(todo)\n     272:         elif 'bug' in labels:\n     273:             categories['bug_fixes'].append(todo)\n>>>  274:         elif 'refactor' in todo['text'].lower():\n     275:             categories['refactoring'].append(todo)\n     276:         else:\n     277:             categories['other'].append(todo)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 281,
        "text": "Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:",
        "type": "TODO",
        "context": "     278:     \n     279:     return categories\n     280: \n>>>  281: def create_github_issue_template(todo: Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:\n     282:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     283:     \n     284:     # Determine issue title",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:",
        "body": "## TODO Item\n\n**Description**: Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 281  \n**Priority**: medium  \n\n### Context\n```text\n     278:     \n     279:     return categories\n     280: \n>>>  281: def create_github_issue_template(todo: Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:\n     282:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     283:     \n     284:     # Determine issue title\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 285,
        "text": "['type']}] {todo['text'][:80]}\"",
        "type": "TODO",
        "context": "     282:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     283:     \n     284:     # Determine issue title\n>>>  285:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n     286:     if len(todo['text']) > 80:\n     287:         title += \"...\"\n     288:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['type']}] {todo['text'][:80]}\"",
        "body": "## TODO Item\n\n**Description**: ['type']}] {todo['text'][:80]}\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 285  \n**Priority**: medium  \n\n### Context\n```text\n     282:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     283:     \n     284:     # Determine issue title\n>>>  285:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n     286:     if len(todo['text']) > 80:\n     287:         title += \"...\"\n     288:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 286,
        "text": "['text']) > 80:",
        "type": "TODO",
        "context": "     283:     \n     284:     # Determine issue title\n     285:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n>>>  286:     if len(todo['text']) > 80:\n     287:         title += \"...\"\n     288:     \n     289:     # Create issue body",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['text']) > 80:",
        "body": "## TODO Item\n\n**Description**: ['text']) > 80:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 286  \n**Priority**: medium  \n\n### Context\n```text\n     283:     \n     284:     # Determine issue title\n     285:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n>>>  286:     if len(todo['text']) > 80:\n     287:         title += \"...\"\n     288:     \n     289:     # Create issue body\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 290,
        "text": "['type']} Item",
        "type": "TODO",
        "context": "     287:         title += \"...\"\n     288:     \n     289:     # Create issue body\n>>>  290:     body = f\"\"\"## {todo['type']} Item\n     291: \n     292: **Description**: {todo['text']}\n     293: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['type']} Item",
        "body": "## TODO Item\n\n**Description**: ['type']} Item\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 290  \n**Priority**: medium  \n\n### Context\n```text\n     287:         title += \"...\"\n     288:     \n     289:     # Create issue body\n>>>  290:     body = f\"\"\"## {todo['type']} Item\n     291: \n     292: **Description**: {todo['text']}\n     293: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 292,
        "text": "['text']}",
        "type": "TODO",
        "context": "     289:     # Create issue body\n     290:     body = f\"\"\"## {todo['type']} Item\n     291: \n>>>  292: **Description**: {todo['text']}\n     293: \n     294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['text']}",
        "body": "## TODO Item\n\n**Description**: ['text']}\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 292  \n**Priority**: medium  \n\n### Context\n```text\n     289:     # Create issue body\n     290:     body = f\"\"\"## {todo['type']} Item\n     291: \n>>>  292: **Description**: {todo['text']}\n     293: \n     294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 294,
        "text": "['file']}`",
        "type": "TODO",
        "context": "     291: \n     292: **Description**: {todo['text']}\n     293: \n>>>  294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  \n     296: **Priority**: {todo['priority']}  \n     297: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['file']}`",
        "body": "## TODO Item\n\n**Description**: ['file']}`\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 294  \n**Priority**: medium  \n\n### Context\n```text\n     291: \n     292: **Description**: {todo['text']}\n     293: \n>>>  294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  \n     296: **Priority**: {todo['priority']}  \n     297: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 295,
        "text": "['line']}",
        "type": "TODO",
        "context": "     292: **Description**: {todo['text']}\n     293: \n     294: **File**: `{todo['file']}`  \n>>>  295: **Line**: {todo['line']}  \n     296: **Priority**: {todo['priority']}  \n     297: \n     298: ### Context",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['line']}",
        "body": "## TODO Item\n\n**Description**: ['line']}\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 295  \n**Priority**: medium  \n\n### Context\n```text\n     292: **Description**: {todo['text']}\n     293: \n     294: **File**: `{todo['file']}`  \n>>>  295: **Line**: {todo['line']}  \n     296: **Priority**: {todo['priority']}  \n     297: \n     298: ### Context\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 296,
        "text": "['priority']}",
        "type": "TODO",
        "context": "     293: \n     294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  \n>>>  296: **Priority**: {todo['priority']}  \n     297: \n     298: ### Context\n     299: ```text",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['priority']}",
        "body": "## TODO Item\n\n**Description**: ['priority']}\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 296  \n**Priority**: medium  \n\n### Context\n```text\n     293: \n     294: **File**: `{todo['file']}`  \n     295: **Line**: {todo['line']}  \n>>>  296: **Priority**: {todo['priority']}  \n     297: \n     298: ### Context\n     299: ```text\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 300,
        "text": "['context']}",
        "type": "TODO",
        "context": "     297: \n     298: ### Context\n     299: ```text\n>>>  300: {todo['context']}\n     301: ```\n     302: \n     303: ### Acceptance Criteria",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['context']}",
        "body": "## TODO Item\n\n**Description**: ['context']}\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 300  \n**Priority**: medium  \n\n### Context\n```text\n     297: \n     298: ### Context\n     299: ```text\n>>>  300: {todo['context']}\n     301: ```\n     302: \n     303: ### Acceptance Criteria\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 304,
        "text": "item has been addressed",
        "type": "TODO",
        "context": "     301: ```\n     302: \n     303: ### Acceptance Criteria\n>>>  304: - [ ] TODO item has been addressed\n     305: - [ ] Code has been tested\n     306: - [ ] Documentation updated (if applicable)\n     307: - [ ] No regressions introduced",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] item has been addressed",
        "body": "## TODO Item\n\n**Description**: item has been addressed\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 304  \n**Priority**: medium  \n\n### Context\n```text\n     301: ```\n     302: \n     303: ### Acceptance Criteria\n>>>  304: - [ ] TODO item has been addressed\n     305: - [ ] Code has been tested\n     306: - [ ] Documentation updated (if applicable)\n     307: - [ ] No regressions introduced\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 315,
        "text": "comment in the codebase.*",
        "type": "TODO",
        "context": "     312: - **Branch**: `{git_info['branch']}`\n     313: \n     314: ---\n>>>  315: *This issue was automatically created from a TODO comment in the codebase.*\n     316: \"\"\"\n     317:     \n     318:     return {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] comment in the codebase.*",
        "body": "## TODO Item\n\n**Description**: comment in the codebase.*\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 315  \n**Priority**: medium  \n\n### Context\n```text\n     312: - **Branch**: `{git_info['branch']}`\n     313: \n     314: ---\n>>>  315: *This issue was automatically created from a TODO comment in the codebase.*\n     316: \"\"\"\n     317:     \n     318:     return {\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 321,
        "text": "['labels']",
        "type": "TODO",
        "context": "     318:     return {\n     319:         'title': title,\n     320:         'body': body,\n>>>  321:         'labels': todo['labels']\n     322:     }\n     323: \n     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['labels']",
        "body": "## TODO Item\n\n**Description**: ['labels']\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 321  \n**Priority**: medium  \n\n### Context\n```text\n     318:     return {\n     319:         'title': title,\n     320:         'body': body,\n>>>  321:         'labels': todo['labels']\n     322:     }\n     323: \n     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 325,
        "text": "s found\"\"\"",
        "type": "TODO",
        "context": "     322:     }\n     323: \n     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n>>>  325:     \"\"\"Generate summary of all TODOs found\"\"\"\n     326:     \n     327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s found\"\"\"",
        "body": "## TODO Item\n\n**Description**: s found\"\"\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 325  \n**Priority**: medium  \n\n### Context\n```text\n     322:     }\n     323: \n     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n>>>  325:     \"\"\"Generate summary of all TODOs found\"\"\"\n     326:     \n     327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 327,
        "text": "s = sum(len(todos) for todos in categories.values())",
        "type": "TODO",
        "context": "     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n     325:     \"\"\"Generate summary of all TODOs found\"\"\"\n     326:     \n>>>  327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     \n     329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s = sum(len(todos) for todos in categories.values())",
        "body": "## TODO Item\n\n**Description**: s = sum(len(todos) for todos in categories.values())\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 327  \n**Priority**: medium  \n\n### Context\n```text\n     324: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n     325:     \"\"\"Generate summary of all TODOs found\"\"\"\n     326:     \n>>>  327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     \n     329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 329,
        "text": "to GitHub Issues Conversion Report",
        "type": "TODO",
        "context": "     326:     \n     327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     \n>>>  329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: \n     331: **Generated**: {datetime.now().isoformat()}  \n     332: **Total TODOs Found**: {total_todos}",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] to GitHub Issues Conversion Report",
        "body": "## TODO Item\n\n**Description**: to GitHub Issues Conversion Report\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 329  \n**Priority**: medium  \n\n### Context\n```text\n     326:     \n     327:     total_todos = sum(len(todos) for todos in categories.values())\n     328:     \n>>>  329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: \n     331: **Generated**: {datetime.now().isoformat()}  \n     332: **Total TODOs Found**: {total_todos}\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 332,
        "text": "s Found**: {total_todos}",
        "type": "TODO",
        "context": "     329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: \n     331: **Generated**: {datetime.now().isoformat()}  \n>>>  332: **Total TODOs Found**: {total_todos}\n     333: \n     334: ## Summary by Category\n     335: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s Found**: {total_todos}",
        "body": "## TODO Item\n\n**Description**: s Found**: {total_todos}\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 332  \n**Priority**: medium  \n\n### Context\n```text\n     329:     summary = f\"\"\"# Focused TODO to GitHub Issues Conversion Report\n     330: \n     331: **Generated**: {datetime.now().isoformat()}  \n>>>  332: **Total TODOs Found**: {total_todos}\n     333: \n     334: ## Summary by Category\n     335: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 338,
        "text": "s in categories.items():",
        "type": "TODO",
        "context": "     335: \n     336: \"\"\"\n     337:     \n>>>  338:     for category, todos in categories.items():\n     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s in categories.items():",
        "body": "## TODO Item\n\n**Description**: s in categories.items():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 338  \n**Priority**: medium  \n\n### Context\n```text\n     335: \n     336: \"\"\"\n     337:     \n>>>  338:     for category, todos in categories.items():\n     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 340,
        "text": "s)} items)\\n\"",
        "type": "TODO",
        "context": "     337:     \n     338:     for category, todos in categories.items():\n     339:         if todos:\n>>>  340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s)} items)\\n\"",
        "body": "## TODO Item\n\n**Description**: s)} items)\\n\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 340  \n**Priority**: medium  \n\n### Context\n```text\n     337:     \n     338:     for category, todos in categories.items():\n     339:         if todos:\n>>>  340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 341,
        "text": "in todos[:5]:  # Show first 5",
        "type": "TODO",
        "context": "     338:     for category, todos in categories.items():\n     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n>>>  341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] in todos[:5]:  # Show first 5",
        "body": "## TODO Item\n\n**Description**: in todos[:5]:  # Show first 5\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 341  \n**Priority**: medium  \n\n### Context\n```text\n     338:     for category, todos in categories.items():\n     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n>>>  341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 342,
        "text": "['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"",
        "type": "TODO",
        "context": "     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n>>>  342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"",
        "body": "## TODO Item\n\n**Description**: ['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 342  \n**Priority**: medium  \n\n### Context\n```text\n     339:         if todos:\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n>>>  342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 343,
        "text": "s) > 5:",
        "type": "TODO",
        "context": "     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n>>>  343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"\n     346:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s) > 5:",
        "body": "## TODO Item\n\n**Description**: s) > 5:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 343  \n**Priority**: medium  \n\n### Context\n```text\n     340:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n>>>  343:             if len(todos) > 5:\n     344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"\n     346:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 344,
        "text": "s) - 5} more\\n\"",
        "type": "TODO",
        "context": "     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n>>>  344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"\n     346:     \n     347:     summary += \"\"\"## Next Steps",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s) - 5} more\\n\"",
        "body": "## TODO Item\n\n**Description**: s) - 5} more\\n\"\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 344  \n**Priority**: medium  \n\n### Context\n```text\n     341:             for todo in todos[:5]:  # Show first 5\n     342:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     343:             if len(todos) > 5:\n>>>  344:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     345:             summary += \"\\n\"\n     346:     \n     347:     summary += \"\"\"## Next Steps\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 349,
        "text": "all generated issues",
        "type": "REVIEW",
        "context": "     346:     \n     347:     summary += \"\"\"## Next Steps\n     348: \n>>>  349: 1. Review all generated issues\n     350: 2. Prioritize based on business impact\n     351: 3. Assign to appropriate team members\n     352: 4. Create milestones for related issues",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] all generated issues",
        "body": "## REVIEW Item\n\n**Description**: all generated issues\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 349  \n**Priority**: medium  \n\n### Context\n```text\n     346:     \n     347:     summary += \"\"\"## Next Steps\n     348: \n>>>  349: 1. Review all generated issues\n     350: 2. Prioritize based on business impact\n     351: 3. Assign to appropriate team members\n     352: 4. Create milestones for related issues\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 357,
        "text": "has been converted to a GitHub issue with:",
        "type": "TODO",
        "context": "     354: \n     355: ## Issue Templates Generated\n     356: \n>>>  357: Each TODO has been converted to a GitHub issue with:\n     358: - Descriptive title\n     359: - Full context and file location\n     360: - Priority and labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] has been converted to a GitHub issue with:",
        "body": "## TODO Item\n\n**Description**: has been converted to a GitHub issue with:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 357  \n**Priority**: medium  \n\n### Context\n```text\n     354: \n     355: ## Issue Templates Generated\n     356: \n>>>  357: Each TODO has been converted to a GitHub issue with:\n     358: - Descriptive title\n     359: - Full context and file location\n     360: - Priority and labels\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 365,
        "text": "to GitHub Issues conversion script.*",
        "type": "TODO",
        "context": "     362: - Additional metadata\n     363: \n     364: ---\n>>>  365: *This report is automatically generated by the focused TODO to GitHub Issues conversion script.*\n     366: \"\"\"\n     367:     \n     368:     return summary",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] to GitHub Issues conversion script.*",
        "body": "## TODO Item\n\n**Description**: to GitHub Issues conversion script.*\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 365  \n**Priority**: medium  \n\n### Context\n```text\n     362: - Additional metadata\n     363: \n     364: ---\n>>>  365: *This report is automatically generated by the focused TODO to GitHub Issues conversion script.*\n     366: \"\"\"\n     367:     \n     368:     return summary\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 372,
        "text": "/TBD/FIXME items...\")",
        "type": "TODO",
        "context": "     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TODO] /TBD/FIXME items...\")",
        "body": "## TODO Item\n\n**Description**: /TBD/FIXME items...\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 372  \n**Priority**: high  \n\n### Context\n```text\n     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 372,
        "text": "/FIXME items...\")",
        "type": "TBD",
        "context": "     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TBD] /FIXME items...\")",
        "body": "## TBD Item\n\n**Description**: /FIXME items...\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 372  \n**Priority**: high  \n\n### Context\n```text\n     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 372,
        "text": "items...\")",
        "type": "FIXME",
        "context": "     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] items...\")",
        "body": "## FIXME Item\n\n**Description**: items...\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 372  \n**Priority**: medium  \n\n### Context\n```text\n     369: \n     370: def main():\n     371:     \"\"\"Main function\"\"\"\n>>>  372:     print(\"Scanning our codebase for TODO/TBD/FIXME items...\")\n     373:     \n     374:     # Get git info\n     375:     git_info = get_git_info()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 378,
        "text": "s = scan_for_todos()",
        "type": "TODO",
        "context": "     375:     git_info = get_git_info()\n     376:     \n     377:     # Scan for TODOs\n>>>  378:     todos = scan_for_todos()\n     379:     \n     380:     if not todos:\n     381:         print(\"No TODO items found in our codebase!\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s = scan_for_todos()",
        "body": "## TODO Item\n\n**Description**: s = scan_for_todos()\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 378  \n**Priority**: medium  \n\n### Context\n```text\n     375:     git_info = get_git_info()\n     376:     \n     377:     # Scan for TODOs\n>>>  378:     todos = scan_for_todos()\n     379:     \n     380:     if not todos:\n     381:         print(\"No TODO items found in our codebase!\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 381,
        "text": "items found in our codebase!\")",
        "type": "TODO",
        "context": "     378:     todos = scan_for_todos()\n     379:     \n     380:     if not todos:\n>>>  381:         print(\"No TODO items found in our codebase!\")\n     382:         return 0\n     383:     \n     384:     print(f\"Found {len(todos)} TODO items in our codebase\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] items found in our codebase!\")",
        "body": "## TODO Item\n\n**Description**: items found in our codebase!\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 381  \n**Priority**: medium  \n\n### Context\n```text\n     378:     todos = scan_for_todos()\n     379:     \n     380:     if not todos:\n>>>  381:         print(\"No TODO items found in our codebase!\")\n     382:         return 0\n     383:     \n     384:     print(f\"Found {len(todos)} TODO items in our codebase\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 384,
        "text": "s)} TODO items in our codebase\")",
        "type": "TODO",
        "context": "     381:         print(\"No TODO items found in our codebase!\")\n     382:         return 0\n     383:     \n>>>  384:     print(f\"Found {len(todos)} TODO items in our codebase\")\n     385:     \n     386:     # Group by category\n     387:     categories = group_todos_by_category(todos)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s)} TODO items in our codebase\")",
        "body": "## TODO Item\n\n**Description**: s)} TODO items in our codebase\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 384  \n**Priority**: medium  \n\n### Context\n```text\n     381:         print(\"No TODO items found in our codebase!\")\n     382:         return 0\n     383:     \n>>>  384:     print(f\"Found {len(todos)} TODO items in our codebase\")\n     385:     \n     386:     # Group by category\n     387:     categories = group_todos_by_category(todos)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 387,
        "text": "s_by_category(todos)",
        "type": "TODO",
        "context": "     384:     print(f\"Found {len(todos)} TODO items in our codebase\")\n     385:     \n     386:     # Group by category\n>>>  387:     categories = group_todos_by_category(todos)\n     388:     \n     389:     # Generate issue templates\n     390:     issue_templates = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_by_category(todos)",
        "body": "## TODO Item\n\n**Description**: s_by_category(todos)\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 387  \n**Priority**: medium  \n\n### Context\n```text\n     384:     print(f\"Found {len(todos)} TODO items in our codebase\")\n     385:     \n     386:     # Group by category\n>>>  387:     categories = group_todos_by_category(todos)\n     388:     \n     389:     # Generate issue templates\n     390:     issue_templates = []\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 391,
        "text": "in todos:",
        "type": "TODO",
        "context": "     388:     \n     389:     # Generate issue templates\n     390:     issue_templates = []\n>>>  391:     for todo in todos:\n     392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n     394:             'todo': todo,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] in todos:",
        "body": "## TODO Item\n\n**Description**: in todos:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 391  \n**Priority**: medium  \n\n### Context\n```text\n     388:     \n     389:     # Generate issue templates\n     390:     issue_templates = []\n>>>  391:     for todo in todos:\n     392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n     394:             'todo': todo,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 392,
        "text": ", git_info)",
        "type": "TODO",
        "context": "     389:     # Generate issue templates\n     390:     issue_templates = []\n     391:     for todo in todos:\n>>>  392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n     394:             'todo': todo,\n     395:             'issue_template': issue_template",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] , git_info)",
        "body": "## TODO Item\n\n**Description**: , git_info)\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 392  \n**Priority**: medium  \n\n### Context\n```text\n     389:     # Generate issue templates\n     390:     issue_templates = []\n     391:     for todo in todos:\n>>>  392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n     394:             'todo': todo,\n     395:             'issue_template': issue_template\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 394,
        "text": "': todo,",
        "type": "TODO",
        "context": "     391:     for todo in todos:\n     392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n>>>  394:             'todo': todo,\n     395:             'issue_template': issue_template\n     396:         })\n     397:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ': todo,",
        "body": "## TODO Item\n\n**Description**: ': todo,\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 394  \n**Priority**: medium  \n\n### Context\n```text\n     391:     for todo in todos:\n     392:         issue_template = create_github_issue_template(todo, git_info)\n     393:         issue_templates.append({\n>>>  394:             'todo': todo,\n     395:             'issue_template': issue_template\n     396:         })\n     397:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 402,
        "text": "s': len(todos),",
        "type": "TODO",
        "context": "     399:     results = {\n     400:         'scan_date': datetime.now().isoformat(),\n     401:         'git_info': git_info,\n>>>  402:         'total_todos': len(todos),\n     403:         'categories': categories,\n     404:         'issue_templates': issue_templates\n     405:     }",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s': len(todos),",
        "body": "## TODO Item\n\n**Description**: s': len(todos),\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 402  \n**Priority**: medium  \n\n### Context\n```text\n     399:     results = {\n     400:         'scan_date': datetime.now().isoformat(),\n     401:         'git_info': git_info,\n>>>  402:         'total_todos': len(todos),\n     403:         'categories': categories,\n     404:         'issue_templates': issue_templates\n     405:     }\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 408,
        "text": "_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:",
        "type": "TODO",
        "context": "     405:     }\n     406:     \n     407:     # Write JSON report\n>>>  408:     with open('REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:\n     409:         json.dump(results, f, indent=2)\n     410:     \n     411:     # Generate summary report",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:",
        "body": "## TODO Item\n\n**Description**: _TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 408  \n**Priority**: medium  \n\n### Context\n```text\n     405:     }\n     406:     \n     407:     # Write JSON report\n>>>  408:     with open('REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:\n     409:         json.dump(results, f, indent=2)\n     410:     \n     411:     # Generate summary report\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 413,
        "text": "_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:",
        "type": "TODO",
        "context": "     410:     \n     411:     # Generate summary report\n     412:     summary = generate_issue_summary(categories)\n>>>  413:     with open('REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:\n     414:         f.write(summary)\n     415:     \n     416:     # Print summary",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:",
        "body": "## TODO Item\n\n**Description**: _TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 413  \n**Priority**: medium  \n\n### Context\n```text\n     410:     \n     411:     # Generate summary report\n     412:     summary = generate_issue_summary(categories)\n>>>  413:     with open('REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:\n     414:         f.write(summary)\n     415:     \n     416:     # Print summary\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 417,
        "text": "to GitHub Issues Conversion Complete!\")",
        "type": "TODO",
        "context": "     414:         f.write(summary)\n     415:     \n     416:     # Print summary\n>>>  417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] to GitHub Issues Conversion Complete!\")",
        "body": "## TODO Item\n\n**Description**: to GitHub Issues Conversion Complete!\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 417  \n**Priority**: medium  \n\n### Context\n```text\n     414:         f.write(summary)\n     415:     \n     416:     # Print summary\n>>>  417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 418,
        "text": "s found: {len(todos)}\")",
        "type": "TODO",
        "context": "     415:     \n     416:     # Print summary\n     417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n>>>  418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s found: {len(todos)}\")",
        "body": "## TODO Item\n\n**Description**: s found: {len(todos)}\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 418  \n**Priority**: medium  \n\n### Context\n```text\n     415:     \n     416:     # Print summary\n     417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n>>>  418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 420,
        "text": "s_in_category in categories.items():",
        "type": "TODO",
        "context": "     417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n>>>  420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:\n     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_in_category in categories.items():",
        "body": "## TODO Item\n\n**Description**: s_in_category in categories.items():\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 420  \n**Priority**: medium  \n\n### Context\n```text\n     417:     print(f\"\\nFocused TODO to GitHub Issues Conversion Complete!\")\n     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n>>>  420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:\n     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 421,
        "text": "s_in_category:",
        "type": "TODO",
        "context": "     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():\n>>>  421:         if todos_in_category:\n     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_in_category:",
        "body": "## TODO Item\n\n**Description**: s_in_category:\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 421  \n**Priority**: medium  \n\n### Context\n```text\n     418:     print(f\"Total TODOs found: {len(todos)}\")\n     419:     \n     420:     for category, todos_in_category in categories.items():\n>>>  421:         if todos_in_category:\n     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 422,
        "text": "s_in_category)}\")",
        "type": "TODO",
        "context": "     419:     \n     420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:\n>>>  422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")\n     425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_in_category)}\")",
        "body": "## TODO Item\n\n**Description**: s_in_category)}\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 422  \n**Priority**: medium  \n\n### Context\n```text\n     419:     \n     420:     for category, todos_in_category in categories.items():\n     421:         if todos_in_category:\n>>>  422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")\n     425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 425,
        "text": "_TO_ISSUES_CONVERSION.json\")",
        "type": "TODO",
        "context": "     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")\n>>>  425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")\n     426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _TO_ISSUES_CONVERSION.json\")",
        "body": "## TODO Item\n\n**Description**: _TO_ISSUES_CONVERSION.json\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 425  \n**Priority**: medium  \n\n### Context\n```text\n     422:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     423:     \n     424:     print(f\"\\nReports generated:\")\n>>>  425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")\n     426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 426,
        "text": "_TO_ISSUES_SUMMARY.md\")",
        "type": "TODO",
        "context": "     423:     \n     424:     print(f\"\\nReports generated:\")\n     425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")\n>>>  426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")\n     429:     print(f\"1. Review the generated issue templates\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _TO_ISSUES_SUMMARY.md\")",
        "body": "## TODO Item\n\n**Description**: _TO_ISSUES_SUMMARY.md\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 426  \n**Priority**: medium  \n\n### Context\n```text\n     423:     \n     424:     print(f\"\\nReports generated:\")\n     425:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_CONVERSION.json\")\n>>>  426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")\n     429:     print(f\"1. Review the generated issue templates\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\focused_todo_to_issues_conversion.py",
        "line": 429,
        "text": "the generated issue templates\")",
        "type": "REVIEW",
        "context": "     426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")\n>>>  429:     print(f\"1. Review the generated issue templates\")\n     430:     print(f\"2. Create GitHub issues using the templates\")\n     431:     print(f\"3. Assign appropriate labels and priorities\")\n     432:     print(f\"4. Track progress in your project management tool\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] the generated issue templates\")",
        "body": "## REVIEW Item\n\n**Description**: the generated issue templates\")\n\n**File**: `.\\scripts\\focused_todo_to_issues_conversion.py`  \n**Line**: 429  \n**Priority**: medium  \n\n### Context\n```text\n     426:     print(f\"- REPORTS/FOCUSED_TODO_TO_ISSUES_SUMMARY.md\")\n     427:     \n     428:     print(f\"\\nNext steps:\")\n>>>  429:     print(f\"1. Review the generated issue templates\")\n     430:     print(f\"2. Create GitHub issues using the templates\")\n     431:     print(f\"3. Assign appropriate labels and priorities\")\n     432:     print(f\"4. Track progress in your project management tool\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\integration_sdk_audit.py",
        "line": 44,
        "text": "\" in content or \"FIXME\" in content or \"mock\" in content.lower():",
        "type": "TODO",
        "context": "      41:                 # Check if it's a real implementation or stub\n      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n>>>   44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n      45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TODO] \" in content or \"FIXME\" in content or \"mock\" in content.lower():",
        "body": "## TODO Item\n\n**Description**: \" in content or \"FIXME\" in content or \"mock\" in content.lower():\n\n**File**: `.\\scripts\\integration_sdk_audit.py`  \n**Line**: 44  \n**Priority**: high  \n\n### Context\n```text\n      41:                 # Check if it's a real implementation or stub\n      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n>>>   44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n      45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\integration_sdk_audit.py",
        "line": 44,
        "text": "\" in content or \"mock\" in content.lower():",
        "type": "FIXME",
        "context": "      41:                 # Check if it's a real implementation or stub\n      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n>>>   44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n      45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] \" in content or \"mock\" in content.lower():",
        "body": "## FIXME Item\n\n**Description**: \" in content or \"mock\" in content.lower():\n\n**File**: `.\\scripts\\integration_sdk_audit.py`  \n**Line**: 44  \n**Priority**: medium  \n\n### Context\n```text\n      41:                 # Check if it's a real implementation or stub\n      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n>>>   44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n      45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\integration_sdk_audit.py",
        "line": 45,
        "text": "s/mocks\")",
        "type": "TODO",
        "context": "      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n      44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n>>>   45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")\n      48:             else:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s/mocks\")",
        "body": "## TODO Item\n\n**Description**: s/mocks\")\n\n**File**: `.\\scripts\\integration_sdk_audit.py`  \n**Line**: 45  \n**Priority**: medium  \n\n### Context\n```text\n      42:                 with open(file_path, 'r', encoding='utf-8') as f:\n      43:                     content = f.read()\n      44:                     if \"TODO\" in content or \"FIXME\" in content or \"mock\" in content.lower():\n>>>   45:                         alith_status[\"issues\"].append(f\"{file_path} contains TODOs/mocks\")\n      46:                     if len(content.strip()) < 100:\n      47:                         alith_status[\"issues\"].append(f\"{file_path} appears to be a stub\")\n      48:             else:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 50,
        "text": "_markers': [",
        "type": "TODO",
        "context": "      47:             r'will create',\n      48:             r'will generate'\n      49:         ],\n>>>   50:         'todo_markers': [\n      51:             r'TODO:',\n      52:             r'FIXME:',\n      53:             r'XXX:',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _markers': [",
        "body": "## TODO Item\n\n**Description**: _markers': [\n\n**File**: `.\\scripts\\legacy_file_inventory.py`  \n**Line**: 50  \n**Priority**: medium  \n\n### Context\n```text\n      47:             r'will create',\n      48:             r'will generate'\n      49:         ],\n>>>   50:         'todo_markers': [\n      51:             r'TODO:',\n      52:             r'FIXME:',\n      53:             r'XXX:',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 65,
        "text": "_files': [],",
        "type": "TODO",
        "context": "      62:         'legacy_files': [],\n      63:         'unimplemented_features': [],\n      64:         'future_tense_docs': [],\n>>>   65:         'todo_files': [],\n      66:         'summary': {}\n      67:     }\n      68:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _files': [],",
        "body": "## TODO Item\n\n**Description**: _files': [],\n\n**File**: `.\\scripts\\legacy_file_inventory.py`  \n**Line**: 65  \n**Priority**: medium  \n\n### Context\n```text\n      62:         'legacy_files': [],\n      63:         'unimplemented_features': [],\n      64:         'future_tense_docs': [],\n>>>   65:         'todo_files': [],\n      66:         'summary': {}\n      67:     }\n      68:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 107,
        "text": "_files': len(results.get('todo_markers', []))",
        "type": "TODO",
        "context": "     104:         'legacy_references': len(results.get('python_scripts', [])) + len(results.get('shell_scripts', [])),\n     105:         'unimplemented_features': len(results.get('unimplemented_commands', [])),\n     106:         'future_tense_docs': len(results.get('future_tense', [])),\n>>>  107:         'todo_files': len(results.get('todo_markers', []))\n     108:     }\n     109:     \n     110:     return results",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _files': len(results.get('todo_markers', []))",
        "body": "## TODO Item\n\n**Description**: _files': len(results.get('todo_markers', []))\n\n**File**: `.\\scripts\\legacy_file_inventory.py`  \n**Line**: 107  \n**Priority**: medium  \n\n### Context\n```text\n     104:         'legacy_references': len(results.get('python_scripts', [])) + len(results.get('shell_scripts', [])),\n     105:         'unimplemented_features': len(results.get('unimplemented_commands', [])),\n     106:         'future_tense_docs': len(results.get('future_tense', [])),\n>>>  107:         'todo_files': len(results.get('todo_markers', []))\n     108:     }\n     109:     \n     110:     return results\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 256,
        "text": "ARCHIVE/ directory for archived files\"",
        "type": "REVIEW",
        "context": "     253:     \n     254:     script_content += '''\n     255: echo \"Legacy file cleanup completed!\"\n>>>  256: echo \"Review ARCHIVE/ directory for archived files\"\n     257: echo \"Review files with NOT IMPLEMENTED banners\"\n     258: '''\n     259:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ARCHIVE/ directory for archived files\"",
        "body": "## REVIEW Item\n\n**Description**: ARCHIVE/ directory for archived files\"\n\n**File**: `.\\scripts\\legacy_file_inventory.py`  \n**Line**: 256  \n**Priority**: medium  \n\n### Context\n```text\n     253:     \n     254:     script_content += '''\n     255: echo \"Legacy file cleanup completed!\"\n>>>  256: echo \"Review ARCHIVE/ directory for archived files\"\n     257: echo \"Review files with NOT IMPLEMENTED banners\"\n     258: '''\n     259:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 257,
        "text": "files with NOT IMPLEMENTED banners\"",
        "type": "REVIEW",
        "context": "     254:     script_content += '''\n     255: echo \"Legacy file cleanup completed!\"\n     256: echo \"Review ARCHIVE/ directory for archived files\"\n>>>  257: echo \"Review files with NOT IMPLEMENTED banners\"\n     258: '''\n     259:     \n     260:     return script_content",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] files with NOT IMPLEMENTED banners\"",
        "body": "## REVIEW Item\n\n**Description**: files with NOT IMPLEMENTED banners\"\n\n**File**: `.\\scripts\\legacy_file_inventory.py`  \n**Line**: 257  \n**Priority**: medium  \n\n### Context\n```text\n     254:     script_content += '''\n     255: echo \"Legacy file cleanup completed!\"\n     256: echo \"Review ARCHIVE/ directory for archived files\"\n>>>  257: echo \"Review files with NOT IMPLEMENTED banners\"\n     258: '''\n     259:     \n     260:     return script_content\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\legacy_file_inventory.py",
        "line": 306,
        "text": "files: {scan_results['summary']['todo_files']}\")",
        "type": "TODO",
        "context": "     303:     print(f\"Legacy references found: {scan_results['summary']['legacy_references']}\")\n     304:     print(f\"Unimplemented features: {scan_results['summary']['unimplemented_features']}\")\n     305:     print(f\"Future tense docs: {scan_results['summary']['future_tense_docs']}\")\n>>>  306:     print(f\"TODO files: {scan_results['summary']['todo_files']}\")\n     307:     print(f\"\\nArchive candidates: {len(recommendations['archive_candidates'])}\")\n     308:     print(f\"NOT IMPLEMENTED candidates: {len(recommendations['not_implemented_candidates'])}\")\n     309:     print(f\"Update candidates: {len(recommendations['update_candidates'])}\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] files: {scan_results['summary']['todo_files']}\")",
        "body": "## TODO Item\n\n**Description**: files: {scan_results['summary']['todo_files']}\")\n\n**File**: `.\\scripts\\legacy_file_inventory.py`  \n**Line**: 306  \n**Priority**: medium  \n\n### Context\n```text\n     303:     print(f\"Legacy references found: {scan_results['summary']['legacy_references']}\")\n     304:     print(f\"Unimplemented features: {scan_results['summary']['unimplemented_features']}\")\n     305:     print(f\"Future tense docs: {scan_results['summary']['future_tense_docs']}\")\n>>>  306:     print(f\"TODO files: {scan_results['summary']['todo_files']}\")\n     307:     print(f\"\\nArchive candidates: {len(recommendations['archive_candidates'])}\")\n     308:     print(f\"NOT IMPLEMENTED candidates: {len(recommendations['not_implemented_candidates'])}\")\n     309:     print(f\"Update candidates: {len(recommendations['update_candidates'])}\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\prepare_rag_templates.py",
        "line": 144,
        "text": "\": \"Each template has unique CID, descriptive name for AI agent consumption\",",
        "type": "NOTE",
        "context": "     141:             \"version\": \"1.0.0\",\n     142:             \"last_updated\": \"2025-10-28\",\n     143:             \"purpose\": \"CID registry mapping for AI agent RAG template lookups\",\n>>>  144:             \"note\": \"Each template has unique CID, descriptive name for AI agent consumption\",\n     145:             \"templates_prepared\": len(prepared_templates),\n     146:             \"ready_for_upload\": True\n     147:         },",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[NOTE] \": \"Each template has unique CID, descriptive name for AI agent consumption\",",
        "body": "## NOTE Item\n\n**Description**: \": \"Each template has unique CID, descriptive name for AI agent consumption\",\n\n**File**: `.\\scripts\\prepare_rag_templates.py`  \n**Line**: 144  \n**Priority**: medium  \n\n### Context\n```text\n     141:             \"version\": \"1.0.0\",\n     142:             \"last_updated\": \"2025-10-28\",\n     143:             \"purpose\": \"CID registry mapping for AI agent RAG template lookups\",\n>>>  144:             \"note\": \"Each template has unique CID, descriptive name for AI agent consumption\",\n     145:             \"templates_prepared\": len(prepared_templates),\n     146:             \"ready_for_upload\": True\n     147:         },\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\prepare_rag_templates.py",
        "line": 165,
        "text": "prepared templates in artifacts/rag_templates/\")",
        "type": "REVIEW",
        "context": "     162:     update_cid_registry(registry_path, registry_data)\n     163:     \n     164:     print(\"\\nNext Steps:\")\n>>>  165:     print(\"1. Review prepared templates in artifacts/rag_templates/\")\n     166:     print(\"2. Upload each template to IPFS Pinata\")\n     167:     print(\"3. Update cid-registry.json with actual CIDs\")\n     168:     print(\"4. Test RAG system with new templates\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] prepared templates in artifacts/rag_templates/\")",
        "body": "## REVIEW Item\n\n**Description**: prepared templates in artifacts/rag_templates/\")\n\n**File**: `.\\scripts\\prepare_rag_templates.py`  \n**Line**: 165  \n**Priority**: medium  \n\n### Context\n```text\n     162:     update_cid_registry(registry_path, registry_data)\n     163:     \n     164:     print(\"\\nNext Steps:\")\n>>>  165:     print(\"1. Review prepared templates in artifacts/rag_templates/\")\n     166:     print(\"2. Upload each template to IPFS Pinata\")\n     167:     print(\"3. Update cid-registry.json with actual CIDs\")\n     168:     print(\"4. Test RAG system with new templates\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 4,
        "text": "/TBD sections and converts them into GitHub issues",
        "type": "TODO",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Stub to Ticket Conversion Script\n>>>    4: Scans codebase for TODO/TBD sections and converts them into GitHub issues\n       5: with proper labels and priorities for tracking\n       6: \"\"\"\n       7: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] /TBD sections and converts them into GitHub issues",
        "body": "## TODO Item\n\n**Description**: /TBD sections and converts them into GitHub issues\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 4  \n**Priority**: medium  \n\n### Context\n```text\n       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Stub to Ticket Conversion Script\n>>>    4: Scans codebase for TODO/TBD sections and converts them into GitHub issues\n       5: with proper labels and priorities for tracking\n       6: \"\"\"\n       7: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 4,
        "text": "sections and converts them into GitHub issues",
        "type": "TBD",
        "context": "       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Stub to Ticket Conversion Script\n>>>    4: Scans codebase for TODO/TBD sections and converts them into GitHub issues\n       5: with proper labels and priorities for tracking\n       6: \"\"\"\n       7: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] sections and converts them into GitHub issues",
        "body": "## TBD Item\n\n**Description**: sections and converts them into GitHub issues\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 4  \n**Priority**: medium  \n\n### Context\n```text\n       1: #!/usr/bin/env python3\n       2: \"\"\"\n       3: Stub to Ticket Conversion Script\n>>>    4: Scans codebase for TODO/TBD sections and converts them into GitHub issues\n       5: with proper labels and priorities for tracking\n       6: \"\"\"\n       7: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 34,
        "text": "s() -> List[Dict[str, Any]]:",
        "type": "TODO",
        "context": "      31:             'branch': 'unknown'\n      32:         }\n      33: \n>>>   34: def scan_for_todos() -> List[Dict[str, Any]]:\n      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s() -> List[Dict[str, Any]]:",
        "body": "## TODO Item\n\n**Description**: s() -> List[Dict[str, Any]]:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 34  \n**Priority**: medium  \n\n### Context\n```text\n      31:             'branch': 'unknown'\n      32:         }\n      33: \n>>>   34: def scan_for_todos() -> List[Dict[str, Any]]:\n      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 35,
        "text": "/TBD/FIXME/XXX markers\"\"\"",
        "type": "TODO",
        "context": "      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TODO] /TBD/FIXME/XXX markers\"\"\"",
        "body": "## TODO Item\n\n**Description**: /TBD/FIXME/XXX markers\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 35  \n**Priority**: high  \n\n### Context\n```text\n      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 35,
        "text": "/FIXME/XXX markers\"\"\"",
        "type": "TBD",
        "context": "      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TBD] /FIXME/XXX markers\"\"\"",
        "body": "## TBD Item\n\n**Description**: /FIXME/XXX markers\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 35  \n**Priority**: high  \n\n### Context\n```text\n      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 35,
        "text": "/XXX markers\"\"\"",
        "type": "FIXME",
        "context": "      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] /XXX markers\"\"\"",
        "body": "## FIXME Item\n\n**Description**: /XXX markers\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 35  \n**Priority**: medium  \n\n### Context\n```text\n      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 35,
        "text": "markers\"\"\"",
        "type": "XXX",
        "context": "      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] markers\"\"\"",
        "body": "## XXX Item\n\n**Description**: markers\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 35  \n**Priority**: medium  \n\n### Context\n```text\n      32:         }\n      33: \n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n>>>   35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 37,
        "text": "_patterns = [",
        "type": "TODO",
        "context": "      34: def scan_for_todos() -> List[Dict[str, Any]]:\n      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n>>>   37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _patterns = [",
        "body": "## TODO Item\n\n**Description**: _patterns = [\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 37  \n**Priority**: medium  \n\n### Context\n```text\n      34: def scan_for_todos() -> List[Dict[str, Any]]:\n      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n>>>   37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 38,
        "text": "?\\s*(.+)',",
        "type": "TODO",
        "context": "      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n>>>   38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ?\\s*(.+)',",
        "body": "## TODO Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 38  \n**Priority**: medium  \n\n### Context\n```text\n      35:     \"\"\"Scan codebase for TODO/TBD/FIXME/XXX markers\"\"\"\n      36:     \n      37:     todo_patterns = [\n>>>   38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 39,
        "text": "?\\s*(.+)',",
        "type": "TBD",
        "context": "      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n>>>   39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TBD] ?\\s*(.+)',",
        "body": "## TBD Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 39  \n**Priority**: medium  \n\n### Context\n```text\n      36:     \n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n>>>   39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 40,
        "text": "?\\s*(.+)',",
        "type": "FIXME",
        "context": "      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n>>>   40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] ?\\s*(.+)',",
        "body": "## FIXME Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 40  \n**Priority**: medium  \n\n### Context\n```text\n      37:     todo_patterns = [\n      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n>>>   40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 41,
        "text": "?\\s*(.+)',",
        "type": "XXX",
        "context": "      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n>>>   41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[XXX] ?\\s*(.+)',",
        "body": "## XXX Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 41  \n**Priority**: medium  \n\n### Context\n```text\n      38:         r'TODO:?\\s*(.+)',\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n>>>   41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 42,
        "text": "?\\s*(.+)',",
        "type": "HACK",
        "context": "      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n>>>   42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[HACK] ?\\s*(.+)',",
        "body": "## HACK Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 42  \n**Priority**: medium  \n\n### Context\n```text\n      39:         r'TBD:?\\s*(.+)',\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n>>>   42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 43,
        "text": "?\\s*(.+)',",
        "type": "BUG",
        "context": "      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n>>>   43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] ?\\s*(.+)',",
        "body": "## BUG Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 43  \n**Priority**: medium  \n\n### Context\n```text\n      40:         r'FIXME:?\\s*(.+)',\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n>>>   43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 44,
        "text": "?\\s*(.+)',",
        "type": "NOTE",
        "context": "      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n>>>   44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[NOTE] ?\\s*(.+)',",
        "body": "## NOTE Item\n\n**Description**: ?\\s*(.+)',\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 44  \n**Priority**: medium  \n\n### Context\n```text\n      41:         r'XXX:?\\s*(.+)',\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n>>>   44:         r'NOTE:?\\s*(.+)',\n      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 45,
        "text": "?\\s*(.+)'",
        "type": "REVIEW",
        "context": "      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n>>>   45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     \n      48:     todos = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] ?\\s*(.+)'",
        "body": "## REVIEW Item\n\n**Description**: ?\\s*(.+)'\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 45  \n**Priority**: medium  \n\n### Context\n```text\n      42:         r'HACK:?\\s*(.+)',\n      43:         r'BUG:?\\s*(.+)',\n      44:         r'NOTE:?\\s*(.+)',\n>>>   45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     \n      48:     todos = []\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 48,
        "text": "s = []",
        "type": "TODO",
        "context": "      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     \n>>>   48:     todos = []\n      49:     \n      50:     # Scan all files\n      51:     for root, dirs, files in os.walk('.'):",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s = []",
        "body": "## TODO Item\n\n**Description**: s = []\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 48  \n**Priority**: medium  \n\n### Context\n```text\n      45:         r'REVIEW:?\\s*(.+)'\n      46:     ]\n      47:     \n>>>   48:     todos = []\n      49:     \n      50:     # Scan all files\n      51:     for root, dirs, files in os.walk('.'):\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 64,
        "text": "patterns",
        "type": "TODO",
        "context": "      61:                         content = f.read()\n      62:                         lines = content.split('\\n')\n      63:                         \n>>>   64:                     # Check for TODO patterns\n      65:                     for line_num, line in enumerate(lines, 1):\n      66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] patterns",
        "body": "## TODO Item\n\n**Description**: patterns\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 64  \n**Priority**: medium  \n\n### Context\n```text\n      61:                         content = f.read()\n      62:                         lines = content.split('\\n')\n      63:                         \n>>>   64:                     # Check for TODO patterns\n      65:                     for line_num, line in enumerate(lines, 1):\n      66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 66,
        "text": "_patterns:",
        "type": "TODO",
        "context": "      63:                         \n      64:                     # Check for TODO patterns\n      65:                     for line_num, line in enumerate(lines, 1):\n>>>   66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _patterns:",
        "body": "## TODO Item\n\n**Description**: _patterns:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 66  \n**Priority**: medium  \n\n### Context\n```text\n      63:                         \n      64:                     # Check for TODO patterns\n      65:                     for line_num, line in enumerate(lines, 1):\n>>>   66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 69,
        "text": "_text = matches[0].strip()",
        "type": "TODO",
        "context": "      66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n>>>   69:                                 todo_text = matches[0].strip()\n      70:                                 if todo_text:  # Only non-empty TODOs\n      71:                                     todos.append({\n      72:                                         'file': file_path,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text = matches[0].strip()",
        "body": "## TODO Item\n\n**Description**: _text = matches[0].strip()\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 69  \n**Priority**: medium  \n\n### Context\n```text\n      66:                         for pattern in todo_patterns:\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n>>>   69:                                 todo_text = matches[0].strip()\n      70:                                 if todo_text:  # Only non-empty TODOs\n      71:                                     todos.append({\n      72:                                         'file': file_path,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 70,
        "text": "_text:  # Only non-empty TODOs",
        "type": "TODO",
        "context": "      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()\n>>>   70:                                 if todo_text:  # Only non-empty TODOs\n      71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text:  # Only non-empty TODOs",
        "body": "## TODO Item\n\n**Description**: _text:  # Only non-empty TODOs\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 70  \n**Priority**: medium  \n\n### Context\n```text\n      67:                             matches = re.findall(pattern, line, re.IGNORECASE)\n      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()\n>>>   70:                                 if todo_text:  # Only non-empty TODOs\n      71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 71,
        "text": "s.append({",
        "type": "TODO",
        "context": "      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()\n      70:                                 if todo_text:  # Only non-empty TODOs\n>>>   71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,\n      74:                                         'text': todo_text,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s.append({",
        "body": "## TODO Item\n\n**Description**: s.append({\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 71  \n**Priority**: medium  \n\n### Context\n```text\n      68:                             if matches:\n      69:                                 todo_text = matches[0].strip()\n      70:                                 if todo_text:  # Only non-empty TODOs\n>>>   71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,\n      74:                                         'text': todo_text,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 74,
        "text": "_text,",
        "type": "TODO",
        "context": "      71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,\n>>>   74:                                         'text': todo_text,\n      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n      77:                                         'priority': _determine_priority(todo_text, file_path),",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text,",
        "body": "## TODO Item\n\n**Description**: _text,\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 74  \n**Priority**: medium  \n\n### Context\n```text\n      71:                                     todos.append({\n      72:                                         'file': file_path,\n      73:                                         'line': line_num,\n>>>   74:                                         'text': todo_text,\n      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n      77:                                         'priority': _determine_priority(todo_text, file_path),\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 77,
        "text": "_text, file_path),",
        "type": "TODO",
        "context": "      74:                                         'text': todo_text,\n      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n>>>   77:                                         'priority': _determine_priority(todo_text, file_path),\n      78:                                         'labels': _determine_labels(todo_text, file_path)\n      79:                                     })\n      80:                                     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text, file_path),",
        "body": "## TODO Item\n\n**Description**: _text, file_path),\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 77  \n**Priority**: medium  \n\n### Context\n```text\n      74:                                         'text': todo_text,\n      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n>>>   77:                                         'priority': _determine_priority(todo_text, file_path),\n      78:                                         'labels': _determine_labels(todo_text, file_path)\n      79:                                     })\n      80:                                     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 78,
        "text": "_text, file_path)",
        "type": "TODO",
        "context": "      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n      77:                                         'priority': _determine_priority(todo_text, file_path),\n>>>   78:                                         'labels': _determine_labels(todo_text, file_path)\n      79:                                     })\n      80:                                     \n      81:                 except Exception as e:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text, file_path)",
        "body": "## TODO Item\n\n**Description**: _text, file_path)\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 78  \n**Priority**: medium  \n\n### Context\n```text\n      75:                                         'type': pattern.split(':')[0].upper(),\n      76:                                         'context': _get_context(lines, line_num),\n      77:                                         'priority': _determine_priority(todo_text, file_path),\n>>>   78:                                         'labels': _determine_labels(todo_text, file_path)\n      79:                                     })\n      80:                                     \n      81:                 except Exception as e:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 87,
        "text": "line\"\"\"",
        "type": "TODO",
        "context": "      84:     return todos\n      85: \n      86: def _get_context(lines: List[str], line_num: int, context_size: int = 3) -> str:\n>>>   87:     \"\"\"Get context around a TODO line\"\"\"\n      88:     start = max(0, line_num - context_size - 1)\n      89:     end = min(len(lines), line_num + context_size)\n      90:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] line\"\"\"",
        "body": "## TODO Item\n\n**Description**: line\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 87  \n**Priority**: medium  \n\n### Context\n```text\n      84:     return todos\n      85: \n      86: def _get_context(lines: List[str], line_num: int, context_size: int = 3) -> str:\n>>>   87:     \"\"\"Get context around a TODO line\"\"\"\n      88:     start = max(0, line_num - context_size - 1)\n      89:     end = min(len(lines), line_num + context_size)\n      90:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 98,
        "text": "_text: str, file_path: str) -> str:",
        "type": "TODO",
        "context": "      95:     \n      96:     return '\\n'.join(context_lines)\n      97: \n>>>   98: def _determine_priority(todo_text: str, file_path: str) -> str:\n      99:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     100:     \n     101:     # High priority keywords",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text: str, file_path: str) -> str:",
        "body": "## TODO Item\n\n**Description**: _text: str, file_path: str) -> str:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 98  \n**Priority**: medium  \n\n### Context\n```text\n      95:     \n      96:     return '\\n'.join(context_lines)\n      97: \n>>>   98: def _determine_priority(todo_text: str, file_path: str) -> str:\n      99:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     100:     \n     101:     # High priority keywords\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 99,
        "text": "content and file location\"\"\"",
        "type": "TODO",
        "context": "      96:     return '\\n'.join(context_lines)\n      97: \n      98: def _determine_priority(todo_text: str, file_path: str) -> str:\n>>>   99:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     100:     \n     101:     # High priority keywords\n     102:     high_priority_keywords = [",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] content and file location\"\"\"",
        "body": "## TODO Item\n\n**Description**: content and file location\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 99  \n**Priority**: medium  \n\n### Context\n```text\n      96:     return '\\n'.join(context_lines)\n      97: \n      98: def _determine_priority(todo_text: str, file_path: str) -> str:\n>>>   99:     \"\"\"Determine priority based on TODO content and file location\"\"\"\n     100:     \n     101:     # High priority keywords\n     102:     high_priority_keywords = [\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 103,
        "text": "', 'fix', 'error', 'crash',",
        "type": "BUG",
        "context": "     100:     \n     101:     # High priority keywords\n     102:     high_priority_keywords = [\n>>>  103:         'critical', 'urgent', 'security', 'bug', 'fix', 'error', 'crash',\n     104:         'production', 'deploy', 'release', 'hotfix', 'emergency'\n     105:     ]\n     106:     ",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] ', 'fix', 'error', 'crash',",
        "body": "## BUG Item\n\n**Description**: ', 'fix', 'error', 'crash',\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 103  \n**Priority**: high  \n\n### Context\n```text\n     100:     \n     101:     # High priority keywords\n     102:     high_priority_keywords = [\n>>>  103:         'critical', 'urgent', 'security', 'bug', 'fix', 'error', 'crash',\n     104:         'production', 'deploy', 'release', 'hotfix', 'emergency'\n     105:     ]\n     106:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 119,
        "text": "_lower = todo_text.lower()",
        "type": "TODO",
        "context": "     116:         'cosmetic', 'minor', 'low priority'\n     117:     ]\n     118:     \n>>>  119:     todo_lower = todo_text.lower()\n     120:     \n     121:     # Check for priority keywords\n     122:     for keyword in high_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _lower = todo_text.lower()",
        "body": "## TODO Item\n\n**Description**: _lower = todo_text.lower()\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 119  \n**Priority**: medium  \n\n### Context\n```text\n     116:         'cosmetic', 'minor', 'low priority'\n     117:     ]\n     118:     \n>>>  119:     todo_lower = todo_text.lower()\n     120:     \n     121:     # Check for priority keywords\n     122:     for keyword in high_priority_keywords:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 123,
        "text": "_lower:",
        "type": "TODO",
        "context": "     120:     \n     121:     # Check for priority keywords\n     122:     for keyword in high_priority_keywords:\n>>>  123:         if keyword in todo_lower:\n     124:             return 'high'\n     125:     \n     126:     for keyword in medium_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _lower:",
        "body": "## TODO Item\n\n**Description**: _lower:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 123  \n**Priority**: medium  \n\n### Context\n```text\n     120:     \n     121:     # Check for priority keywords\n     122:     for keyword in high_priority_keywords:\n>>>  123:         if keyword in todo_lower:\n     124:             return 'high'\n     125:     \n     126:     for keyword in medium_priority_keywords:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 127,
        "text": "_lower:",
        "type": "TODO",
        "context": "     124:             return 'high'\n     125:     \n     126:     for keyword in medium_priority_keywords:\n>>>  127:         if keyword in todo_lower:\n     128:             return 'medium'\n     129:     \n     130:     for keyword in low_priority_keywords:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _lower:",
        "body": "## TODO Item\n\n**Description**: _lower:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 127  \n**Priority**: medium  \n\n### Context\n```text\n     124:             return 'high'\n     125:     \n     126:     for keyword in medium_priority_keywords:\n>>>  127:         if keyword in todo_lower:\n     128:             return 'medium'\n     129:     \n     130:     for keyword in low_priority_keywords:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 131,
        "text": "_lower:",
        "type": "TODO",
        "context": "     128:             return 'medium'\n     129:     \n     130:     for keyword in low_priority_keywords:\n>>>  131:         if keyword in todo_lower:\n     132:             return 'low'\n     133:     \n     134:     # Default priority based on file location",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _lower:",
        "body": "## TODO Item\n\n**Description**: _lower:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 131  \n**Priority**: medium  \n\n### Context\n```text\n     128:             return 'medium'\n     129:     \n     130:     for keyword in low_priority_keywords:\n>>>  131:         if keyword in todo_lower:\n     132:             return 'low'\n     133:     \n     134:     # Default priority based on file location\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 142,
        "text": "_text: str, file_path: str) -> List[str]:",
        "type": "TODO",
        "context": "     139:     else:\n     140:         return 'medium'\n     141: \n>>>  142: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n     143:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     144:     \n     145:     labels = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text: str, file_path: str) -> List[str]:",
        "body": "## TODO Item\n\n**Description**: _text: str, file_path: str) -> List[str]:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 142  \n**Priority**: medium  \n\n### Context\n```text\n     139:     else:\n     140:         return 'medium'\n     141: \n>>>  142: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n     143:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     144:     \n     145:     labels = []\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 143,
        "text": "content and file location\"\"\"",
        "type": "TODO",
        "context": "     140:         return 'medium'\n     141: \n     142: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n>>>  143:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     144:     \n     145:     labels = []\n     146:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] content and file location\"\"\"",
        "body": "## TODO Item\n\n**Description**: content and file location\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 143  \n**Priority**: medium  \n\n### Context\n```text\n     140:         return 'medium'\n     141: \n     142: def _determine_labels(todo_text: str, file_path: str) -> List[str]:\n>>>  143:     \"\"\"Determine labels based on TODO content and file location\"\"\"\n     144:     \n     145:     labels = []\n     146:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 148,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     145:     labels = []\n     146:     \n     147:     # Type-based labels\n>>>  148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n     150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 148  \n**Priority**: medium  \n\n### Context\n```text\n     145:     labels = []\n     146:     \n     147:     # Type-based labels\n>>>  148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n     150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 150,
        "text": "_text.lower() or 'fix' in todo_text.lower():",
        "type": "TODO",
        "context": "     147:     # Type-based labels\n     148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n>>>  150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower() or 'fix' in todo_text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower() or 'fix' in todo_text.lower():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 150  \n**Priority**: high  \n\n### Context\n```text\n     147:     # Type-based labels\n     148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n>>>  150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 150,
        "text": "' in todo_text.lower() or 'fix' in todo_text.lower():",
        "type": "BUG",
        "context": "     147:     # Type-based labels\n     148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n>>>  150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] ' in todo_text.lower() or 'fix' in todo_text.lower():",
        "body": "## BUG Item\n\n**Description**: ' in todo_text.lower() or 'fix' in todo_text.lower():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 150  \n**Priority**: high  \n\n### Context\n```text\n     147:     # Type-based labels\n     148:     if 'security' in todo_text.lower():\n     149:         labels.append('security')\n>>>  150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 152,
        "text": "_text.lower() or 'enhancement' in todo_text.lower():",
        "type": "TODO",
        "context": "     149:         labels.append('security')\n     150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n>>>  152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')\n     154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')",
        "priority": "medium",
        "labels": [
          "enhancement",
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower() or 'enhancement' in todo_text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower() or 'enhancement' in todo_text.lower():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 152  \n**Priority**: medium  \n\n### Context\n```text\n     149:         labels.append('security')\n     150:     if 'bug' in todo_text.lower() or 'fix' in todo_text.lower():\n     151:         labels.append('bug')\n>>>  152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')\n     154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "enhancement",
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 154,
        "text": "_text.lower() or 'doc' in todo_text.lower():",
        "type": "TODO",
        "context": "     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')\n>>>  154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')\n     156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')",
        "priority": "medium",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower() or 'doc' in todo_text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower() or 'doc' in todo_text.lower():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 154  \n**Priority**: medium  \n\n### Context\n```text\n     151:         labels.append('bug')\n     152:     if 'feature' in todo_text.lower() or 'enhancement' in todo_text.lower():\n     153:         labels.append('enhancement')\n>>>  154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')\n     156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "documentation",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 156,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     153:         labels.append('enhancement')\n     154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')\n>>>  156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')\n     158:     if 'performance' in todo_text.lower():\n     159:         labels.append('performance')",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 156  \n**Priority**: medium  \n\n### Context\n```text\n     153:         labels.append('enhancement')\n     154:     if 'documentation' in todo_text.lower() or 'doc' in todo_text.lower():\n     155:         labels.append('documentation')\n>>>  156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')\n     158:     if 'performance' in todo_text.lower():\n     159:         labels.append('performance')\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 158,
        "text": "_text.lower():",
        "type": "TODO",
        "context": "     155:         labels.append('documentation')\n     156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')\n>>>  158:     if 'performance' in todo_text.lower():\n     159:         labels.append('performance')\n     160:     \n     161:     # File-based labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text.lower():",
        "body": "## TODO Item\n\n**Description**: _text.lower():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 158  \n**Priority**: medium  \n\n### Context\n```text\n     155:         labels.append('documentation')\n     156:     if 'test' in todo_text.lower():\n     157:         labels.append('testing')\n>>>  158:     if 'performance' in todo_text.lower():\n     159:         labels.append('performance')\n     160:     \n     161:     # File-based labels\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 178,
        "text": "_text, file_path)",
        "type": "TODO",
        "context": "     175:         labels.append('documentation')\n     176:     \n     177:     # Priority labels\n>>>  178:     priority = _determine_priority(todo_text, file_path)\n     179:     labels.append(f'priority:{priority}')\n     180:     \n     181:     # Default labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _text, file_path)",
        "body": "## TODO Item\n\n**Description**: _text, file_path)\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 178  \n**Priority**: medium  \n\n### Context\n```text\n     175:         labels.append('documentation')\n     176:     \n     177:     # Priority labels\n>>>  178:     priority = _determine_priority(todo_text, file_path)\n     179:     labels.append(f'priority:{priority}')\n     180:     \n     181:     # Default labels\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 182,
        "text": "', 'maintenance'])",
        "type": "TODO",
        "context": "     179:     labels.append(f'priority:{priority}')\n     180:     \n     181:     # Default labels\n>>>  182:     labels.extend(['todo', 'maintenance'])\n     183:     \n     184:     return list(set(labels))  # Remove duplicates\n     185: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ', 'maintenance'])",
        "body": "## TODO Item\n\n**Description**: ', 'maintenance'])\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 182  \n**Priority**: medium  \n\n### Context\n```text\n     179:     labels.append(f'priority:{priority}')\n     180:     \n     181:     # Default labels\n>>>  182:     labels.extend(['todo', 'maintenance'])\n     183:     \n     184:     return list(set(labels))  # Remove duplicates\n     185: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 186,
        "text": "s_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:",
        "type": "TODO",
        "context": "     183:     \n     184:     return list(set(labels))  # Remove duplicates\n     185: \n>>>  186: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n     187:     \"\"\"Group TODOs by category for better organization\"\"\"\n     188:     \n     189:     categories = {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:",
        "body": "## TODO Item\n\n**Description**: s_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 186  \n**Priority**: medium  \n\n### Context\n```text\n     183:     \n     184:     return list(set(labels))  # Remove duplicates\n     185: \n>>>  186: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n     187:     \"\"\"Group TODOs by category for better organization\"\"\"\n     188:     \n     189:     categories = {\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 187,
        "text": "s by category for better organization\"\"\"",
        "type": "TODO",
        "context": "     184:     return list(set(labels))  # Remove duplicates\n     185: \n     186: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n>>>  187:     \"\"\"Group TODOs by category for better organization\"\"\"\n     188:     \n     189:     categories = {\n     190:         'cli_commands': [],",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s by category for better organization\"\"\"",
        "body": "## TODO Item\n\n**Description**: s by category for better organization\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 187  \n**Priority**: medium  \n\n### Context\n```text\n     184:     return list(set(labels))  # Remove duplicates\n     185: \n     186: def group_todos_by_category(todos: List[Dict[str, Any]]) -> Dict[str, List[Dict[str, Any]]]:\n>>>  187:     \"\"\"Group TODOs by category for better organization\"\"\"\n     188:     \n     189:     categories = {\n     190:         'cli_commands': [],\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 196,
        "text": "_fixes': [],",
        "type": "BUG",
        "context": "     193:         'security': [],\n     194:         'performance': [],\n     195:         'features': [],\n>>>  196:         'bug_fixes': [],\n     197:         'refactoring': [],\n     198:         'other': []\n     199:     }",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] _fixes': [],",
        "body": "## BUG Item\n\n**Description**: _fixes': [],\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 196  \n**Priority**: high  \n\n### Context\n```text\n     193:         'security': [],\n     194:         'performance': [],\n     195:         'features': [],\n>>>  196:         'bug_fixes': [],\n     197:         'refactoring': [],\n     198:         'other': []\n     199:     }\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 201,
        "text": "in todos:",
        "type": "TODO",
        "context": "     198:         'other': []\n     199:     }\n     200:     \n>>>  201:     for todo in todos:\n     202:         labels = todo['labels']\n     203:         \n     204:         if 'cli' in labels:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] in todos:",
        "body": "## TODO Item\n\n**Description**: in todos:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 201  \n**Priority**: medium  \n\n### Context\n```text\n     198:         'other': []\n     199:     }\n     200:     \n>>>  201:     for todo in todos:\n     202:         labels = todo['labels']\n     203:         \n     204:         if 'cli' in labels:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 202,
        "text": "['labels']",
        "type": "TODO",
        "context": "     199:     }\n     200:     \n     201:     for todo in todos:\n>>>  202:         labels = todo['labels']\n     203:         \n     204:         if 'cli' in labels:\n     205:             categories['cli_commands'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['labels']",
        "body": "## TODO Item\n\n**Description**: ['labels']\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 202  \n**Priority**: medium  \n\n### Context\n```text\n     199:     }\n     200:     \n     201:     for todo in todos:\n>>>  202:         labels = todo['labels']\n     203:         \n     204:         if 'cli' in labels:\n     205:             categories['cli_commands'].append(todo)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 216,
        "text": "' in labels:",
        "type": "BUG",
        "context": "     213:             categories['performance'].append(todo)\n     214:         elif 'enhancement' in labels:\n     215:             categories['features'].append(todo)\n>>>  216:         elif 'bug' in labels:\n     217:             categories['bug_fixes'].append(todo)\n     218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[BUG] ' in labels:",
        "body": "## BUG Item\n\n**Description**: ' in labels:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 216  \n**Priority**: medium  \n\n### Context\n```text\n     213:             categories['performance'].append(todo)\n     214:         elif 'enhancement' in labels:\n     215:             categories['features'].append(todo)\n>>>  216:         elif 'bug' in labels:\n     217:             categories['bug_fixes'].append(todo)\n     218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 217,
        "text": "_fixes'].append(todo)",
        "type": "BUG",
        "context": "     214:         elif 'enhancement' in labels:\n     215:             categories['features'].append(todo)\n     216:         elif 'bug' in labels:\n>>>  217:             categories['bug_fixes'].append(todo)\n     218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)\n     220:         else:",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[BUG] _fixes'].append(todo)",
        "body": "## BUG Item\n\n**Description**: _fixes'].append(todo)\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 217  \n**Priority**: high  \n\n### Context\n```text\n     214:         elif 'enhancement' in labels:\n     215:             categories['features'].append(todo)\n     216:         elif 'bug' in labels:\n>>>  217:             categories['bug_fixes'].append(todo)\n     218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)\n     220:         else:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 218,
        "text": "['text'].lower():",
        "type": "TODO",
        "context": "     215:             categories['features'].append(todo)\n     216:         elif 'bug' in labels:\n     217:             categories['bug_fixes'].append(todo)\n>>>  218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)\n     220:         else:\n     221:             categories['other'].append(todo)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['text'].lower():",
        "body": "## TODO Item\n\n**Description**: ['text'].lower():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 218  \n**Priority**: medium  \n\n### Context\n```text\n     215:             categories['features'].append(todo)\n     216:         elif 'bug' in labels:\n     217:             categories['bug_fixes'].append(todo)\n>>>  218:         elif 'refactor' in todo['text'].lower():\n     219:             categories['refactoring'].append(todo)\n     220:         else:\n     221:             categories['other'].append(todo)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 225,
        "text": "Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:",
        "type": "TODO",
        "context": "     222:     \n     223:     return categories\n     224: \n>>>  225: def create_github_issue_template(todo: Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:\n     226:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     227:     \n     228:     # Determine issue title",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:",
        "body": "## TODO Item\n\n**Description**: Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 225  \n**Priority**: medium  \n\n### Context\n```text\n     222:     \n     223:     return categories\n     224: \n>>>  225: def create_github_issue_template(todo: Dict[str, Any], git_info: Dict[str, str]) -> Dict[str, Any]:\n     226:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     227:     \n     228:     # Determine issue title\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 229,
        "text": "['type']}] {todo['text'][:80]}\"",
        "type": "TODO",
        "context": "     226:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     227:     \n     228:     # Determine issue title\n>>>  229:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n     230:     if len(todo['text']) > 80:\n     231:         title += \"...\"\n     232:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['type']}] {todo['text'][:80]}\"",
        "body": "## TODO Item\n\n**Description**: ['type']}] {todo['text'][:80]}\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 229  \n**Priority**: medium  \n\n### Context\n```text\n     226:     \"\"\"Create GitHub issue template from TODO\"\"\"\n     227:     \n     228:     # Determine issue title\n>>>  229:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n     230:     if len(todo['text']) > 80:\n     231:         title += \"...\"\n     232:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 230,
        "text": "['text']) > 80:",
        "type": "TODO",
        "context": "     227:     \n     228:     # Determine issue title\n     229:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n>>>  230:     if len(todo['text']) > 80:\n     231:         title += \"...\"\n     232:     \n     233:     # Create issue body",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['text']) > 80:",
        "body": "## TODO Item\n\n**Description**: ['text']) > 80:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 230  \n**Priority**: medium  \n\n### Context\n```text\n     227:     \n     228:     # Determine issue title\n     229:     title = f\"[{todo['type']}] {todo['text'][:80]}\"\n>>>  230:     if len(todo['text']) > 80:\n     231:         title += \"...\"\n     232:     \n     233:     # Create issue body\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 234,
        "text": "['type']} Item",
        "type": "TODO",
        "context": "     231:         title += \"...\"\n     232:     \n     233:     # Create issue body\n>>>  234:     body = f\"\"\"## {todo['type']} Item\n     235: \n     236: **Description**: {todo['text']}\n     237: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['type']} Item",
        "body": "## TODO Item\n\n**Description**: ['type']} Item\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 234  \n**Priority**: medium  \n\n### Context\n```text\n     231:         title += \"...\"\n     232:     \n     233:     # Create issue body\n>>>  234:     body = f\"\"\"## {todo['type']} Item\n     235: \n     236: **Description**: {todo['text']}\n     237: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 236,
        "text": "['text']}",
        "type": "TODO",
        "context": "     233:     # Create issue body\n     234:     body = f\"\"\"## {todo['type']} Item\n     235: \n>>>  236: **Description**: {todo['text']}\n     237: \n     238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['text']}",
        "body": "## TODO Item\n\n**Description**: ['text']}\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 236  \n**Priority**: medium  \n\n### Context\n```text\n     233:     # Create issue body\n     234:     body = f\"\"\"## {todo['type']} Item\n     235: \n>>>  236: **Description**: {todo['text']}\n     237: \n     238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 238,
        "text": "['file']}`",
        "type": "TODO",
        "context": "     235: \n     236: **Description**: {todo['text']}\n     237: \n>>>  238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  \n     240: **Priority**: {todo['priority']}  \n     241: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['file']}`",
        "body": "## TODO Item\n\n**Description**: ['file']}`\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 238  \n**Priority**: medium  \n\n### Context\n```text\n     235: \n     236: **Description**: {todo['text']}\n     237: \n>>>  238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  \n     240: **Priority**: {todo['priority']}  \n     241: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 239,
        "text": "['line']}",
        "type": "TODO",
        "context": "     236: **Description**: {todo['text']}\n     237: \n     238: **File**: `{todo['file']}`  \n>>>  239: **Line**: {todo['line']}  \n     240: **Priority**: {todo['priority']}  \n     241: \n     242: ### Context",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['line']}",
        "body": "## TODO Item\n\n**Description**: ['line']}\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 239  \n**Priority**: medium  \n\n### Context\n```text\n     236: **Description**: {todo['text']}\n     237: \n     238: **File**: `{todo['file']}`  \n>>>  239: **Line**: {todo['line']}  \n     240: **Priority**: {todo['priority']}  \n     241: \n     242: ### Context\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 240,
        "text": "['priority']}",
        "type": "TODO",
        "context": "     237: \n     238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  \n>>>  240: **Priority**: {todo['priority']}  \n     241: \n     242: ### Context\n     243: ```text",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['priority']}",
        "body": "## TODO Item\n\n**Description**: ['priority']}\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 240  \n**Priority**: medium  \n\n### Context\n```text\n     237: \n     238: **File**: `{todo['file']}`  \n     239: **Line**: {todo['line']}  \n>>>  240: **Priority**: {todo['priority']}  \n     241: \n     242: ### Context\n     243: ```text\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 244,
        "text": "['context']}",
        "type": "TODO",
        "context": "     241: \n     242: ### Context\n     243: ```text\n>>>  244: {todo['context']}\n     245: ```\n     246: \n     247: ### Acceptance Criteria",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['context']}",
        "body": "## TODO Item\n\n**Description**: ['context']}\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 244  \n**Priority**: medium  \n\n### Context\n```text\n     241: \n     242: ### Context\n     243: ```text\n>>>  244: {todo['context']}\n     245: ```\n     246: \n     247: ### Acceptance Criteria\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 248,
        "text": "item has been addressed",
        "type": "TODO",
        "context": "     245: ```\n     246: \n     247: ### Acceptance Criteria\n>>>  248: - [ ] TODO item has been addressed\n     249: - [ ] Code has been tested\n     250: - [ ] Documentation updated (if applicable)\n     251: - [ ] No regressions introduced",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] item has been addressed",
        "body": "## TODO Item\n\n**Description**: item has been addressed\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 248  \n**Priority**: medium  \n\n### Context\n```text\n     245: ```\n     246: \n     247: ### Acceptance Criteria\n>>>  248: - [ ] TODO item has been addressed\n     249: - [ ] Code has been tested\n     250: - [ ] Documentation updated (if applicable)\n     251: - [ ] No regressions introduced\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 259,
        "text": "comment in the codebase.*",
        "type": "TODO",
        "context": "     256: - **Branch**: `{git_info['branch']}`\n     257: \n     258: ---\n>>>  259: *This issue was automatically created from a TODO comment in the codebase.*\n     260: \"\"\"\n     261:     \n     262:     return {",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] comment in the codebase.*",
        "body": "## TODO Item\n\n**Description**: comment in the codebase.*\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 259  \n**Priority**: medium  \n\n### Context\n```text\n     256: - **Branch**: `{git_info['branch']}`\n     257: \n     258: ---\n>>>  259: *This issue was automatically created from a TODO comment in the codebase.*\n     260: \"\"\"\n     261:     \n     262:     return {\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 265,
        "text": "['labels']",
        "type": "TODO",
        "context": "     262:     return {\n     263:         'title': title,\n     264:         'body': body,\n>>>  265:         'labels': todo['labels']\n     266:     }\n     267: \n     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['labels']",
        "body": "## TODO Item\n\n**Description**: ['labels']\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 265  \n**Priority**: medium  \n\n### Context\n```text\n     262:     return {\n     263:         'title': title,\n     264:         'body': body,\n>>>  265:         'labels': todo['labels']\n     266:     }\n     267: \n     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 269,
        "text": "s found\"\"\"",
        "type": "TODO",
        "context": "     266:     }\n     267: \n     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n>>>  269:     \"\"\"Generate summary of all TODOs found\"\"\"\n     270:     \n     271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s found\"\"\"",
        "body": "## TODO Item\n\n**Description**: s found\"\"\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 269  \n**Priority**: medium  \n\n### Context\n```text\n     266:     }\n     267: \n     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n>>>  269:     \"\"\"Generate summary of all TODOs found\"\"\"\n     270:     \n     271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 271,
        "text": "s = sum(len(todos) for todos in categories.values())",
        "type": "TODO",
        "context": "     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n     269:     \"\"\"Generate summary of all TODOs found\"\"\"\n     270:     \n>>>  271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     \n     273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s = sum(len(todos) for todos in categories.values())",
        "body": "## TODO Item\n\n**Description**: s = sum(len(todos) for todos in categories.values())\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 271  \n**Priority**: medium  \n\n### Context\n```text\n     268: def generate_issue_summary(categories: Dict[str, List[Dict[str, Any]]]) -> str:\n     269:     \"\"\"Generate summary of all TODOs found\"\"\"\n     270:     \n>>>  271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     \n     273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 273,
        "text": "to GitHub Issues Conversion Report",
        "type": "TODO",
        "context": "     270:     \n     271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     \n>>>  273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: \n     275: **Generated**: {datetime.now().isoformat()}  \n     276: **Total TODOs Found**: {total_todos}",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] to GitHub Issues Conversion Report",
        "body": "## TODO Item\n\n**Description**: to GitHub Issues Conversion Report\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 273  \n**Priority**: medium  \n\n### Context\n```text\n     270:     \n     271:     total_todos = sum(len(todos) for todos in categories.values())\n     272:     \n>>>  273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: \n     275: **Generated**: {datetime.now().isoformat()}  \n     276: **Total TODOs Found**: {total_todos}\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 276,
        "text": "s Found**: {total_todos}",
        "type": "TODO",
        "context": "     273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: \n     275: **Generated**: {datetime.now().isoformat()}  \n>>>  276: **Total TODOs Found**: {total_todos}\n     277: \n     278: ## Summary by Category\n     279: ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s Found**: {total_todos}",
        "body": "## TODO Item\n\n**Description**: s Found**: {total_todos}\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 276  \n**Priority**: medium  \n\n### Context\n```text\n     273:     summary = f\"\"\"# TODO to GitHub Issues Conversion Report\n     274: \n     275: **Generated**: {datetime.now().isoformat()}  \n>>>  276: **Total TODOs Found**: {total_todos}\n     277: \n     278: ## Summary by Category\n     279: \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 282,
        "text": "s in categories.items():",
        "type": "TODO",
        "context": "     279: \n     280: \"\"\"\n     281:     \n>>>  282:     for category, todos in categories.items():\n     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s in categories.items():",
        "body": "## TODO Item\n\n**Description**: s in categories.items():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 282  \n**Priority**: medium  \n\n### Context\n```text\n     279: \n     280: \"\"\"\n     281:     \n>>>  282:     for category, todos in categories.items():\n     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 284,
        "text": "s)} items)\\n\"",
        "type": "TODO",
        "context": "     281:     \n     282:     for category, todos in categories.items():\n     283:         if todos:\n>>>  284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s)} items)\\n\"",
        "body": "## TODO Item\n\n**Description**: s)} items)\\n\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 284  \n**Priority**: medium  \n\n### Context\n```text\n     281:     \n     282:     for category, todos in categories.items():\n     283:         if todos:\n>>>  284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 285,
        "text": "in todos[:5]:  # Show first 5",
        "type": "TODO",
        "context": "     282:     for category, todos in categories.items():\n     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n>>>  285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] in todos[:5]:  # Show first 5",
        "body": "## TODO Item\n\n**Description**: in todos[:5]:  # Show first 5\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 285  \n**Priority**: medium  \n\n### Context\n```text\n     282:     for category, todos in categories.items():\n     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n>>>  285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 286,
        "text": "['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"",
        "type": "TODO",
        "context": "     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n>>>  286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"",
        "body": "## TODO Item\n\n**Description**: ['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 286  \n**Priority**: medium  \n\n### Context\n```text\n     283:         if todos:\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n>>>  286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 287,
        "text": "s) > 5:",
        "type": "TODO",
        "context": "     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n>>>  287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"\n     290:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s) > 5:",
        "body": "## TODO Item\n\n**Description**: s) > 5:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 287  \n**Priority**: medium  \n\n### Context\n```text\n     284:             summary += f\"### {category.replace('_', ' ').title()} ({len(todos)} items)\\n\"\n     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n>>>  287:             if len(todos) > 5:\n     288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"\n     290:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 288,
        "text": "s) - 5} more\\n\"",
        "type": "TODO",
        "context": "     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n>>>  288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"\n     290:     \n     291:     summary += \"\"\"## Next Steps",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s) - 5} more\\n\"",
        "body": "## TODO Item\n\n**Description**: s) - 5} more\\n\"\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 288  \n**Priority**: medium  \n\n### Context\n```text\n     285:             for todo in todos[:5]:  # Show first 5\n     286:                 summary += f\"- **{todo['file']}:{todo['line']}** - {todo['text'][:100]}\\n\"\n     287:             if len(todos) > 5:\n>>>  288:                 summary += f\"- ... and {len(todos) - 5} more\\n\"\n     289:             summary += \"\\n\"\n     290:     \n     291:     summary += \"\"\"## Next Steps\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 293,
        "text": "all generated issues",
        "type": "REVIEW",
        "context": "     290:     \n     291:     summary += \"\"\"## Next Steps\n     292: \n>>>  293: 1. Review all generated issues\n     294: 2. Prioritize based on business impact\n     295: 3. Assign to appropriate team members\n     296: 4. Create milestones for related issues",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] all generated issues",
        "body": "## REVIEW Item\n\n**Description**: all generated issues\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 293  \n**Priority**: medium  \n\n### Context\n```text\n     290:     \n     291:     summary += \"\"\"## Next Steps\n     292: \n>>>  293: 1. Review all generated issues\n     294: 2. Prioritize based on business impact\n     295: 3. Assign to appropriate team members\n     296: 4. Create milestones for related issues\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 301,
        "text": "has been converted to a GitHub issue with:",
        "type": "TODO",
        "context": "     298: \n     299: ## Issue Templates Generated\n     300: \n>>>  301: Each TODO has been converted to a GitHub issue with:\n     302: - Descriptive title\n     303: - Full context and file location\n     304: - Priority and labels",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] has been converted to a GitHub issue with:",
        "body": "## TODO Item\n\n**Description**: has been converted to a GitHub issue with:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 301  \n**Priority**: medium  \n\n### Context\n```text\n     298: \n     299: ## Issue Templates Generated\n     300: \n>>>  301: Each TODO has been converted to a GitHub issue with:\n     302: - Descriptive title\n     303: - Full context and file location\n     304: - Priority and labels\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 309,
        "text": "to GitHub Issues conversion script.*",
        "type": "TODO",
        "context": "     306: - Additional metadata\n     307: \n     308: ---\n>>>  309: *This report is automatically generated by the TODO to GitHub Issues conversion script.*\n     310: \"\"\"\n     311:     \n     312:     return summary",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] to GitHub Issues conversion script.*",
        "body": "## TODO Item\n\n**Description**: to GitHub Issues conversion script.*\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 309  \n**Priority**: medium  \n\n### Context\n```text\n     306: - Additional metadata\n     307: \n     308: ---\n>>>  309: *This report is automatically generated by the TODO to GitHub Issues conversion script.*\n     310: \"\"\"\n     311:     \n     312:     return summary\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 316,
        "text": "/TBD/FIXME items...\")",
        "type": "TODO",
        "context": "     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TODO] /TBD/FIXME items...\")",
        "body": "## TODO Item\n\n**Description**: /TBD/FIXME items...\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 316  \n**Priority**: high  \n\n### Context\n```text\n     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 316,
        "text": "/FIXME items...\")",
        "type": "TBD",
        "context": "     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()",
        "priority": "high",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      },
      "issue_template": {
        "title": "[TBD] /FIXME items...\")",
        "body": "## TBD Item\n\n**Description**: /FIXME items...\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 316  \n**Priority**: high  \n\n### Context\n```text\n     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "bug",
          "todo",
          "priority:high",
          "maintenance"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 316,
        "text": "items...\")",
        "type": "FIXME",
        "context": "     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[FIXME] items...\")",
        "body": "## FIXME Item\n\n**Description**: items...\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 316  \n**Priority**: medium  \n\n### Context\n```text\n     313: \n     314: def main():\n     315:     \"\"\"Main function\"\"\"\n>>>  316:     print(\"Scanning codebase for TODO/TBD/FIXME items...\")\n     317:     \n     318:     # Get git info\n     319:     git_info = get_git_info()\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 322,
        "text": "s = scan_for_todos()",
        "type": "TODO",
        "context": "     319:     git_info = get_git_info()\n     320:     \n     321:     # Scan for TODOs\n>>>  322:     todos = scan_for_todos()\n     323:     \n     324:     if not todos:\n     325:         print(\"No TODO items found!\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s = scan_for_todos()",
        "body": "## TODO Item\n\n**Description**: s = scan_for_todos()\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 322  \n**Priority**: medium  \n\n### Context\n```text\n     319:     git_info = get_git_info()\n     320:     \n     321:     # Scan for TODOs\n>>>  322:     todos = scan_for_todos()\n     323:     \n     324:     if not todos:\n     325:         print(\"No TODO items found!\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 325,
        "text": "items found!\")",
        "type": "TODO",
        "context": "     322:     todos = scan_for_todos()\n     323:     \n     324:     if not todos:\n>>>  325:         print(\"No TODO items found!\")\n     326:         return 0\n     327:     \n     328:     print(f\"Found {len(todos)} TODO items\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] items found!\")",
        "body": "## TODO Item\n\n**Description**: items found!\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 325  \n**Priority**: medium  \n\n### Context\n```text\n     322:     todos = scan_for_todos()\n     323:     \n     324:     if not todos:\n>>>  325:         print(\"No TODO items found!\")\n     326:         return 0\n     327:     \n     328:     print(f\"Found {len(todos)} TODO items\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 328,
        "text": "s)} TODO items\")",
        "type": "TODO",
        "context": "     325:         print(\"No TODO items found!\")\n     326:         return 0\n     327:     \n>>>  328:     print(f\"Found {len(todos)} TODO items\")\n     329:     \n     330:     # Group by category\n     331:     categories = group_todos_by_category(todos)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s)} TODO items\")",
        "body": "## TODO Item\n\n**Description**: s)} TODO items\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 328  \n**Priority**: medium  \n\n### Context\n```text\n     325:         print(\"No TODO items found!\")\n     326:         return 0\n     327:     \n>>>  328:     print(f\"Found {len(todos)} TODO items\")\n     329:     \n     330:     # Group by category\n     331:     categories = group_todos_by_category(todos)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 331,
        "text": "s_by_category(todos)",
        "type": "TODO",
        "context": "     328:     print(f\"Found {len(todos)} TODO items\")\n     329:     \n     330:     # Group by category\n>>>  331:     categories = group_todos_by_category(todos)\n     332:     \n     333:     # Generate issue templates\n     334:     issue_templates = []",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_by_category(todos)",
        "body": "## TODO Item\n\n**Description**: s_by_category(todos)\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 331  \n**Priority**: medium  \n\n### Context\n```text\n     328:     print(f\"Found {len(todos)} TODO items\")\n     329:     \n     330:     # Group by category\n>>>  331:     categories = group_todos_by_category(todos)\n     332:     \n     333:     # Generate issue templates\n     334:     issue_templates = []\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 335,
        "text": "in todos:",
        "type": "TODO",
        "context": "     332:     \n     333:     # Generate issue templates\n     334:     issue_templates = []\n>>>  335:     for todo in todos:\n     336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n     338:             'todo': todo,",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] in todos:",
        "body": "## TODO Item\n\n**Description**: in todos:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 335  \n**Priority**: medium  \n\n### Context\n```text\n     332:     \n     333:     # Generate issue templates\n     334:     issue_templates = []\n>>>  335:     for todo in todos:\n     336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n     338:             'todo': todo,\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 336,
        "text": ", git_info)",
        "type": "TODO",
        "context": "     333:     # Generate issue templates\n     334:     issue_templates = []\n     335:     for todo in todos:\n>>>  336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n     338:             'todo': todo,\n     339:             'issue_template': issue_template",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] , git_info)",
        "body": "## TODO Item\n\n**Description**: , git_info)\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 336  \n**Priority**: medium  \n\n### Context\n```text\n     333:     # Generate issue templates\n     334:     issue_templates = []\n     335:     for todo in todos:\n>>>  336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n     338:             'todo': todo,\n     339:             'issue_template': issue_template\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 338,
        "text": "': todo,",
        "type": "TODO",
        "context": "     335:     for todo in todos:\n     336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n>>>  338:             'todo': todo,\n     339:             'issue_template': issue_template\n     340:         })\n     341:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] ': todo,",
        "body": "## TODO Item\n\n**Description**: ': todo,\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 338  \n**Priority**: medium  \n\n### Context\n```text\n     335:     for todo in todos:\n     336:         issue_template = create_github_issue_template(todo, git_info)\n     337:         issue_templates.append({\n>>>  338:             'todo': todo,\n     339:             'issue_template': issue_template\n     340:         })\n     341:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 346,
        "text": "s': len(todos),",
        "type": "TODO",
        "context": "     343:     results = {\n     344:         'scan_date': datetime.now().isoformat(),\n     345:         'git_info': git_info,\n>>>  346:         'total_todos': len(todos),\n     347:         'categories': categories,\n     348:         'issue_templates': issue_templates\n     349:     }",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s': len(todos),",
        "body": "## TODO Item\n\n**Description**: s': len(todos),\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 346  \n**Priority**: medium  \n\n### Context\n```text\n     343:     results = {\n     344:         'scan_date': datetime.now().isoformat(),\n     345:         'git_info': git_info,\n>>>  346:         'total_todos': len(todos),\n     347:         'categories': categories,\n     348:         'issue_templates': issue_templates\n     349:     }\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 352,
        "text": "_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:",
        "type": "TODO",
        "context": "     349:     }\n     350:     \n     351:     # Write JSON report\n>>>  352:     with open('REPORTS/TODO_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:\n     353:         json.dump(results, f, indent=2)\n     354:     \n     355:     # Generate summary report",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:",
        "body": "## TODO Item\n\n**Description**: _TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 352  \n**Priority**: medium  \n\n### Context\n```text\n     349:     }\n     350:     \n     351:     # Write JSON report\n>>>  352:     with open('REPORTS/TODO_TO_ISSUES_CONVERSION.json', 'w', encoding='utf-8') as f:\n     353:         json.dump(results, f, indent=2)\n     354:     \n     355:     # Generate summary report\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 357,
        "text": "_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:",
        "type": "TODO",
        "context": "     354:     \n     355:     # Generate summary report\n     356:     summary = generate_issue_summary(categories)\n>>>  357:     with open('REPORTS/TODO_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:\n     358:         f.write(summary)\n     359:     \n     360:     # Print summary",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:",
        "body": "## TODO Item\n\n**Description**: _TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 357  \n**Priority**: medium  \n\n### Context\n```text\n     354:     \n     355:     # Generate summary report\n     356:     summary = generate_issue_summary(categories)\n>>>  357:     with open('REPORTS/TODO_TO_ISSUES_SUMMARY.md', 'w', encoding='utf-8') as f:\n     358:         f.write(summary)\n     359:     \n     360:     # Print summary\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 361,
        "text": "to GitHub Issues Conversion Complete!\")",
        "type": "TODO",
        "context": "     358:         f.write(summary)\n     359:     \n     360:     # Print summary\n>>>  361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] to GitHub Issues Conversion Complete!\")",
        "body": "## TODO Item\n\n**Description**: to GitHub Issues Conversion Complete!\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 361  \n**Priority**: medium  \n\n### Context\n```text\n     358:         f.write(summary)\n     359:     \n     360:     # Print summary\n>>>  361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 362,
        "text": "s found: {len(todos)}\")",
        "type": "TODO",
        "context": "     359:     \n     360:     # Print summary\n     361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n>>>  362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s found: {len(todos)}\")",
        "body": "## TODO Item\n\n**Description**: s found: {len(todos)}\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 362  \n**Priority**: medium  \n\n### Context\n```text\n     359:     \n     360:     # Print summary\n     361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n>>>  362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 364,
        "text": "s_in_category in categories.items():",
        "type": "TODO",
        "context": "     361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n>>>  364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:\n     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     ",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_in_category in categories.items():",
        "body": "## TODO Item\n\n**Description**: s_in_category in categories.items():\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 364  \n**Priority**: medium  \n\n### Context\n```text\n     361:     print(f\"\\nTODO to GitHub Issues Conversion Complete!\")\n     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n>>>  364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:\n     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 365,
        "text": "s_in_category:",
        "type": "TODO",
        "context": "     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():\n>>>  365:         if todos_in_category:\n     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_in_category:",
        "body": "## TODO Item\n\n**Description**: s_in_category:\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 365  \n**Priority**: medium  \n\n### Context\n```text\n     362:     print(f\"Total TODOs found: {len(todos)}\")\n     363:     \n     364:     for category, todos_in_category in categories.items():\n>>>  365:         if todos_in_category:\n     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 366,
        "text": "s_in_category)}\")",
        "type": "TODO",
        "context": "     363:     \n     364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:\n>>>  366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")\n     369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] s_in_category)}\")",
        "body": "## TODO Item\n\n**Description**: s_in_category)}\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 366  \n**Priority**: medium  \n\n### Context\n```text\n     363:     \n     364:     for category, todos_in_category in categories.items():\n     365:         if todos_in_category:\n>>>  366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")\n     369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 369,
        "text": "_TO_ISSUES_CONVERSION.json\")",
        "type": "TODO",
        "context": "     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")\n>>>  369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")\n     370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _TO_ISSUES_CONVERSION.json\")",
        "body": "## TODO Item\n\n**Description**: _TO_ISSUES_CONVERSION.json\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 369  \n**Priority**: medium  \n\n### Context\n```text\n     366:             print(f\"- {category.replace('_', ' ').title()}: {len(todos_in_category)}\")\n     367:     \n     368:     print(f\"\\nReports generated:\")\n>>>  369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")\n     370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 370,
        "text": "_TO_ISSUES_SUMMARY.md\")",
        "type": "TODO",
        "context": "     367:     \n     368:     print(f\"\\nReports generated:\")\n     369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")\n>>>  370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")\n     373:     print(f\"1. Review the generated issue templates\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[TODO] _TO_ISSUES_SUMMARY.md\")",
        "body": "## TODO Item\n\n**Description**: _TO_ISSUES_SUMMARY.md\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 370  \n**Priority**: medium  \n\n### Context\n```text\n     367:     \n     368:     print(f\"\\nReports generated:\")\n     369:     print(f\"- REPORTS/TODO_TO_ISSUES_CONVERSION.json\")\n>>>  370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")\n     373:     print(f\"1. Review the generated issue templates\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\todo_to_issues_conversion.py",
        "line": 373,
        "text": "the generated issue templates\")",
        "type": "REVIEW",
        "context": "     370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")\n>>>  373:     print(f\"1. Review the generated issue templates\")\n     374:     print(f\"2. Create GitHub issues using the templates\")\n     375:     print(f\"3. Assign appropriate labels and priorities\")\n     376:     print(f\"4. Track progress in your project management tool\")",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] the generated issue templates\")",
        "body": "## REVIEW Item\n\n**Description**: the generated issue templates\")\n\n**File**: `.\\scripts\\todo_to_issues_conversion.py`  \n**Line**: 373  \n**Priority**: medium  \n\n### Context\n```text\n     370:     print(f\"- REPORTS/TODO_TO_ISSUES_SUMMARY.md\")\n     371:     \n     372:     print(f\"\\nNext steps:\")\n>>>  373:     print(f\"1. Review the generated issue templates\")\n     374:     print(f\"2. Create GitHub issues using the templates\")\n     375:     print(f\"3. Assign appropriate labels and priorities\")\n     376:     print(f\"4. Track progress in your project management tool\")\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    },
    {
      "todo": {
        "file": ".\\scripts\\version_bump.py",
        "line": 136,
        "text": "changes: git show HEAD\")",
        "type": "REVIEW",
        "context": "     133:     print(f\"\ud83d\udd27 Bump Type: {bump_type}\")\n     134:     print(f\"\ud83c\udff7\ufe0f  Git Tag: v{new_version}\")\n     135:     print(\"\\n\ud83d\udccb Next Steps:\")\n>>>  136:     print(\"  1. Review changes: git show HEAD\")\n     137:     print(\"  2. Push to remote: git push origin main --tags\")\n     138:     print(\"  3. Sync docs: npm run version:sync\")\n     139:     print(\"=\" * 50)",
        "priority": "medium",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      },
      "issue_template": {
        "title": "[REVIEW] changes: git show HEAD\")",
        "body": "## REVIEW Item\n\n**Description**: changes: git show HEAD\")\n\n**File**: `.\\scripts\\version_bump.py`  \n**Line**: 136  \n**Priority**: medium  \n\n### Context\n```text\n     133:     print(f\"\ud83d\udd27 Bump Type: {bump_type}\")\n     134:     print(f\"\ud83c\udff7\ufe0f  Git Tag: v{new_version}\")\n     135:     print(\"\\n\ud83d\udccb Next Steps:\")\n>>>  136:     print(\"  1. Review changes: git show HEAD\")\n     137:     print(\"  2. Push to remote: git push origin main --tags\")\n     138:     print(\"  3. Sync docs: npm run version:sync\")\n     139:     print(\"=\" * 50)\n```\n\n### Acceptance Criteria\n- [ ] TODO item has been addressed\n- [ ] Code has been tested\n- [ ] Documentation updated (if applicable)\n- [ ] No regressions introduced\n\n### Additional Notes\n- **Discovered**: 2025-10-28\n- **Commit**: `f390d2c3`\n- **Branch**: `main`\n\n---\n*This issue was automatically created from a TODO comment in the codebase.*\n",
        "labels": [
          "todo",
          "maintenance",
          "priority:medium"
        ]
      }
    }
  ]
}