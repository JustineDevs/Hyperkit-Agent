name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Install Node.js dependencies
        run: npm ci
      
      - name: Run Python tests
        run: |
          pytest tests/ --cov=core --cov=services --cov-report=xml
      
      - name: Run linting
        run: |
          flake8 core/ services/ --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check core/ services/
          mypy core/ services/ --ignore-missing-imports
      
      - name: Run security checks
        run: |
          bandit -r core/ services/ -f json -o bandit-report.json || true
          safety check --json --output safety-report.json || true
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  changeset-check:
    name: Changeset Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check changeset status
        run: npm run changeset:status
      
      - name: Verify changeset presence
        run: |
          echo "Checking if PR has changeset..."
          if ! npm run changeset:check; then
            echo "❌ No changeset found for this PR"
            echo "Please run 'npm run changeset:add' to create a changeset"
            exit 1
          else
            echo "✅ Changeset found for this PR"
          fi

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, changeset-check]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Python package
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      
      - name: Create Release Pull Request
        uses: changesets/action@v1
        with:
          publish: npm run changeset:publish
          title: "Release: Version Packages"
          commit: "chore: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
