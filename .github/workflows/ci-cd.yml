name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r hyperkit-agent/requirements.txt
          pip install pytest pytest-cov
      
      - name: Run Python tests
        run: |
          cd hyperkit-agent
          pytest tests/ --cov=core --cov=services --cov-report=xml
      
      - name: Run linting
        run: |
          cd hyperkit-agent
          flake8 core/ services/ --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check core/ services/
          mypy core/ services/ --ignore-missing-imports
      
      - name: Run security checks
        run: |
          cd hyperkit-agent
          bandit -r core/ services/ -f json -o bandit-report.json || true
          safety check --json --output safety-report.json || true
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  changeset-check:
    name: Changeset Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check changeset status
        run: |
          echo "Checking changeset status..."
          if [ -d ".changeset" ]; then
            echo "✅ Changeset directory found"
            ls -la .changeset/
          else
            echo "❌ No changeset directory found"
            exit 1
          fi
      
      - name: Verify changeset presence
        run: |
          echo "Checking if PR has changeset..."
          if [ -d ".changeset" ] && [ "$(find .changeset -name "*.md" -not -name "README.md" | wc -l)" -gt 0 ]; then
            echo "✅ Changeset found for this PR"
            find .changeset -name "*.md" -not -name "README.md"
          else
            echo "❌ No changeset found for this PR"
            echo "Please run 'npx changeset' to create a changeset"
            exit 1
          fi

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, changeset-check]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Python package
        run: |
          cd hyperkit-agent
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: hyperkit-agent/dist/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: hyperkit-agent/dist/
      
      - name: Create Release
        run: |
          echo "Creating release from changeset..."
          if [ -d ".changeset" ]; then
            echo "Changeset directory found, creating release"
            # For now, just echo the changeset files
            find .changeset -name "*.md" -not -name "README.md"
          else
            echo "No changeset directory found"
          fi
